{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\home\\\\homegallery\\\\HomeGallery.js\",\n    _s = $RefreshSig$();\n\nimport Gallery from \"react-grid-gallery\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport * as config from \"../../../config.json\";\nimport { search } from \"../../search/util\";\nimport './HomeGallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function HomeGallery(props) {\n  _s();\n\n  const [images, setImages] = useState([]);\n\n  const formatDate = date => date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 9 ? '0' : '') + date.getDate();\n\n  const getFirstDate = date => (date.getMonth() <= 2 ? date.getFullYear() - 1 : date.getFullYear()) + '-' + (date.getMonth() < 9 ? '0' : '') + ((date.getMonth() <= 2 ? 11 - date.getMonth() : date.getMonth() - 3) + 1) + '-01';\n\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n  };\n\n  const getImages = useCallback(async () => {\n    const cConfig = config.default.config.links.tmdb;\n    const gConfig = config.default.config.links.rawg;\n    const currDate = new Date();\n    const fromDate = getFirstDate(currDate);\n    const toDate = formatDate(currDate);\n    const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor(Math.random() * 10 + 1)}`);\n    const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor(Math.random() * 10 + 1)}`);\n    const gameImagesResults = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor(Math.random() * 10 + 1)}`);\n    if (!movieImagesResults || !tvImagesResults || !gameImagesResults) return;\n    const movieImagesData = movieImagesResults[0].data.results;\n    const tvImagesData = tvImagesResults[0].data.results;\n    const gameImagesData = gameImagesResults[0].data.results;\n    const movieImagesProps = movieImagesData.filter(movie => movie.backdrop_path).map((movie, i) => ({\n      src: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169,\n      tags: [{\n        title: \"even\",\n        value: i % 2 === 0\n      }]\n    }));\n    const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map((tv, i) => ({\n      src: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    const gameImagesProps = gameImagesData.filter(game => game.background_image).map((game, i) => ({\n      src: game.background_image,\n      thumbnail: game.background_image,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    let movieIndexes = shuffleArray(Array.from(Array(movieImagesProps.length).keys()));\n    let tvIndexes = shuffleArray(Array.from(Array(tvImagesProps.length).keys()));\n    let gameIndexes = shuffleArray(Array.from(Array(gameImagesProps.length).keys()));\n    const imageProps = shuffleArray(movieIndexes.map(i => movieImagesProps[i]).concat(tvIndexes.map(i => tvImagesProps[i])).concat(gameIndexes.map(i => gameImagesProps[i])));\n    console.log(imageProps);\n    setImages(imageProps);\n  }, []);\n  useEffect(() => {\n    getImages();\n  }, [getImages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-gradient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container\",\n      style: {\n        display: \"block\",\n        minHeight: \"1px\",\n        width: \"200%\",\n        overflow: \"hidden\",\n        position: 'absolute',\n        cursor: 'none',\n        zIndex: '-2',\n        top: '-30%',\n        left: '-30%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Gallery, {\n        images: images,\n        enableLightbox: false,\n        enableImageSelection: false,\n        maxRows: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomeGallery, \"XUtKGidRnrdJ0LEaWWFB89HIJpE=\");\n\n_c = HomeGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeGallery\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/home/homegallery/HomeGallery.js"],"names":["Gallery","React","useCallback","useEffect","useState","config","search","HomeGallery","props","images","setImages","formatDate","date","getFullYear","getMonth","getDate","getFirstDate","shuffleArray","array","i","length","j","Math","floor","random","getImages","cConfig","default","links","tmdb","gConfig","rawg","currDate","Date","fromDate","toDate","movieImagesResults","discovermovie","link","api_key","keys","query","tvImagesResults","discovertv","gameImagesResults","list","movieImagesData","data","results","tvImagesData","gameImagesData","movieImagesProps","filter","movie","backdrop_path","map","src","image","thumbnail","thumbnailWidth","thumbnailHeight","tags","title","value","tvImagesProps","tv","gameImagesProps","game","background_image","movieIndexes","Array","from","tvIndexes","gameIndexes","imageProps","concat","console","log","display","minHeight","width","overflow","position","cursor","zIndex","top","left"],"mappings":"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","sourcesContent":["import Gallery from \"react-grid-gallery\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport * as config from \"../../../config.json\";\r\nimport {search} from \"../../search/util\";\r\nimport './HomeGallery.css';\r\n\r\nexport function HomeGallery(props) {\r\n    const [images, setImages] = useState([]);\r\n\r\n    const formatDate = date => date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 9 ? '0' : '') + date.getDate();\r\n    const getFirstDate = date => (date.getMonth() <= 2 ? date.getFullYear() - 1 : date.getFullYear()) + '-' + (date.getMonth() < 9 ? '0' : '') + ((date.getMonth() <= 2 ? 11 - date.getMonth() : (date.getMonth() - 3)) + 1) + '-01';\r\n    const shuffleArray = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n\r\n    const getImages = useCallback(async() => {\r\n        const cConfig = config.default.config.links.tmdb;\r\n        const gConfig = config.default.config.links.rawg;\r\n\r\n        const currDate = new Date();\r\n\r\n        const fromDate = getFirstDate(currDate);\r\n        const toDate = formatDate(currDate);\r\n\r\n        const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor((Math.random() * 10) + 1)}`);\r\n\r\n        const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor((Math.random() * 10) + 1)}`);\r\n\r\n        const gameImagesResults = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor((Math.random() * 10) + 1)}`);\r\n\r\n        if (!movieImagesResults || !tvImagesResults || !gameImagesResults) return\r\n            ;\r\n        const movieImagesData = movieImagesResults[0].data.results;\r\n\r\n        const tvImagesData = tvImagesResults[0].data.results;\r\n\r\n        const gameImagesData = gameImagesResults[0].data.results;\r\n\r\n        const movieImagesProps = movieImagesData.filter(movie =>movie.backdrop_path).map((movie, i) => ({\r\n            src: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169,\r\n            tags: [{title: \"even\", value: i % 2 === 0}]\r\n        }));\r\n\r\n        const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map((tv, i) => ({\r\n            src: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        const gameImagesProps = gameImagesData.filter(game => game.background_image).map((game, i) => ({\r\n            src: game.background_image,\r\n            thumbnail: game.background_image,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        let movieIndexes = shuffleArray(Array.from(Array(movieImagesProps.length).keys()));\r\n        let tvIndexes = shuffleArray(Array.from(Array(tvImagesProps.length).keys()));\r\n        let gameIndexes = shuffleArray(Array.from(Array(gameImagesProps.length).keys()));\r\n\r\n        const imageProps = shuffleArray(\r\n            movieIndexes\r\n                .map(i => movieImagesProps[i])\r\n            .concat(tvIndexes\r\n                .map(i => tvImagesProps[i])\r\n            )\r\n            .concat(gameIndexes\r\n                .map(i => gameImagesProps[i])\r\n            )\r\n        );\r\n\r\n        console.log(imageProps);\r\n\r\n        setImages(imageProps);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getImages()\r\n    }, [getImages]);\r\n\r\n    return (\r\n        <>\r\n            <div className='gallery-gradient' />\r\n            <div className='gallery-container' style={{\r\n                display: \"block\",\r\n                minHeight: \"1px\",\r\n                width: \"200%\",\r\n                overflow: \"hidden\",\r\n                position: 'absolute',\r\n                cursor: 'none',\r\n                zIndex: '-2',\r\n                top: '-30%',\r\n                left: '-30%'\r\n            }}>\r\n                <Gallery\r\n                    images={images}\r\n                    enableLightbox={false}\r\n                    enableImageSelection={false}\r\n                    maxRows={6}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}