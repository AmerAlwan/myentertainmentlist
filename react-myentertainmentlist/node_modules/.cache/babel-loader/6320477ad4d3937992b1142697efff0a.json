{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\home\\\\homegallery\\\\HomeGallery.js\",\n    _s = $RefreshSig$();\n\nimport Gallery from \"react-grid-gallery\";\nimport React, { useCallback, useEffect, useLayoutEffect, useState } from \"react\";\nimport * as config from \"../../../config.json\";\nimport { search } from \"../../search/util\";\nimport './HomeGallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction waitForElm(selector) {\n  return new Promise(resolve => {\n    if (document.querySelector(selector)) {\n      return resolve(document.querySelector(selector));\n    }\n\n    const observer = new MutationObserver(mutations => {\n      if (document.querySelector(selector)) {\n        resolve(document.querySelector(selector));\n        observer.disconnect();\n      }\n    });\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  });\n}\n\nexport function HomeGallery(props) {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const [windowResize, setWindowResize] = useState(false);\n  console.log(window.innerWidth / 100); // const numCols = 6; // ((3/4) * Math.floor(window.innerWidth / 100)) - (5/4); // 10\n  // const yOffset = -15; //-100 // -15\n  // let translateYVal = yOffset;\n  // const translateYChange = 65; //-Math.floor(window.innerHeight / 100) + 16; //64 // 9\n  // let translateY = translateYVal;\n\n  let ogX = -100,\n      ogY = -400,\n      posX = ogX,\n      posY = ogY,\n      ogTranslateY = 61,\n      numOfRows = 1;\n  let translateX = 265,\n      translateY = ogTranslateY,\n      tileHeight = 175;\n\n  const updateTiles = () => {\n    console.log(document.querySelectorAll(\".ReactGridGallery_tile\"));\n    document.querySelectorAll(\".ReactGridGallery_tile\").forEach((tile, i) => {\n      tile.style.transform = 'scaleX(1) scaleY(1) scaleZ(1) rotateX(-3deg) rotateY(-34deg) rotateZ(16deg) translateX(0px) translateY(0px) translateZ(0px) skewX(-14deg) skewY(-7deg)';\n      tile.style.left = posX + 'px';\n      tile.style.top = posY + 'px';\n      posX += translateX;\n      posY += translateY;\n\n      if (posX > window.innerWidth) {\n        posX = ogX;\n        posY = tileHeight * numOfRows + ogY;\n        translateY = ogTranslateY;\n        numOfRows++;\n      }\n    });\n  };\n\n  useLayoutEffect(() => {\n    waitForElm(\".ReactGridGallery_tile\").then(elm => {\n      updateTiles();\n    });\n    window.addEventListener('resize', updateTiles);\n    return () => window.removeEventListener('resize', updateTiles);\n  }, []);\n\n  const formatDate = date => date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 9 ? '0' : '') + date.getDate();\n\n  const getFirstDate = date => (date.getMonth() <= 2 ? date.getFullYear() - 1 : date.getFullYear()) + '-' + (date.getMonth() < 9 ? '0' : '') + ((date.getMonth() <= 2 ? 11 - date.getMonth() : date.getMonth() - 3) + 1) + '-01';\n\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n  };\n\n  const getImages = useCallback(async () => {\n    const cConfig = config.default.config.links.tmdb;\n    const gConfig = config.default.config.links.rawg;\n    const currDate = new Date();\n    const fromDate = getFirstDate(currDate);\n    const toDate = formatDate(currDate);\n    const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor(Math.random() * 5 + 1)}`);\n    const movieImagesResults2 = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor(5 + Math.random() * 5 + 1)}`);\n    const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor(Math.random() * 5 + 1)}`);\n    const tvImagesResults2 = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor(5 + Math.random() * 5 + 1)}`);\n    const gameImagesResults = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor(Math.random() * 5 + 1)}`);\n    const gameImagesResults2 = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor(5 + Math.random() * 5 + 1)}`);\n    if (!movieImagesResults || !movieImagesResults2 || !tvImagesResults || !tvImagesResults2 || !gameImagesResults || !gameImagesResults2) return;\n    const movieImagesData = movieImagesResults[0].data.results.concat(movieImagesResults2[0].data.results);\n    const tvImagesData = tvImagesResults[0].data.results.concat(tvImagesResults2[0].data.results);\n    const gameImagesData = gameImagesResults[0].data.results.concat(gameImagesResults2[0].data.results);\n    const movieImagesProps = movieImagesData.filter(movie => movie.backdrop_path).map((movie, i) => ({\n      src: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map((tv, i) => ({\n      src: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    const gameImagesProps = gameImagesData.filter(game => game.background_image).map((game, i) => ({\n      src: game.background_image,\n      thumbnail: game.background_image,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    let movieIndexes = shuffleArray(Array.from(Array(movieImagesProps.length).keys()));\n    let tvIndexes = shuffleArray(Array.from(Array(tvImagesProps.length).keys()));\n    let gameIndexes = shuffleArray(Array.from(Array(gameImagesProps.length).keys()));\n    const imageProps = shuffleArray(movieIndexes.slice(0, 25).map(i => movieImagesProps[i]).concat(tvIndexes.slice(0, 25).map(i => tvImagesProps[i])).concat(gameIndexes.slice(0, 10).map(i => gameImagesProps[i])));\n    console.log(imageProps);\n    setImages(imageProps);\n  }, []);\n  useEffect(() => {\n    getImages();\n  }, [getImages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-gradient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container\",\n      style: {\n        display: \"block\",\n        minHeight: \"1px\",\n        width: \"200%\",\n        overflow: \"hidden\",\n        position: 'absolute',\n        cursor: 'none',\n        zIndex: '-2',\n        top: '-30%',\n        left: '-30%'\n      },\n      children: images.map((image, i) => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"ReactGridGallery_tile\",\n          src: image.thumbnail,\n          style: {\n            width: image.thumbnailWidth,\n            height: image.thumbnailHeight,\n            position: 'fixed',\n            zIndex: 2000\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomeGallery, \"fqlZwtBb779AF6KlAFKo4yhaFIE=\");\n\n_c = HomeGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeGallery\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/home/homegallery/HomeGallery.js"],"names":["Gallery","React","useCallback","useEffect","useLayoutEffect","useState","config","search","waitForElm","selector","Promise","resolve","document","querySelector","observer","MutationObserver","mutations","disconnect","observe","body","childList","subtree","HomeGallery","props","images","setImages","windowResize","setWindowResize","console","log","window","innerWidth","ogX","ogY","posX","posY","ogTranslateY","numOfRows","translateX","translateY","tileHeight","updateTiles","querySelectorAll","forEach","tile","i","style","transform","left","top","then","elm","addEventListener","removeEventListener","formatDate","date","getFullYear","getMonth","getDate","getFirstDate","shuffleArray","array","length","j","Math","floor","random","getImages","cConfig","default","links","tmdb","gConfig","rawg","currDate","Date","fromDate","toDate","movieImagesResults","discovermovie","link","api_key","keys","query","movieImagesResults2","tvImagesResults","discovertv","tvImagesResults2","gameImagesResults","list","gameImagesResults2","movieImagesData","data","results","concat","tvImagesData","gameImagesData","movieImagesProps","filter","movie","backdrop_path","map","src","image","thumbnail","thumbnailWidth","thumbnailHeight","tvImagesProps","tv","gameImagesProps","game","background_image","movieIndexes","Array","from","tvIndexes","gameIndexes","imageProps","slice","display","minHeight","width","overflow","position","cursor","zIndex","height"],"mappings":"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","sourcesContent":["import Gallery from \"react-grid-gallery\";\r\nimport React, {useCallback, useEffect, useLayoutEffect, useState} from \"react\";\r\nimport * as config from \"../../../config.json\";\r\nimport {search} from \"../../search/util\";\r\nimport './HomeGallery.css';\r\n\r\nfunction waitForElm(selector) {\r\n    return new Promise(resolve => {\r\n        if (document.querySelector(selector)) {\r\n            return resolve(document.querySelector(selector));\r\n        }\r\n\r\n        const observer = new MutationObserver(mutations => {\r\n            if (document.querySelector(selector)) {\r\n                resolve(document.querySelector(selector));\r\n                observer.disconnect();\r\n            }\r\n        });\r\n\r\n        observer.observe(document.body, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    });\r\n}\r\n\r\nexport function HomeGallery(props) {\r\n    const [images, setImages] = useState([]);\r\n    const [windowResize, setWindowResize] = useState(false);\r\n    console.log((window.innerWidth / 100));\r\n    // const numCols = 6; // ((3/4) * Math.floor(window.innerWidth / 100)) - (5/4); // 10\r\n    // const yOffset = -15; //-100 // -15\r\n    // let translateYVal = yOffset;\r\n    // const translateYChange = 65; //-Math.floor(window.innerHeight / 100) + 16; //64 // 9\r\n    // let translateY = translateYVal;\r\n    let ogX = -100, ogY = -400, posX = ogX, posY = ogY, ogTranslateY = 61, numOfRows = 1;\r\n    let translateX = 265, translateY = ogTranslateY, tileHeight = 175;\r\n    const updateTiles = () => {\r\n        console.log(document.querySelectorAll(\".ReactGridGallery_tile\"));\r\n        document.querySelectorAll(\".ReactGridGallery_tile\").forEach((tile, i) => {\r\n            tile.style.transform = 'scaleX(1) scaleY(1) scaleZ(1) rotateX(-3deg) rotateY(-34deg) rotateZ(16deg) translateX(0px) translateY(0px) translateZ(0px) skewX(-14deg) skewY(-7deg)';\r\n            tile.style.left = posX + 'px';\r\n            tile.style.top = posY + 'px';\r\n            posX += translateX;\r\n            posY += translateY;\r\n            if (posX > window.innerWidth) {\r\n                posX = ogX;\r\n                posY = tileHeight * numOfRows + ogY;\r\n                translateY = ogTranslateY;\r\n                numOfRows++;\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        waitForElm(\".ReactGridGallery_tile\").then((elm) => {\r\n            updateTiles();\r\n        });\r\n        window.addEventListener('resize', updateTiles);\r\n        return () => window.removeEventListener('resize', updateTiles);\r\n    }, []);\r\n\r\n    const formatDate = date => date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 9 ? '0' : '') + date.getDate();\r\n    const getFirstDate = date => (date.getMonth() <= 2 ? date.getFullYear() - 1 : date.getFullYear()) + '-' + (date.getMonth() < 9 ? '0' : '') + ((date.getMonth() <= 2 ? 11 - date.getMonth() : (date.getMonth() - 3)) + 1) + '-01';\r\n    const shuffleArray = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n\r\n    const getImages = useCallback(async() => {\r\n        const cConfig = config.default.config.links.tmdb;\r\n        const gConfig = config.default.config.links.rawg;\r\n\r\n        const currDate = new Date();\r\n\r\n        const fromDate = getFirstDate(currDate);\r\n        const toDate = formatDate(currDate);\r\n\r\n        const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor((Math.random() * 5) + 1)}`);\r\n        const movieImagesResults2 = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor(5 + (Math.random() * 5) + 1)}`);\r\n\r\n        const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor((Math.random() * 5) + 1)}`);\r\n        const tvImagesResults2 = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor(5 + (Math.random() * 5) + 1)}`);\r\n\r\n        const gameImagesResults = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor((Math.random() * 5) + 1)}`);\r\n        const gameImagesResults2 = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor(5 + (Math.random() * 5) + 1)}`);\r\n\r\n        if (!movieImagesResults  || ! movieImagesResults2 || !tvImagesResults || !tvImagesResults2 || !gameImagesResults || !gameImagesResults2) return;\r\n        const movieImagesData = movieImagesResults[0].data.results.concat(movieImagesResults2[0].data.results);\r\n\r\n        const tvImagesData = tvImagesResults[0].data.results.concat(tvImagesResults2[0].data.results);\r\n\r\n        const gameImagesData = gameImagesResults[0].data.results.concat(gameImagesResults2[0].data.results);\r\n\r\n        const movieImagesProps = movieImagesData.filter(movie =>movie.backdrop_path).map((movie, i) => ({\r\n            src: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map((tv, i) => ({\r\n            src: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        const gameImagesProps = gameImagesData.filter(game => game.background_image).map((game, i) => ({\r\n            src: game.background_image,\r\n            thumbnail: game.background_image,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        let movieIndexes = shuffleArray(Array.from(Array(movieImagesProps.length).keys()));\r\n        let tvIndexes = shuffleArray(Array.from(Array(tvImagesProps.length).keys()));\r\n        let gameIndexes = shuffleArray(Array.from(Array(gameImagesProps.length).keys()));\r\n\r\n        const imageProps = shuffleArray(\r\n            movieIndexes\r\n                .slice(0,25)\r\n                .map(i => movieImagesProps[i])\r\n            .concat(tvIndexes\r\n                .slice(0,25)\r\n                .map(i => tvImagesProps[i])\r\n            )\r\n            .concat(gameIndexes\r\n                .slice(0,10)\r\n                .map(i => gameImagesProps[i])\r\n            )\r\n        );\r\n\r\n        console.log(imageProps);\r\n\r\n        setImages(imageProps);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getImages()\r\n    }, [getImages]);\r\n\r\n    return (\r\n        <>\r\n            <div className='gallery-gradient' />\r\n            <div className='gallery-container' style={{\r\n                display: \"block\",\r\n                minHeight: \"1px\",\r\n                width: \"200%\",\r\n                overflow: \"hidden\",\r\n                position: 'absolute',\r\n                cursor: 'none',\r\n                zIndex: '-2',\r\n                top: '-30%',\r\n                left: '-30%'\r\n            }}>\r\n                {images.map((image, i) => {\r\n                    return (\r\n                    <img key={i}\r\n                        className='ReactGridGallery_tile'\r\n                        src={image.thumbnail}\r\n                        style={{\r\n                            width: image.thumbnailWidth,\r\n                            height: image.thumbnailHeight,\r\n                            position: 'fixed',\r\n                            zIndex: 2000\r\n                        }}\r\n                    />\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}