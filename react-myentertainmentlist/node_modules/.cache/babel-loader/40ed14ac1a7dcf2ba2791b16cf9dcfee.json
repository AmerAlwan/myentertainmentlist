{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\profilepage\\\\medialistcontainer\\\\MediaListContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, Col, Collapse, Image, Row } from \"react-bootstrap\";\nimport './MediaListContainer.css';\nimport { useSelector } from \"react-redux\";\nimport { FlippingCard, FlippingCardBack, FlippingCardFront, TaggedContentCard } from \"react-ui-cards\";\nimport { MediaContainer } from \"./mediacontainer/MediaContainer\";\nimport { AddMediaList } from \"./addmedialist/AddMediaList\";\nimport MedialistService from \"../../backend/medialist.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getMedialistType = type => type === 'MEDIA_MOVIE' && 'movie' || type === 'MEDIA_TV' && 'tv' || type === 'MEDIA_GAME' && 'game' || 'all';\n\nexport function MediaListContainer(props) {\n  _s();\n\n  const [selectedMediaList, setSelectedMediaList] = useState(null);\n  const [addMediaList, setAddMediaList] = useState(false);\n  const [resetMediaList, setResetMediaList] = useState(true);\n  const [mediaLists, setMediaLists] = useState([]);\n  const accessToken = useSelector(state => state.user.accessToken);\n  const numRows = Math.ceil((mediaLists.length + 1) / 3);\n  const numListCols = 3;\n  const isMobile = window.innerWidth <= 768;\n  useEffect(() => {\n    if (resetMediaList) MedialistService.getLists(accessToken).then(response => {\n      if (response.status === 200) {\n        setMediaLists(response.data.slice().sort((cML, pML) => cML.name.localeCompare(pML.name)));\n        setSelectedMediaList(response.data.find(mediaList => selectedMediaList && mediaList.id === selectedMediaList.id) || null);\n        setResetMediaList(false);\n      }\n    });\n  }, [resetMediaList]);\n\n  const deleteMediaList = listId => {\n    MedialistService.deleteMediaList(listId, accessToken).then(response => {\n      console.log(response);\n      setResetMediaList(true);\n    });\n  };\n\n  let mediaListComponents = mediaLists.sort((cML, pML) => cML.name.localeCompare(pML.name)).map((mediaList, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"card-container justify-content-sm-center justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(TaggedContentCard, {\n        href: void 0,\n        onClick: () => {\n          if (selectedMediaList !== null && mediaList.id === selectedMediaList.id) {\n            setSelectedMediaList(null);\n          } else {\n            setSelectedMediaList(mediaList);\n            setAddMediaList(false);\n          }\n        },\n        thumbnail: require(\"../../../images/medialistimages/\" + mediaList.posterName).default,\n        title: mediaList.name,\n        description: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [mediaList.description ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: mediaList.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontStyle: \"italic\"\n            },\n            children: \"No Description...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: () => {\n              deleteMediaList(mediaList.id);\n              setSelectedMediaList(null);\n            },\n            style: {\n              float: 'right'\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this),\n        tags: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        width: 'calc(' + window.innerWidth + 'px  - 10vw',\n        transform: 'translateX(' + -34 * (i % numListCols) + '%)'\n      },\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        in: selectedMediaList && mediaList.id === selectedMediaList.id,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: selectedMediaList && /*#__PURE__*/_jsxDEV(MediaContainer, {\n            mediaList: selectedMediaList,\n            setResetMediaList: setResetMediaList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 55\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, mediaList.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this));\n  mediaListComponents.push( /*#__PURE__*/_jsxDEV(Row, {\n    className: \"card-container justify-content-sm-center\",\n    children: /*#__PURE__*/_jsxDEV(TaggedContentCard, {\n      href: void 0,\n      onClick: () => {\n        setAddMediaList(!addMediaList);\n        setSelectedMediaList(null);\n      },\n      thumbnail: require(\"../../../images/medialistimages/add_new_medialist.png\").default,\n      title: \"Create\",\n      description: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          fontStyle: \"italic\"\n        },\n        children: \"Create New MediaList...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 31\n      }, this),\n      tags: []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)\n  }, 'CREATE_NEW_MEDIALIST', false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this));\n  let mediaListRows = [];\n\n  for (let i = 0; i < numRows; i++) {\n    mediaListRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-sm-center justify-content-md-center\",\n        children: [0, 1, 2].map(col => /*#__PURE__*/_jsxDEV(Col, {\n          xl: 4,\n          xs: 12,\n          children: mediaListComponents[i * 3 + col]\n        }, col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this));\n  }\n\n  mediaListRows.push( /*#__PURE__*/_jsxDEV(Collapse, {\n    in: addMediaList,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: addMediaList && /*#__PURE__*/_jsxDEV(AddMediaList, {\n          addMediaList: addMediaList,\n          setResetMediaList: setResetMediaList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, \"CRATE_NEW_MEDIALIST\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"media-lists-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"media-lists-inner\",\n      children: mediaListRows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MediaListContainer, \"vZ0vAhse0gf2ZCUpaK3QBbtKhgM=\", false, function () {\n  return [useSelector];\n});\n\n_c = MediaListContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaListContainer\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/profilepage/medialistcontainer/MediaListContainer.js"],"names":["React","useEffect","useState","Button","Card","Col","Collapse","Image","Row","useSelector","FlippingCard","FlippingCardBack","FlippingCardFront","TaggedContentCard","MediaContainer","AddMediaList","MedialistService","getMedialistType","type","MediaListContainer","props","selectedMediaList","setSelectedMediaList","addMediaList","setAddMediaList","resetMediaList","setResetMediaList","mediaLists","setMediaLists","accessToken","state","user","numRows","Math","ceil","length","numListCols","isMobile","window","innerWidth","getLists","then","response","status","data","slice","sort","cML","pML","name","localeCompare","find","mediaList","id","deleteMediaList","listId","console","log","mediaListComponents","map","i","require","posterName","default","description","fontStyle","float","width","transform","push","mediaListRows","col"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {Button, Card, Col, Collapse, Image, Row} from \"react-bootstrap\";\r\nimport './MediaListContainer.css';\r\nimport {useSelector} from \"react-redux\";\r\nimport {FlippingCard, FlippingCardBack, FlippingCardFront, TaggedContentCard} from \"react-ui-cards\";\r\nimport {MediaContainer} from \"./mediacontainer/MediaContainer\";\r\nimport {AddMediaList} from \"./addmedialist/AddMediaList\";\r\nimport MedialistService from \"../../backend/medialist.service\";\r\n\r\nconst getMedialistType = type => (type === 'MEDIA_MOVIE' && 'movie') || (type === 'MEDIA_TV' && 'tv') || (type === 'MEDIA_GAME' && 'game') || 'all';\r\n\r\nexport function MediaListContainer(props) {\r\n\r\n    const [selectedMediaList, setSelectedMediaList] = useState(null);\r\n\r\n    const [addMediaList, setAddMediaList] = useState(false);\r\n\r\n    const [resetMediaList, setResetMediaList] = useState(true);\r\n\r\n    const [mediaLists, setMediaLists] = useState([]);\r\n\r\n    const accessToken = useSelector(state => state.user.accessToken);\r\n\r\n    const numRows = Math.ceil((mediaLists.length + 1) / 3);\r\n    const numListCols = 3;\r\n\r\n    const isMobile = window.innerWidth <= 768;\r\n\r\n    useEffect(() => {\r\n        if (resetMediaList)\r\n            MedialistService.getLists(accessToken).then(response => {\r\n                if (response.status === 200) {\r\n                    setMediaLists(response.data.slice().sort((cML, pML) => cML.name.localeCompare(pML.name)));\r\n                    setSelectedMediaList(response.data.find(mediaList => selectedMediaList && mediaList.id === selectedMediaList.id) || null);\r\n                    setResetMediaList(false);\r\n                }\r\n            })\r\n    }, [resetMediaList]);\r\n\r\n    const deleteMediaList = listId => {\r\n        MedialistService.deleteMediaList(listId, accessToken).then(response => {\r\n            console.log(response);\r\n            setResetMediaList(true);\r\n        });\r\n    }\r\n\r\n    let mediaListComponents = mediaLists.sort((cML, pML) => cML.name.localeCompare(pML.name)).map((mediaList, i) => (\r\n        <div key={mediaList.id}>\r\n            <Row className=\"card-container justify-content-sm-center justify-content-md-center\">\r\n                <TaggedContentCard\r\n                    href={void (0)}\r\n                    onClick={() => {\r\n                        if (selectedMediaList !== null && mediaList.id === selectedMediaList.id) {\r\n                            setSelectedMediaList(null);\r\n                        } else {\r\n                            setSelectedMediaList(mediaList);\r\n                            setAddMediaList(false);\r\n                        }\r\n                    }}\r\n                    thumbnail={require(\"../../../images/medialistimages/\" + mediaList.posterName).default}\r\n                    title={mediaList.name}\r\n                    description={(\r\n                        <div>\r\n                            {mediaList.description ?\r\n                                <p>{mediaList.description}</p> :\r\n                                <p style={{fontStyle: \"italic\"}}>No Description...</p>\r\n                            }\r\n                            <Button variant=\"danger\" onClick={() => {\r\n                                deleteMediaList(mediaList.id)\r\n                                setSelectedMediaList(null);\r\n                            }} style={{float: 'right'}}>Delete</Button>\r\n                        </div>\r\n                    )}\r\n                    tags={[]}\r\n                />\r\n            </Row>\r\n            <Row style={{width: 'calc(' + window.innerWidth + 'px  - 10vw', transform: 'translateX('+ (-34 * (i % numListCols)) + '%)'}}>\r\n                    <Collapse in={selectedMediaList && mediaList.id === selectedMediaList.id}>\r\n                        <div>\r\n                                {selectedMediaList && <MediaContainer mediaList={selectedMediaList}\r\n                                                                      setResetMediaList={setResetMediaList}/>}\r\n                        </div>\r\n                    </Collapse>\r\n            </Row>\r\n        </div>\r\n    ))\r\n    mediaListComponents.push((\r\n        <Row className=\"card-container justify-content-sm-center\" key='CREATE_NEW_MEDIALIST'>\r\n            <TaggedContentCard\r\n                href={void (0)}\r\n                onClick={() => {\r\n                    setAddMediaList(!addMediaList);\r\n                    setSelectedMediaList(null);\r\n                }}\r\n                thumbnail={require(\"../../../images/medialistimages/add_new_medialist.png\").default}\r\n                title=\"Create\"\r\n                description={(<p style={{fontStyle: \"italic\"}}>Create New MediaList...</p>)}\r\n                tags={[]}\r\n            />\r\n        </Row>\r\n    ));\r\n\r\n\r\n    let mediaListRows = [];\r\n    for (let i = 0; i < numRows; i++) {\r\n        mediaListRows.push((\r\n            <div key={i}>\r\n                <Row className=\"justify-content-sm-center justify-content-md-center\">\r\n                    {[0, 1, 2].map(col => (\r\n                        <Col xl={4} xs={12} key={col}>\r\n                            {mediaListComponents[(i * 3) + col]}\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    mediaListRows.push((\r\n        <Collapse in={addMediaList} key={\"CRATE_NEW_MEDIALIST\"}>\r\n            <div>\r\n                <Row>\r\n                    {addMediaList && <AddMediaList addMediaList={addMediaList} setResetMediaList={setResetMediaList}/>}\r\n                </Row>\r\n            </div>\r\n        </Collapse>\r\n    ))\r\n\r\n    return (\r\n        <Row className=\"media-lists-container\">\r\n                <div className=\"media-lists-inner\">\r\n                    {mediaListRows}\r\n                </div>\r\n        </Row>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}