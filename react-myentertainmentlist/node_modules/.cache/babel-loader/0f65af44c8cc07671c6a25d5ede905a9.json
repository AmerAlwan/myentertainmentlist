{"ast":null,"code":"import http from \"./http-common\";\nimport AxiosError from \"axios\";\n\nclass UserDataService {\n  authenticate(token) {\n    return http.get(\"/authenticate\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }).catch(error => error.response);\n  }\n\n  getAll(filter = null) {\n    return http.get(\"/users\", filter);\n  }\n\n  get(id) {\n    return http.get(`/users/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/users/register\", data).catch(error => error.response);\n  }\n\n  delete(id) {\n    return http.delete(`/users/${id}`);\n  }\n\n  findUserByUsername(username) {\n    return http.get(`/users/username/${username}`).catch(error => false);\n  }\n\n  findUserByEmail(email) {\n    return http.get(`/users/email/${email}`).catch(error => false);\n  }\n\n  validateLogin(data) {\n    return http.post('/users/login', data).catch(error => error.response);\n  }\n\n}\n\nexport default new UserDataService();","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/backend/user.service.js"],"names":["http","AxiosError","UserDataService","authenticate","token","get","headers","Authorization","catch","error","response","getAll","filter","id","create","data","post","delete","findUserByUsername","username","findUserByEmail","email","validateLogin"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,UAAP,MAAuB,OAAvB;;AAEA,MAAMC,eAAN,CAAsB;AAElBC,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,WAAOJ,IAAI,CAACK,GAAL,CAAS,eAAT,EAA2B;AAACC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,UAASH,KAAM;AAAhC;AAAV,KAA3B,EAA0EI,KAA1E,CAAgFC,KAAK,IAAIA,KAAK,CAACC,QAA/F,CAAP;AACH;;AAEDC,EAAAA,MAAM,CAACC,MAAM,GAAG,IAAV,EAAgB;AAClB,WAAOZ,IAAI,CAACK,GAAL,CAAS,QAAT,EAAmBO,MAAnB,CAAP;AACH;;AAEDP,EAAAA,GAAG,CAACQ,EAAD,EAAK;AACJ,WAAOb,IAAI,CAACK,GAAL,CAAU,UAASQ,EAAG,EAAtB,CAAP;AACH;;AAEDC,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,WAAOf,IAAI,CAACgB,IAAL,CAAU,iBAAV,EAA6BD,IAA7B,EAAmCP,KAAnC,CAAyCC,KAAK,IAAIA,KAAK,CAACC,QAAxD,CAAP;AACH;;AAEDO,EAAAA,MAAM,CAACJ,EAAD,EAAK;AACP,WAAOb,IAAI,CAACiB,MAAL,CAAa,UAASJ,EAAG,EAAzB,CAAP;AACH;;AAEDK,EAAAA,kBAAkB,CAACC,QAAD,EAAW;AACzB,WAAOnB,IAAI,CAACK,GAAL,CAAU,mBAAkBc,QAAS,EAArC,EAAwCX,KAAxC,CAA8CC,KAAK,IAAI,KAAvD,CAAP;AACH;;AAEDW,EAAAA,eAAe,CAAEC,KAAF,EAAS;AACnB,WAAOrB,IAAI,CAACK,GAAL,CAAU,gBAAegB,KAAM,EAA/B,EAAkCb,KAAlC,CAAwCC,KAAK,IAAI,KAAjD,CAAP;AACJ;;AAEDa,EAAAA,aAAa,CAACP,IAAD,EAAO;AAChB,WAAOf,IAAI,CAACgB,IAAL,CAAU,cAAV,EAA0BD,IAA1B,EAAgCP,KAAhC,CAAsCC,KAAK,IAAIA,KAAK,CAACC,QAArD,CAAP;AACH;;AAhCiB;;AAmCtB,eAAe,IAAIR,eAAJ,EAAf","sourcesContent":["import http from \"./http-common\";\r\nimport AxiosError from \"axios\";\r\n\r\nclass UserDataService {\r\n\r\n    authenticate(token) {\r\n        return http.get(\"/authenticate\",  {headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    getAll(filter = null) {\r\n        return http.get(\"/users\", filter);\r\n    }\r\n\r\n    get(id) {\r\n        return http.get(`/users/${id}`);\r\n    }\r\n\r\n    create(data) {\r\n        return http.post(\"/users/register\", data).catch(error => error.response);\r\n    }\r\n\r\n    delete(id) {\r\n        return http.delete(`/users/${id}`);\r\n    }\r\n\r\n    findUserByUsername(username) {\r\n        return http.get(`/users/username/${username}`).catch(error => false);\r\n    }\r\n\r\n    findUserByEmail (email) {\r\n         return http.get(`/users/email/${email}`).catch(error => false);\r\n    }\r\n\r\n    validateLogin(data) {\r\n        return http.post('/users/login', data).catch(error => error.response);\r\n    }\r\n}\r\n\r\nexport default new UserDataService();\r\n"]},"metadata":{},"sourceType":"module"}