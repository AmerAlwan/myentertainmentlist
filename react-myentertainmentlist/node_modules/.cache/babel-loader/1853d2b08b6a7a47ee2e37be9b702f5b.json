{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\Routes.js\";\nimport React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Cookies from \"js-cookie\";\nimport MediaPage from './pages/MediaPage';\nimport RegisterPage from './pages/RegisterPage';\nimport LoginPage from './pages/LoginPage';\nimport { connect } from \"react-redux\";\nimport { loginSuccess } from \"./redux/slices/UserSlice\";\nimport ProfilePage from \"./pages/user/ProfilePage\";\nimport { Spinner } from \"react-bootstrap\";\nimport UserService from \"./components/backend/user.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Routes extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let isLoggedIn = this.props.isLoggedIn;\n    const userCookie = localStorage.get('user');\n\n    if (isLoggedIn && !userCookie) {\n      localStorage.set('user', JSON.stringify(this.props.user));\n    } else if (!isLoggedIn && userCookie) {\n      this.props.toggleLoginSuccess(JSON.parse(userCookie));\n      isLoggedIn = true;\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isLoading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        variant: \"primary\",\n        animation: \"border\",\n        style: {\n          position: \"fixed\",\n          top: \"50%\",\n          left: \"50%\",\n          zIndex: \"10\",\n          width: \"50px\",\n          height: \"50px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          component: Home\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/media/:type/:id\",\n          component: MediaPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/register\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/:username\",\n          component: ProfilePage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/user\",\n          children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: '/user/' + this.props.user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 39\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 94\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isLoading: state.loading.isLoading,\n  isLoggedIn: state.user.isLoggedIn,\n  user: {\n    accessToken: state.user.accessToken,\n    tokenType: state.user.tokenType,\n    id: state.user.id,\n    username: state.user.username,\n    roles: state.user.roles,\n    mediaLists: state.user.mediaLists\n  }\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleLoginSuccess: user => dispatch(loginSuccess(user))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/Routes.js"],"names":["React","Component","Redirect","Route","Switch","Home","Cookies","MediaPage","RegisterPage","LoginPage","connect","loginSuccess","ProfilePage","Spinner","UserService","Routes","constructor","props","render","isLoggedIn","userCookie","localStorage","get","set","JSON","stringify","user","toggleLoginSuccess","parse","isLoading","position","top","left","zIndex","width","height","username","mapStateToProps","state","loading","accessToken","tokenType","id","roles","mediaLists","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Cookies from \"js-cookie\";\r\nimport MediaPage from './pages/MediaPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport {connect} from \"react-redux\";\r\nimport {loginSuccess} from \"./redux/slices/UserSlice\";\r\nimport ProfilePage from \"./pages/user/ProfilePage\";\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport UserService from \"./components/backend/user.service\";\r\n\r\nclass Routes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let isLoggedIn = this.props.isLoggedIn;\r\n        const userCookie = localStorage.get('user');\r\n        if (isLoggedIn && !userCookie) {\r\n            localStorage.set('user', JSON.stringify(this.props.user));\r\n        } else if (!isLoggedIn && userCookie) {\r\n            this.props.toggleLoginSuccess(JSON.parse(userCookie));\r\n            isLoggedIn = true;\r\n        }\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.isLoading ?\r\n                        <Spinner variant=\"primary\" animation=\"border\" style={{\r\n                            position: \"fixed\",\r\n                            top: \"50%\",\r\n                            left: \"50%\",\r\n                            zIndex: \"10\",\r\n                            width: \"50px\",\r\n                            height: \"50px\"\r\n                        }}/>\r\n                        :\r\n                        <></>\r\n                }\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route path='/media/:type/:id' component={MediaPage}/>\r\n                    <Route exact path='/login'>\r\n                        {isLoggedIn ? <Redirect to='/'/> : <LoginPage/>}\r\n                    </Route>\r\n                    <Route exact path='/register'>\r\n                        {isLoggedIn ? <Redirect to='/'/> : <RegisterPage/>}\r\n                    </Route>\r\n                    <Route path='/user/:username' component={ProfilePage}/>\r\n                    <Route exact path='/user'>\r\n                        {isLoggedIn ? <Redirect to={'/user/' + this.props.user.username}/> : <Redirect to='/login'/>}\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoading: state.loading.isLoading,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    user: {\r\n        accessToken: state.user.accessToken,\r\n        tokenType: state.user.tokenType,\r\n        id: state.user.id,\r\n        username: state.user.username,\r\n        roles: state.user.roles,\r\n        mediaLists: state.user.mediaLists,\r\n    }\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleLoginSuccess: user => dispatch(loginSuccess(user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);\r\n"]},"metadata":{},"sourceType":"module"}