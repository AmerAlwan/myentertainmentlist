{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\profilepage\\\\medialistcontainer\\\\mediacontainer\\\\MediaContainer.js\",\n    _s = $RefreshSig$();\n\nimport { Col, Row } from \"react-bootstrap\";\nimport React, { useEffect, useState } from \"react\";\nimport './MediaContainer.css';\nimport { MediaCard } from \"./mediacard/MediaCard\";\nimport MedialistService from \"../../../backend/medialist.service\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MediaContainer(props) {\n  _s();\n\n  const [mediaList, setMediaList] = useState(props.mediaList);\n  useEffect(() => {\n    setMediaList(props.mediaList);\n  }, [props.mediaList]);\n  const accessToken = useSelector(state => state.user.accessToken);\n  const isSmall = window.innerWidth <= 428;\n  const isMedium = window.innerWidth > 428 && window.innerWidth <= 768;\n\n  const deleteMedia = (media, type) => {\n    console.log(\"DELETE\");\n\n    if (type === 'movie') {\n      MedialistService.deleteMovieFromList(mediaList.id, media.id, accessToken).then(response => {\n        console.log(response);\n        props.setResetMediaList(true);\n      });\n    }\n\n    if (type === 'tv') {\n      MedialistService.deleteTvFromList(mediaList.id, media.id, accessToken).then(response => {\n        console.log(response);\n        props.setResetMediaList(true);\n      });\n    }\n\n    if (type === 'game') {\n      MedialistService.deleteGameFromList(mediaList.id, media.id, accessToken).then(response => {\n        console.log(response);\n        props.setResetMediaList(true);\n      });\n    }\n  };\n\n  const numRows = Math.ceil((mediaList.movies.length + mediaList.tvs.length + mediaList.games.length) / (isMedium ? 2 : 4));\n  let mediaComponents = [];\n  const allMedias = mediaList.movies.map(movie => movie.type = 'movie').concat(mediaList.tvs.map(tv => tv.type = 'tv').concat(mediaList.games.map(game => game.type = 'game'))).sort((cM, pM) => Cm.title.localeCompare(pM.title));\n  allMedias.map(media => mediaComponents.push( /*#__PURE__*/_jsxDEV(MediaCard, {\n    deleteMedia: deleteMedia,\n    media: media,\n    type: media.type\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 30\n  }, this)));\n  const mediaRows = [];\n\n  for (let i = 0; i < numRows; i++) {\n    mediaRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: (isMedium ? [0, 1] : [0, 1, 2, 3]).map(col => /*#__PURE__*/_jsxDEV(Col, {\n          xs: 12,\n          md: 6,\n          xl: 3,\n          children: mediaComponents[i * (isMedium ? 2 : 4) + col]\n        }, col, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 24\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 16\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"media-container\",\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"media-inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: 'white'\n          },\n          children: mediaList.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), mediaRows]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n\n_s(MediaContainer, \"HZej35Il/Io0oPjoQjrU3LxHppo=\", false, function () {\n  return [useSelector];\n});\n\n_c = MediaContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaContainer\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/profilepage/medialistcontainer/mediacontainer/MediaContainer.js"],"names":["Col","Row","React","useEffect","useState","MediaCard","MedialistService","useSelector","MediaContainer","props","mediaList","setMediaList","accessToken","state","user","isSmall","window","innerWidth","isMedium","deleteMedia","media","type","console","log","deleteMovieFromList","id","then","response","setResetMediaList","deleteTvFromList","deleteGameFromList","numRows","Math","ceil","movies","length","tvs","games","mediaComponents","allMedias","map","movie","concat","tv","game","sort","cM","pM","Cm","title","localeCompare","push","mediaRows","i","col","color","name"],"mappings":"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","sourcesContent":["import {Col, Row} from \"react-bootstrap\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport './MediaContainer.css';\r\nimport {MediaCard} from \"./mediacard/MediaCard\";\r\nimport MedialistService from \"../../../backend/medialist.service\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nexport function MediaContainer(props) {\r\n    const [mediaList, setMediaList] = useState(props.mediaList);\r\n\r\n    useEffect(() => {\r\n        setMediaList(props.mediaList);\r\n    }, [props.mediaList]);\r\n\r\n    const accessToken = useSelector(state => state.user.accessToken);\r\n\r\n    const isSmall = window.innerWidth <= 428;\r\n    const isMedium = window.innerWidth > 428 && window.innerWidth <= 768;\r\n\r\n    const deleteMedia = (media, type) => {\r\n        console.log(\"DELETE\")\r\n        if (type === 'movie') {\r\n            MedialistService.deleteMovieFromList(mediaList.id, media.id, accessToken).then(response => {\r\n                console.log(response);\r\n                props.setResetMediaList(true);\r\n            })\r\n        }\r\n\r\n        if (type === 'tv') {\r\n            MedialistService.deleteTvFromList(mediaList.id, media.id, accessToken).then(response => {\r\n                console.log(response);\r\n                props.setResetMediaList(true);\r\n            })\r\n        }\r\n\r\n        if (type === 'game') {\r\n            MedialistService.deleteGameFromList(mediaList.id, media.id, accessToken).then(response => {\r\n                console.log(response);\r\n                props.setResetMediaList(true);\r\n            })\r\n        }\r\n    }\r\n\r\n    const numRows = Math.ceil((mediaList.movies.length + mediaList.tvs.length + mediaList.games.length) / (isMedium ? 2 : 4));\r\n    let mediaComponents = [];\r\n    const allMedias = mediaList.movies\r\n        .map(movie => movie.type = 'movie')\r\n        .concat(mediaList.tvs\r\n            .map(tv => tv.type = 'tv')\r\n            .concat(mediaList.games\r\n                .map(game => game.type = 'game')))\r\n        .sort((cM, pM) => Cm.title.localeCompare(pM.title)\r\n    );\r\n\r\n\r\n    allMedias.map(media => (\r\n        mediaComponents.push(<MediaCard deleteMedia={deleteMedia} media={media} type={media.type} />)\r\n    ))\r\n\r\n    const mediaRows = [];\r\n    for (let i = 0; i < numRows; i++) {\r\n        mediaRows.push((\r\n           <div key={i}>\r\n               <Row className='justify-content-center'>\r\n                   {(isMedium ? [0,1] : [0, 1, 2, 3]).map(col => (\r\n                       <Col xs={12} md={6} xl={3} key={col}>\r\n                           {mediaComponents[(i * (isMedium ? 2 : 4)) + col]}\r\n                       </Col>\r\n                   ))}\r\n               </Row>\r\n           </div>\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <Row className=\"media-container\">\r\n            <Col>\r\n                <div className=\"media-inner\">\r\n                    <h2 style={{\r\n                        color: 'white'\r\n                    }}>{mediaList.name}</h2>\r\n                    {mediaRows}\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}