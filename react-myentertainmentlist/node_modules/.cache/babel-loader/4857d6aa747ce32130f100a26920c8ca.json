{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\search\\\\searchaddmediatolist\\\\SearchAddMediaToList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Dropdown, Row } from \"react-bootstrap\";\nimport './SearchAddMediaToList.css';\nimport MedialistService from \"../../backend/medialist.service\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCirclePlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getMedialistType = type => type === 'MEDIA_MOVIE' && 'movie' || type === 'MEDIA_TV' && 'tv' || type === 'MEDIA_GAME' && 'game' || 'all';\n\nexport function SearchAddMediaToList(props) {\n  _s();\n\n  const accessToken = useSelector(state => state.user.accessToken);\n  const [mediaLists, setMediaLists] = useState([]);\n  useEffect(() => {\n    MedialistService.getLists(accessToken).then(response => {\n      if (response.status === 200 && response.data) setMediaLists(response.data.slice().sort((cML, pML) => cML.name.localeCompare(pML.name)));\n    });\n  }, []);\n\n  const onDropdownItemSelect = (eventKey, e) => {\n    console.log(eventKey);\n    const mediaListId = eventKey.target.id;\n    const mediaType = props.type;\n    const media = {\n      apiId: props.apiId,\n      title: props.title,\n      posterPath: props.posterPath,\n      releaseYear: props.releaseYear\n    };\n\n    if (mediaType === 'movie') {\n      MedialistService.addMovie(mediaListId, media, accessToken).then(response => {});\n    } else if (mediaType === 'tv') {\n      MedialistService.addTv(mediaListId, media, accessToken).then(response => {});\n    } else if (mediaType === 'game') {\n      MedialistService.addGame(mediaListId, media, accessToken).then(response => {});\n    }\n  };\n\n  const mediaListNames = mediaLists.map(mediaList => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Dropdown.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: mediaList.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            textAlign: \"center\"\n          },\n          children: \"<\" + getMedialistType(mediaList.mediaListType) + \">\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n      id: mediaList.id,\n      onSelect: (eventKey, e) => onDropdownItemSelect(e),\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, mediaList.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-add-media-list-dropdown\",\n      style: {\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          style: {\n            backgroundColor: 'transparent',\n            border: 'none'\n          },\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faCirclePlus,\n            style: {\n              height: '20px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: mediaListNames\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(SearchAddMediaToList, \"pKhjau7MPsnG6Z+6xNb//y3IzuU=\", false, function () {\n  return [useSelector];\n});\n\n_c = SearchAddMediaToList;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchAddMediaToList\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/search/searchaddmediatolist/SearchAddMediaToList.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Dropdown","Row","MedialistService","FontAwesomeIcon","faCirclePlus","getMedialistType","type","SearchAddMediaToList","props","accessToken","state","user","mediaLists","setMediaLists","getLists","then","response","status","data","slice","sort","cML","pML","name","localeCompare","onDropdownItemSelect","eventKey","e","console","log","mediaListId","target","id","mediaType","media","apiId","title","posterPath","releaseYear","addMovie","addTv","addGame","mediaListNames","map","mediaList","textAlign","mediaListType","stopPropagation","backgroundColor","border","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,QAAR,EAAkBC,GAAlB,QAA4B,iBAA5B;AACA,OAAO,4BAAP;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,YAAR,QAA2B,mCAA3B;;;;AAEA,MAAMC,gBAAgB,GAAGC,IAAI,IAAKA,IAAI,KAAK,aAAT,IAA0B,OAA3B,IAAwCA,IAAI,KAAK,UAAT,IAAuB,IAA/D,IAAyEA,IAAI,KAAK,YAAT,IAAyB,MAAlG,IAA6G,KAA9I;;AAEA,OAAO,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AACxC,QAAMC,WAAW,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,WAArB,CAA/B;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,gBAAgB,CAACY,QAAjB,CAA0BL,WAA1B,EAAuCM,IAAvC,CAA4CC,QAAQ,IAAI;AACpD,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAApB,IAA2BD,QAAQ,CAACE,IAAxC,EAA8CL,aAAa,CAACG,QAAQ,CAACE,IAAT,CAAcC,KAAd,GAAsBC,IAAtB,CAA2B,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAACE,IAAJ,CAASC,aAAT,CAAuBF,GAAG,CAACC,IAA3B,CAAzC,CAAD,CAAb;AACjD,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAME,oBAAoB,GAAG,CAACC,QAAD,EAAWC,CAAX,KAAiB;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,UAAMI,WAAW,GAAGJ,QAAQ,CAACK,MAAT,CAAgBC,EAApC;AACA,UAAMC,SAAS,GAAGzB,KAAK,CAACF,IAAxB;AACA,UAAM4B,KAAK,GAAG;AAACC,MAAAA,KAAK,EAAE3B,KAAK,CAAC2B,KAAd;AAAqBC,MAAAA,KAAK,EAAE5B,KAAK,CAAC4B,KAAlC;AAAyCC,MAAAA,UAAU,EAAE7B,KAAK,CAAC6B,UAA3D;AAAuEC,MAAAA,WAAW,EAAE9B,KAAK,CAAC8B;AAA1F,KAAd;;AACA,QAAIL,SAAS,KAAK,OAAlB,EAA2B;AACvB/B,MAAAA,gBAAgB,CAACqC,QAAjB,CAA0BT,WAA1B,EAAuCI,KAAvC,EAA8CzB,WAA9C,EAA2DM,IAA3D,CAAgEC,QAAQ,IAAI,CAC3E,CADD;AAEH,KAHD,MAGO,IAAIiB,SAAS,KAAK,IAAlB,EAAwB;AAC3B/B,MAAAA,gBAAgB,CAACsC,KAAjB,CAAuBV,WAAvB,EAAoCI,KAApC,EAA2CzB,WAA3C,EAAwDM,IAAxD,CAA6DC,QAAQ,IAAI,CACxE,CADD;AAED,KAHI,MAGE,IAAIiB,SAAS,KAAK,MAAlB,EAA0B;AAC/B/B,MAAAA,gBAAgB,CAACuC,OAAjB,CAAyBX,WAAzB,EAAsCI,KAAtC,EAA6CzB,WAA7C,EAA0DM,IAA1D,CAA+DC,QAAQ,IAAI,CAC1E,CADD;AAEH;AACJ,GAfD;;AAiBA,QAAM0B,cAAc,GAAG9B,UAAU,CAAC+B,GAAX,CAAeC,SAAS,iBAC3C;AAAA,4BACI,QAAC,QAAD,CAAU,MAAV;AAAA,8BACI,QAAC,GAAD;AAAA,+BACI;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAAX;AAAA,oBACKD,SAAS,CAACrB;AADf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI,QAAC,GAAD;AAAA,+BACI;AAAG,UAAA,KAAK,EAAE;AAACsB,YAAAA,SAAS,EAAE;AAAZ,WAAV;AAAA,oBACK,MAAMxC,gBAAgB,CAACuC,SAAS,CAACE,aAAX,CAAtB,GAAkD;AADvD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAaI,QAAC,QAAD,CAAU,IAAV;AAAe,MAAA,EAAE,EAAEF,SAAS,CAACZ,EAA7B;AAAiC,MAAA,QAAQ,EAAE,CAACN,QAAD,EAAWC,CAAX,KAAiBF,oBAAoB,CAACE,CAAD,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAgBI;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,KAAUiB,SAAS,CAACZ,EAApB;AAAA;AAAA;AAAA;AAAA,UADmB,CAAvB;AAoBA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAgD,MAAA,KAAK,EAAE;AAACa,QAAAA,SAAS,EAAE;AAAZ,OAAvD;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAElB,CAAC,IAAIA,CAAC,CAACoB,eAAF,EAAxB;AAAA,gCACI,QAAC,QAAD,CAAU,MAAV;AAAiB,UAAA,KAAK,EAAE;AACpBC,YAAAA,eAAe,EAAE,aADG;AAEpBC,YAAAA,MAAM,EAAE;AAFY,WAAxB;AAAA,iCAII,QAAC,eAAD;AAAiB,YAAA,IAAI,EAAE7C,YAAvB;AAAqC,YAAA,KAAK,EAAE;AACxC8C,cAAAA,MAAM,EAAE;AADgC;AAA5C;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eASI,QAAC,QAAD,CAAU,IAAV;AAAA,oBACKR;AADL;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAmBH;;GAlEenC,oB;UACQR,W;;;KADRQ,oB","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Dropdown, Row} from \"react-bootstrap\";\r\nimport './SearchAddMediaToList.css';\r\nimport MedialistService from \"../../backend/medialist.service\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCirclePlus} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst getMedialistType = type => (type === 'MEDIA_MOVIE' && 'movie') || (type === 'MEDIA_TV' && 'tv') || (type === 'MEDIA_GAME' && 'game') || 'all';\r\n\r\nexport function SearchAddMediaToList(props) {\r\n    const accessToken = useSelector(state => state.user.accessToken);\r\n    const [mediaLists, setMediaLists] = useState([]);\r\n\r\n    useEffect(() => {\r\n        MedialistService.getLists(accessToken).then(response => {\r\n            if (response.status === 200 && response.data) setMediaLists(response.data.slice().sort((cML, pML) => cML.name.localeCompare(pML.name)));\r\n        });\r\n    }, []);\r\n\r\n    const onDropdownItemSelect = (eventKey, e) => {\r\n        console.log(eventKey);\r\n        const mediaListId = eventKey.target.id;\r\n        const mediaType = props.type;\r\n        const media = {apiId: props.apiId, title: props.title, posterPath: props.posterPath, releaseYear: props.releaseYear};\r\n        if (mediaType === 'movie') {\r\n            MedialistService.addMovie(mediaListId, media, accessToken).then(response => {\r\n            });\r\n        } else if (mediaType === 'tv') {\r\n            MedialistService.addTv(mediaListId, media, accessToken).then(response => {\r\n            });\r\n          } else if (mediaType === 'game') {\r\n            MedialistService.addGame(mediaListId, media, accessToken).then(response => {\r\n            });\r\n        }\r\n    }\r\n\r\n    const mediaListNames = mediaLists.map(mediaList => (\r\n        <div key={mediaList.id}>\r\n            <Dropdown.Header>\r\n                <Row>\r\n                    <h6 style={{textAlign: \"center\"}}>\r\n                        {mediaList.name}\r\n                    </h6>\r\n                </Row>\r\n                <Row>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                        {\"<\" + getMedialistType(mediaList.mediaListType) + \">\"}\r\n                    </p>\r\n                </Row>\r\n            </Dropdown.Header>\r\n            <Dropdown.Item id={mediaList.id} onSelect={(eventKey, e) => onDropdownItemSelect(e)}>\r\n                + Add\r\n            </Dropdown.Item>\r\n            <hr />\r\n        </div>\r\n    ));\r\n    return (\r\n        <>\r\n            <div className=\"search-add-media-list-dropdown\" style={{textAlign: \"center\"}}>\r\n                <Dropdown onClick={e => e.stopPropagation()}>\r\n                    <Dropdown.Toggle style={{\r\n                        backgroundColor: 'transparent',\r\n                        border: 'none'\r\n                    }}>\r\n                        <FontAwesomeIcon icon={faCirclePlus} style={{\r\n                            height: '20px'\r\n                        }}/>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        {mediaListNames}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}