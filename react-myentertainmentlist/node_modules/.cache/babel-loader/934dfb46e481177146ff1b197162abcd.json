{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\home\\\\homegallery\\\\HomeGallery.js\",\n    _s = $RefreshSig$();\n\nimport Gallery from \"react-grid-gallery\";\nimport React, { useEffect, useState } from \"react\";\nimport * as config from \"../../../config.json\";\nimport { search } from \"../../search/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function HomeGallery(props) {\n  _s();\n\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    async function getImages() {\n      const cConfig = config.default.config.links.tmdb;\n      const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query}`);\n      const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query}`);\n      if (!movieImagesResults || !tvImagesResults) return;\n      const movieImagesData = movieImagesResults[0].data.results;\n      const tvImagesData = tvImagesResults[0].data.results;\n      const movieImagesProps = movieImagesData.map(movie => ({\n        src: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\n        thumbnail: `${cConfig.image.link + '/w780/' + movie.backdrop_path}`,\n        thumbnailWidth: 300,\n        thumbnailHeight: 169\n      }));\n      const tvImagesProps = tvImagesData.map(tv => ({\n        src: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\n        thumbnail: `${cConfig.image.link + '/w780/' + tv.backdrop_path}`,\n        thumbnailWidth: 300,\n        thumbnailHeight: 169\n      }));\n      const imageProps = movieImagesProps.concat(tvImagesProps);\n      setImages(imageProps);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"block\",\n      minHeight: \"1px\",\n      width: \"100%\",\n      overflow: \"auto\",\n      position: 'absolute',\n      cursor: 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(Gallery, {\n      images: images,\n      enableLightbox: false,\n      enableImageSelection: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeGallery, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = HomeGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeGallery\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/home/homegallery/HomeGallery.js"],"names":["Gallery","React","useEffect","useState","config","search","HomeGallery","props","images","setImages","getImages","cConfig","default","links","tmdb","movieImagesResults","discovermovie","link","api_key","keys","query","tvImagesResults","discovertv","movieImagesData","data","results","tvImagesData","movieImagesProps","map","movie","src","image","backdrop_path","thumbnail","thumbnailWidth","thumbnailHeight","tvImagesProps","tv","imageProps","concat","display","minHeight","width","overflow","position","cursor"],"mappings":"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","sourcesContent":["import Gallery from \"react-grid-gallery\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport * as config from \"../../../config.json\";\r\nimport {search} from \"../../search/util\";\r\n\r\nexport function HomeGallery(props) {\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getImages()\r\n        {\r\n            const cConfig = config.default.config.links.tmdb;\r\n            const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query}`);\r\n            const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query}`);\r\n            if (!movieImagesResults || !tvImagesResults) return;\r\n            const movieImagesData = movieImagesResults[0].data.results;\r\n            const tvImagesData = tvImagesResults[0].data.results;\r\n            const movieImagesProps = movieImagesData.map(movie => ({\r\n                src: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\r\n                thumbnail: `${cConfig.image.link + '/w780/' + movie.backdrop_path}`,\r\n                thumbnailWidth: 300,\r\n                thumbnailHeight: 169\r\n            }));\r\n            const tvImagesProps = tvImagesData.map(tv => ({\r\n                src: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\r\n                thumbnail: `${cConfig.image.link + '/w780/' + tv.backdrop_path}`,\r\n                thumbnailWidth: 300,\r\n                thumbnailHeight: 169\r\n            }));\r\n\r\n            const imageProps = movieImagesProps.concat(tvImagesProps)\r\n\r\n            setImages(imageProps);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"block\",\r\n            minHeight: \"1px\",\r\n            width: \"100%\",\r\n            overflow: \"auto\",\r\n            position: 'absolute',\r\n            cursor: 'none'\r\n        }}>\r\n            <Gallery\r\n                images={images}\r\n                enableLightbox={false}\r\n                enableImageSelection={false}/>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}