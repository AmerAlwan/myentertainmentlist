{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\profilepage\\\\mediaplaytimegraph\\\\MediaPlaytimeGraph.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { BarSeries, Chart } from \"@devexpress/dx-react-chart\";\nimport { ResponsiveEmbed } from \"react-bootstrap\";\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MediaPlaytimeGraph(props) {\n  _s();\n\n  const mediaLists = useSelector(state => state.user.mediaLists);\n  let moviePlaytimes = 0;\n  let tvPlaytimes = 0;\n  let gamePlaytimes = 0;\n  if (mediaLists) mediaLists.forEach(mediaList => {\n    moviePlaytimes += mediaList.movies.length !== 0 && mediaList.movies.reduce((curr, acc) => {\n      console.log(curr);\n      return curr.playTime + acc;\n    }, 0);\n    tvPlaytimes += mediaList.tvs.length !== 0 && mediaList.tvs.reduce((curr, acc) => curr.playTime + acc, 0);\n    gamePlaytimes += mediaList.games.length !== 0 && mediaList.games.reduce((curr, acc) => curr.playTime + acc, 0);\n  });\n  const mediaPlaytimes = [{\n    name: 'Movies',\n    playtime: moviePlaytimes\n  }, {\n    name: 'Tvs',\n    playtime: tvPlaytimes\n  }, {\n    name: 'Game',\n    playtime: gamePlaytimes\n  }];\n  console.log(mediaPlaytimes);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 500,\n        height: 300,\n        data: mediaPlaytimes,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"playtime\",\n          fill: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(MediaPlaytimeGraph, \"pbtITDI64mixpBAvHof4i88mthI=\", false, function () {\n  return [useSelector];\n});\n\n_c = MediaPlaytimeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaPlaytimeGraph\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/profilepage/mediaplaytimegraph/MediaPlaytimeGraph.js"],"names":["useSelector","BarSeries","Chart","ResponsiveEmbed","ResponsiveContainer","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Bar","MediaPlaytimeGraph","props","mediaLists","state","user","moviePlaytimes","tvPlaytimes","gamePlaytimes","forEach","mediaList","movies","length","reduce","curr","acc","console","log","playTime","tvs","games","mediaPlaytimes","name","playtime"],"mappings":"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","sourcesContent":["import {useSelector} from \"react-redux\";\r\nimport {BarSeries, Chart} from \"@devexpress/dx-react-chart\";\r\nimport {ResponsiveEmbed} from \"react-bootstrap\";\r\nimport {ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar} from \"recharts\";\r\n\r\nexport function MediaPlaytimeGraph(props) {\r\n\r\n    const mediaLists = useSelector(state => state.user.mediaLists);\r\n\r\n    let moviePlaytimes = 0;\r\n    let tvPlaytimes = 0;\r\n    let gamePlaytimes = 0;\r\n\r\n    if (mediaLists)\r\n        mediaLists.forEach(mediaList => {\r\n            moviePlaytimes += mediaList.movies.length !== 0 && mediaList.movies.reduce((curr, acc) => {console.log(curr); return curr.playTime + acc}, 0);\r\n            tvPlaytimes += mediaList.tvs.length !== 0 && mediaList.tvs.reduce((curr, acc) => curr.playTime + acc, 0);\r\n            gamePlaytimes += mediaList.games.length !== 0 && mediaList.games.reduce((curr, acc) => curr.playTime + acc, 0);\r\n        });\r\n\r\n    const mediaPlaytimes = [\r\n        {name: 'Movies', playtime: moviePlaytimes},\r\n        {name: 'Tvs', playtime: tvPlaytimes},\r\n        {name: 'Game', playtime: gamePlaytimes},\r\n    ];\r\n\r\n    console.log(mediaPlaytimes);\r\n\r\n    return (\r\n        <>\r\n            <ResponsiveContainer width='100%' height='100%'>\r\n                <BarChart width={500} height={300} data={mediaPlaytimes}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"playtime\" fill=\"#8884d8\" />\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}