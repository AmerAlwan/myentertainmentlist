{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\home\\\\homegallery\\\\HomeGallery.js\",\n    _s = $RefreshSig$();\n\nimport Gallery from \"react-grid-gallery\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport * as config from \"../../../config.json\";\nimport { search } from \"../../search/util\";\nimport './HomeGallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction waitForElm(selector) {\n  return new Promise(resolve => {\n    if (document.querySelector(selector)) {\n      return resolve(document.querySelector(selector));\n    }\n\n    const observer = new MutationObserver(mutations => {\n      if (document.querySelector(selector)) {\n        resolve(document.querySelector(selector));\n        observer.disconnect();\n      }\n    });\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true\n    });\n  });\n}\n\nexport function HomeGallery(props) {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const numCols = 10; // 10\n\n  const translateYVal = -100; //-100\n\n  const translateYChange = 64; //64\n\n  useEffect(() => {\n    waitForElm(\".ReactGridGallery_tile\").then(elm => {\n      let translateY = translateYVal;\n      document.querySelectorAll(\".ReactGridGallery_tile\").forEach((tile, i) => {\n        tile.style.transform = 'scaleX(1) scaleY(1) scaleZ(1) rotateX(-3deg) rotateY(-34deg) rotateZ(16deg) translateX(0px) translateY(' + translateY + 'px) translateZ(0px) skewX(-14deg) skewY(-7deg)';\n        translateY += translateYChange;\n        if (i % numCols === 0) translateY = translateYVal;\n      });\n    });\n  }, []);\n\n  const formatDate = date => date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 9 ? '0' : '') + date.getDate();\n\n  const getFirstDate = date => (date.getMonth() <= 2 ? date.getFullYear() - 1 : date.getFullYear()) + '-' + (date.getMonth() < 9 ? '0' : '') + ((date.getMonth() <= 2 ? 11 - date.getMonth() : date.getMonth() - 3) + 1) + '-01';\n\n  const shuffleArray = array => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n\n    return array;\n  };\n\n  const getImages = useCallback(async () => {\n    const cConfig = config.default.config.links.tmdb;\n    const gConfig = config.default.config.links.rawg;\n    const currDate = new Date();\n    const fromDate = getFirstDate(currDate);\n    const toDate = formatDate(currDate);\n    const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor(Math.random() * 10 + 1)}`);\n    const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor(Math.random() * 10 + 1)}`);\n    const gameImagesResults = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor(Math.random() * 10 + 1)}`);\n    if (!movieImagesResults || !tvImagesResults || !gameImagesResults) return;\n    const movieImagesData = movieImagesResults[0].data.results;\n    const tvImagesData = tvImagesResults[0].data.results;\n    const gameImagesData = gameImagesResults[0].data.results;\n    const movieImagesProps = movieImagesData.filter(movie => movie.backdrop_path).map((movie, i) => ({\n      src: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map((tv, i) => ({\n      src: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    const gameImagesProps = gameImagesData.filter(game => game.background_image).map((game, i) => ({\n      src: game.background_image,\n      thumbnail: game.background_image,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    let movieIndexes = shuffleArray(Array.from(Array(movieImagesProps.length).keys()));\n    let tvIndexes = shuffleArray(Array.from(Array(tvImagesProps.length).keys()));\n    let gameIndexes = shuffleArray(Array.from(Array(gameImagesProps.length).keys()));\n    const imageProps = shuffleArray(movieIndexes.map(i => movieImagesProps[i]).concat(tvIndexes.map(i => tvImagesProps[i])).concat(gameIndexes.map(i => gameImagesProps[i])));\n    console.log(imageProps);\n    setImages(imageProps);\n  }, []);\n  useEffect(() => {\n    getImages();\n  }, [getImages]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-gradient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container\",\n      style: {\n        display: \"block\",\n        minHeight: \"1px\",\n        width: \"200%\",\n        overflow: \"hidden\",\n        position: 'absolute',\n        cursor: 'none',\n        zIndex: '-2',\n        top: '-30%',\n        left: '-30%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Gallery, {\n        images: images,\n        enableLightbox: false,\n        enableImageSelection: false,\n        maxRows: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(HomeGallery, \"AmyW0r2dTGWT017XUevdG1A7wX8=\");\n\n_c = HomeGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeGallery\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/home/homegallery/HomeGallery.js"],"names":["Gallery","React","useCallback","useEffect","useState","config","search","waitForElm","selector","Promise","resolve","document","querySelector","observer","MutationObserver","mutations","disconnect","observe","body","childList","subtree","HomeGallery","props","images","setImages","numCols","translateYVal","translateYChange","then","elm","translateY","querySelectorAll","forEach","tile","i","style","transform","formatDate","date","getFullYear","getMonth","getDate","getFirstDate","shuffleArray","array","length","j","Math","floor","random","getImages","cConfig","default","links","tmdb","gConfig","rawg","currDate","Date","fromDate","toDate","movieImagesResults","discovermovie","link","api_key","keys","query","tvImagesResults","discovertv","gameImagesResults","list","movieImagesData","data","results","tvImagesData","gameImagesData","movieImagesProps","filter","movie","backdrop_path","map","src","image","thumbnail","thumbnailWidth","thumbnailHeight","tvImagesProps","tv","gameImagesProps","game","background_image","movieIndexes","Array","from","tvIndexes","gameIndexes","imageProps","concat","console","log","display","minHeight","width","overflow","position","cursor","zIndex","top","left"],"mappings":"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","sourcesContent":["import Gallery from \"react-grid-gallery\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport * as config from \"../../../config.json\";\r\nimport {search} from \"../../search/util\";\r\nimport './HomeGallery.css';\r\n\r\nfunction waitForElm(selector) {\r\n    return new Promise(resolve => {\r\n        if (document.querySelector(selector)) {\r\n            return resolve(document.querySelector(selector));\r\n        }\r\n\r\n        const observer = new MutationObserver(mutations => {\r\n            if (document.querySelector(selector)) {\r\n                resolve(document.querySelector(selector));\r\n                observer.disconnect();\r\n            }\r\n        });\r\n\r\n        observer.observe(document.body, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    });\r\n}\r\n\r\nexport function HomeGallery(props) {\r\n    const [images, setImages] = useState([]);\r\n    const numCols = 10; // 10\r\n    const translateYVal = -100; //-100\r\n    const translateYChange = 64; //64\r\n    useEffect(() => {\r\n        waitForElm(\".ReactGridGallery_tile\").then((elm) => {\r\n            let translateY = translateYVal;\r\n            document.querySelectorAll(\".ReactGridGallery_tile\").forEach((tile, i) => {\r\n            tile.style.transform = 'scaleX(1) scaleY(1) scaleZ(1) rotateX(-3deg) rotateY(-34deg) rotateZ(16deg) translateX(0px) translateY(' + translateY + 'px) translateZ(0px) skewX(-14deg) skewY(-7deg)';\r\n            translateY += translateYChange;\r\n            if (i % numCols === 0) translateY = translateYVal;\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    const formatDate = date => date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 9 ? '0' : '') + date.getDate();\r\n    const getFirstDate = date => (date.getMonth() <= 2 ? date.getFullYear() - 1 : date.getFullYear()) + '-' + (date.getMonth() < 9 ? '0' : '') + ((date.getMonth() <= 2 ? 11 - date.getMonth() : (date.getMonth() - 3)) + 1) + '-01';\r\n    const shuffleArray = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n\r\n    const getImages = useCallback(async() => {\r\n        const cConfig = config.default.config.links.tmdb;\r\n        const gConfig = config.default.config.links.rawg;\r\n\r\n        const currDate = new Date();\r\n\r\n        const fromDate = getFirstDate(currDate);\r\n        const toDate = formatDate(currDate);\r\n\r\n        const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor((Math.random() * 10) + 1)}`);\r\n\r\n        const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor((Math.random() * 10) + 1)}`);\r\n\r\n        const gameImagesResults = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor((Math.random() * 10) + 1)}`);\r\n\r\n        if (!movieImagesResults || !tvImagesResults || !gameImagesResults) return\r\n            ;\r\n        const movieImagesData = movieImagesResults[0].data.results;\r\n\r\n        const tvImagesData = tvImagesResults[0].data.results;\r\n\r\n        const gameImagesData = gameImagesResults[0].data.results;\r\n\r\n        const movieImagesProps = movieImagesData.filter(movie =>movie.backdrop_path).map((movie, i) => ({\r\n            src: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map((tv, i) => ({\r\n            src: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        const gameImagesProps = gameImagesData.filter(game => game.background_image).map((game, i) => ({\r\n            src: game.background_image,\r\n            thumbnail: game.background_image,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        let movieIndexes = shuffleArray(Array.from(Array(movieImagesProps.length).keys()));\r\n        let tvIndexes = shuffleArray(Array.from(Array(tvImagesProps.length).keys()));\r\n        let gameIndexes = shuffleArray(Array.from(Array(gameImagesProps.length).keys()));\r\n\r\n        const imageProps = shuffleArray(\r\n            movieIndexes\r\n                .map(i => movieImagesProps[i])\r\n            .concat(tvIndexes\r\n                .map(i => tvImagesProps[i])\r\n            )\r\n            .concat(gameIndexes\r\n                .map(i => gameImagesProps[i])\r\n            )\r\n        );\r\n\r\n        console.log(imageProps);\r\n\r\n        setImages(imageProps);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getImages()\r\n    }, [getImages]);\r\n\r\n    return (\r\n        <>\r\n            <div className='gallery-gradient' />\r\n            <div className='gallery-container' style={{\r\n                display: \"block\",\r\n                minHeight: \"1px\",\r\n                width: \"200%\",\r\n                overflow: \"hidden\",\r\n                position: 'absolute',\r\n                cursor: 'none',\r\n                zIndex: '-2',\r\n                top: '-30%',\r\n                left: '-30%'\r\n            }}>\r\n                <Gallery\r\n                    images={images}\r\n                    enableLightbox={false}\r\n                    enableImageSelection={false}\r\n                    maxRows={10}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}