{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\home\\\\homegallery\\\\HomeGallery.js\",\n    _s = $RefreshSig$();\n\nimport Gallery from \"react-grid-gallery\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport * as config from \"../../../config.json\";\nimport { search } from \"../../search/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function HomeGallery(props) {\n  _s();\n\n  const [images, setImages] = useState([]);\n  const getImages = useCallback(async () => {\n    const cConfig = config.default.config.links.tmdb;\n    const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query}`);\n    const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query}`);\n    console.log(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query}`);\n    if (!movieImagesResults || !tvImagesResults) return;\n    const movieImagesData = movieImagesResults[0].data.results;\n    const tvImagesData = tvImagesResults[0].data.results;\n    console.log(Date.parse(new Date()));\n    const movieImagesProps = movieImagesData.filter(movie => movie.backdrop_path).map(movie => ({\n      src: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map(tv => ({\n      src: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    let movieIndex = 0,\n        tvIndex = 0;\n    const imageProps = movieImagesProps.slice(1, 11).concat(tvImagesProps.slice(1, 11));\n    setImages(imageProps);\n  }, []);\n  useEffect(() => {\n    getImages();\n  }, [getImages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"block\",\n      minHeight: \"1px\",\n      width: \"100%\",\n      overflow: \"auto\",\n      position: 'absolute',\n      cursor: 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(Gallery, {\n      images: images,\n      enableLightbox: false,\n      enableImageSelection: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeGallery, \"XUtKGidRnrdJ0LEaWWFB89HIJpE=\");\n\n_c = HomeGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeGallery\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/home/homegallery/HomeGallery.js"],"names":["Gallery","React","useCallback","useEffect","useState","config","search","HomeGallery","props","images","setImages","getImages","cConfig","default","links","tmdb","movieImagesResults","discovermovie","link","api_key","keys","query","tvImagesResults","discovertv","console","log","movieImagesData","data","results","tvImagesData","Date","parse","movieImagesProps","filter","movie","backdrop_path","map","src","image","thumbnail","thumbnailWidth","thumbnailHeight","tvImagesProps","tv","movieIndex","tvIndex","imageProps","slice","concat","display","minHeight","width","overflow","position","cursor"],"mappings":"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","sourcesContent":["import Gallery from \"react-grid-gallery\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport * as config from \"../../../config.json\";\r\nimport {search} from \"../../search/util\";\r\n\r\nexport function HomeGallery(props) {\r\n    const [images, setImages] = useState([]);\r\n\r\n    const getImages = useCallback(async() => {\r\n        const cConfig = config.default.config.links.tmdb;\r\n        const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query}`);\r\n        const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query}`);\r\n        console.log(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query}`);\r\n        if (!movieImagesResults || !tvImagesResults) return;\r\n        const movieImagesData = movieImagesResults[0].data.results;\r\n        const tvImagesData = tvImagesResults[0].data.results;\r\n        console.log(Date.parse(new Date()))\r\n        const movieImagesProps = movieImagesData.filter(movie =>movie.backdrop_path).map(movie => ({\r\n            src: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n        const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map(tv => ({\r\n            src: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        let movieIndex = 0, tvIndex = 0;\r\n\r\n        const imageProps = movieImagesProps.slice(1,11).concat(tvImagesProps.slice(1,11));\r\n\r\n        setImages(imageProps);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getImages()\r\n    }, [getImages]);\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"block\",\r\n            minHeight: \"1px\",\r\n            width: \"100%\",\r\n            overflow: \"auto\",\r\n            position: 'absolute',\r\n            cursor: 'none'\r\n        }}>\r\n            <Gallery\r\n                images={images}\r\n                enableLightbox={false}\r\n                enableImageSelection={false}/>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}