{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\pages\\\\user\\\\ProfilePage.js\";\nimport { Component } from \"react\";\nimport { loginSuccess, setMediaLists } from \"../../redux/slices/UserSlice\";\nimport { connect } from \"react-redux\";\nimport { UserInfo } from \"../../components/profilepage/userinfo/UserInfo\";\nimport AppNavBar from \"../../components/navbar/AppNavBar\";\nimport { AddMediaToList } from \"../../components/search/addmediatolist/AddMediaToList\";\nimport MedialistService from \"../../components/backend/medialist.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isUser: this.props.match.params.username === this.props.user.username\n    };\n  }\n\n  componentDidMount() {\n    MedialistService.getLists(this.props.user.accessToken).then(response => {\n      if (response.status === 200) this.props.setMediaLists(response.data);\n      console.log(response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowY: 'hidden'\n        },\n        children: [/*#__PURE__*/_jsxDEV(AppNavBar, {\n          showSearchBar: true,\n          showLogin: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n          user: this.props.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMediaLists: mediaLists => dispatch(setMediaLists(mediaLists))\n  };\n};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.user.isLoggedIn,\n  user: {\n    accessToken: state.user.accessToken,\n    tokenType: state.user.tokenType,\n    id: state.user.id,\n    username: state.user.username,\n    roles: state.user.roles,\n    mediaLists: state.user.mediaLists\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/pages/user/ProfilePage.js"],"names":["Component","loginSuccess","setMediaLists","connect","UserInfo","AppNavBar","AddMediaToList","MedialistService","ProfilePage","constructor","props","state","isUser","match","params","username","user","componentDidMount","getLists","accessToken","then","response","status","data","console","log","render","overflowY","mapDispatchToProps","dispatch","mediaLists","mapStateToProps","isLoggedIn","tokenType","id","roles"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,YAAR,EAAsBC,aAAtB,QAA0C,8BAA1C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,gDAAvB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAAQC,cAAR,QAA6B,uDAA7B;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;;;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAChCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,QAAxB,KAAqC,KAAKL,KAAL,CAAWM,IAAX,CAAgBD;AADpD,KAAb;AAGH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,gBAAgB,CAACW,QAAjB,CAA0B,KAAKR,KAAL,CAAWM,IAAX,CAAgBG,WAA1C,EAAuDC,IAAvD,CAA4DC,QAAQ,IAAI;AACpE,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B,KAAKZ,KAAL,CAAWR,aAAX,CAAyBmB,QAAQ,CAACE,IAAlC;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH,KAHD;AAIH;;AAEDK,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,6BACI;AAAK,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAZ;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,aAAa,MAAxB;AAAyB,UAAA,SAAS;AAAlC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,QAAD;AAAU,UAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWM;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,qBADJ;AAQH;;AAzB+B;;AA4BpC,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH3B,IAAAA,aAAa,EAAE4B,UAAU,IAAID,QAAQ,CAAC3B,aAAa,CAAC4B,UAAD,CAAd;AADlC,GAAP;AAGH,CAJD;;AAOA,MAAMC,eAAe,GAAIpB,KAAD,KAAY;AAChCqB,EAAAA,UAAU,EAAErB,KAAK,CAACK,IAAN,CAAWgB,UADS;AAEhChB,EAAAA,IAAI,EAAE;AACFG,IAAAA,WAAW,EAAER,KAAK,CAACK,IAAN,CAAWG,WADtB;AAEFc,IAAAA,SAAS,EAAEtB,KAAK,CAACK,IAAN,CAAWiB,SAFpB;AAGFC,IAAAA,EAAE,EAAEvB,KAAK,CAACK,IAAN,CAAWkB,EAHb;AAIFnB,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,IAAN,CAAWD,QAJnB;AAKFoB,IAAAA,KAAK,EAAExB,KAAK,CAACK,IAAN,CAAWmB,KALhB;AAMFL,IAAAA,UAAU,EAAEnB,KAAK,CAACK,IAAN,CAAWc;AANrB;AAF0B,CAAZ,CAAxB;;AAYA,eAAe3B,OAAO,CAAC4B,eAAD,EAAkBH,kBAAlB,CAAP,CAA6CpB,WAA7C,CAAf","sourcesContent":["import {Component} from \"react\";\r\nimport {loginSuccess, setMediaLists} from \"../../redux/slices/UserSlice\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserInfo} from \"../../components/profilepage/userinfo/UserInfo\";\r\nimport AppNavBar from \"../../components/navbar/AppNavBar\";\r\nimport {AddMediaToList} from \"../../components/search/addmediatolist/AddMediaToList\";\r\nimport MedialistService from \"../../components/backend/medialist.service\";\r\n\r\nclass ProfilePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUser: this.props.match.params.username === this.props.user.username\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        MedialistService.getLists(this.props.user.accessToken).then(response => {\r\n            if (response.status === 200) this.props.setMediaLists(response.data);\r\n            console.log(response);\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div style={{overflowY: 'hidden'}}>\r\n                    <AppNavBar showSearchBar showLogin />\r\n                    <UserInfo user={this.props.user} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setMediaLists: mediaLists => dispatch(setMediaLists(mediaLists))\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    user: {\r\n        accessToken: state.user.accessToken,\r\n        tokenType: state.user.tokenType,\r\n        id: state.user.id,\r\n        username: state.user.username,\r\n        roles: state.user.roles,\r\n        mediaLists: state.user.mediaLists\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);"]},"metadata":{},"sourceType":"module"}