{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\pages\\\\MediaPage.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Image } from 'react-bootstrap';\nimport { Circle } from 'react-circle';\nimport * as config from '../config.json';\nimport { search } from '../components/search/util.js';\nimport MediaListCard from '../components/mediapage/companies/MediaListCard';\nimport { Link } from 'react-router-dom';\nimport ImageGallery from 'react-image-gallery';\nimport SearchBar from '../components/search/SearchBar';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport '../components/mediapage/mediaPage.css';\nimport NavBar from \"../components/navbar/AppNavBar\";\nimport AppNavBar from \"../components/navbar/AppNavBar\";\nimport { setIsLoading, setNotLoading } from \"../redux/slices/LoadingSlice\";\nimport { connect } from \"react-redux\";\nimport { AddMediaToList } from \"../components/search/addmediatolist/AddMediaToList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cardStyle = {};\n\nclass MediaPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleScrollY = () => {\n      this.setState({\n        offsetY: window.scrollY\n      });\n    };\n\n    this.handleScrollY = this.handleScrollY.bind(this);\n    this.state = {\n      title: \"\",\n      images: [],\n      production_companies: [],\n      production_countries: [],\n      spoken_languages: [],\n      networks: [],\n      genres: [],\n      info: [],\n      offsetY: 0\n    };\n  }\n\n  async setData(id, prevId, type) {\n    if (id !== prevId) {\n      this.props.toggleLoading();\n      let msConfig, title, images, production_companies, production_countries, spoken_languages, networks, description, poster_path, genres, vote_average, vote_count, popularity, platforms, stores, developers, publishers, tags, release_date;\n      let info = [];\n      let imgConfig = config.default.config.links.tmdb.image;\n      const [isMovie, isTv, isGame] = [type === \"movie\", type === \"tv\", type === \"game\"];\n\n      if (isMovie || isTv) {\n        if (isMovie) {\n          msConfig = config.default.config.links.tmdb.movie;\n        } else if (isTv) {\n          msConfig = config.default.config.links.tmdb.tv;\n        }\n\n        const results = await search(`${msConfig.link + id + \"?\" + msConfig.api_key + config.default.config.keys.tmdb}`);\n        const imageResults = await search(`${msConfig.link + id + \"/\" + msConfig.images + msConfig.api_key + config.default.config.keys.tmdb}`);\n\n        if (!results) {\n          this.setState({\n            type: \"error\"\n          });\n          return;\n        }\n\n        const data = results[0].data;\n        const imageData = imageResults[0].data;\n        images = imageData.backdrops.map(img => ({\n          original: `${imgConfig.link + imgConfig.size.original + img.file_path}`,\n          originalClass: \"customOriginal\"\n        }));\n        poster_path = `${imgConfig.link + imgConfig.size.poster.medium + data.poster_path}`; //console.log(data);\n        //console.log(imageResults);\n        //console.log(images);\n\n        title = isMovie ? data.title : data.name;\n        description = data.overview;\n        genres = data.genres;\n        production_companies = data.production_companies;\n        production_companies.forEach(company => {\n          company.logo_path = `${imgConfig.link + imgConfig.size.logo.w45 + company.logo_path}`;\n        });\n        production_countries = data.production_countries;\n        production_countries.forEach(country => {\n          country.logo_path = `https://www.countryflags.io/${country.iso_3166_1}/flat/32.png`;\n        });\n        spoken_languages = data.spoken_languages;\n        info.push({\n          name: \"Status: \" + data.status\n        });\n        vote_average = data.vote_average;\n        vote_count = data.vote_count;\n        popularity = data.popularity;\n\n        if (isMovie) {\n          info.push({\n            name: \"Release Date: \" + data.release_date\n          });\n          info.push({\n            name: \"Runtime: \" + data.runtime + \" mins\"\n          });\n          info.push({\n            name: \"Budget: \" + (data.budget != 0 ? \"$\" + data.budget : \"unknown\")\n          });\n          info.push({\n            name: \"Revenue: \" + (data.revenue != 0 ? \"$\" + data.revenue : \"unknown\")\n          });\n          release_date = data.release_date;\n        } else if (isTv) {\n          networks = data.networks;\n          networks.forEach(network => {\n            network.logo_path = `${imgConfig.link + imgConfig.size.logo.w45 + network.logo_path}`;\n          });\n          info.push({\n            name: \"First Air Date: \" + data.first_air_date\n          });\n          info.push({\n            name: \"Last Air Date: \" + data.last_air_date\n          });\n          info.push({\n            name: \"Avg. Ep. Runtime: \" + (data.episode_run_time.length !== 0 ? data.episode_run_time.reduce((acc, curr) => acc + curr) / data.episode_run_time.length + \"m\" : 0)\n          });\n          info.push({\n            name: \"Total Seasons: \" + data.number_of_seasons\n          });\n          info.push({\n            name: \"Total Episodes: \" + data.number_of_episodes\n          });\n          release_date = data.first_air_date;\n        } //  console.table(info);\n\n      } else if (isGame) {\n        msConfig = config.default.config.links.rawg.game;\n        const results = await search(`${msConfig.link + id + \"?\" + msConfig.api_key + config.default.config.keys.rawg}`);\n        const imageResults = await search(`${msConfig.link + id + \"/screenshots\" + \"?\" + msConfig.api_key + config.default.config.keys.rawg}`);\n\n        if (!results) {\n          this.setState({\n            type: \"error\"\n          });\n          return;\n        } //console.log(results);\n        //console.log(imageResults);\n\n\n        const data = results[0].data;\n        const imageData = imageResults[0].data;\n        title = data.name;\n        description = data.description_raw;\n        images = imageData.results.map(img => ({\n          original: `${img.image}`,\n          originalClass: \"customOriginal\"\n        }));\n        poster_path = data.background_image;\n        platforms = data.platforms;\n        platforms.forEach(platform => {\n          platform.name = platform.platform.name;\n          platform.id = platform.platform.id;\n          platform.logo_path = platform.platform.image_background;\n        });\n        stores = data.stores;\n        stores.forEach(store => {\n          store.name = store.store.name;\n          store.id = store.id;\n          store.logo_path = store.store.image_background;\n        });\n        developers = data.developers;\n        developers.forEach(developer => {\n          developer.logo_path = developer.image_background;\n        });\n        genres = data.genres;\n        genres.forEach(genre => {\n          genre.logo_path = genre.image_background;\n        });\n        publishers = data.publishers;\n        publishers.forEach(publisher => {\n          publisher.logo_path = publisher.image_background;\n        });\n        tags = data.tags;\n        tags.forEach(tag => {\n          tag.logo_path = tag.image_background;\n        });\n        vote_average = data.rating;\n        vote_count = data.ratings_count;\n        info.push({\n          name: \"Released: \" + data.released\n        });\n        info.push({\n          name: \"Metacritic: \" + data.metacritic\n        });\n        info.push({\n          name: \"Playtime: \" + data.playtime + \"h\"\n        });\n        info.push({\n          name: \"Achievements: \" + data.achievements_count\n        });\n        info.push({\n          name: \"Playtime: \" + data.playtime\n        });\n        release_date = data.released; // console.table(info);\n      }\n\n      if (release_date) {\n        release_date = release_date.split(\"-\")[0];\n      }\n\n      console.log(release_date);\n      this.setState({\n        title: title,\n        description: description,\n        genres: genres,\n        images: images,\n        poster_path: poster_path,\n        production_companies: production_companies,\n        type: type,\n        production_countries: production_countries,\n        spoken_languages,\n        networks: networks,\n        info: info,\n        vote_average: vote_average,\n        vote_count: vote_count,\n        popularity: popularity,\n        platforms: platforms,\n        stores: stores,\n        developers: developers,\n        publishers: publishers,\n        tags: tags,\n        release_date: release_date\n      });\n      this.props.stopLoading();\n    }\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    await this.setData(this.props.match.params.id, prevProps.match.params.id, this.props.match.params.type);\n  }\n\n  async componentDidMount() {\n    await this.setData(this.props.match.params.id, -1, this.props.match.params.type);\n  }\n\n  render() {\n    if (this.state.type === 'movie' || this.state.type === 'tv' || this.state.type === 'game') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            overflow: \"hidden\",\n            backgroundColor: '#837960',\n            backgroundImage: 'linear-gradient(to bottom, transparent, black 700px), url(' + this.state.images[0].original + ')',\n            backgroundRepeat: 'no-repeat',\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundAttachment: 'fixed'\n          },\n          children: [/*#__PURE__*/_jsxDEV(NavBar, {\n            showSearchBar: true,\n            showLogin: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"fixRowOutOfScreen justify-content-center\",\n            style: {\n              margin: \"2rem 1rem 0 1rem\",\n              padding: \"1rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              xl: 4,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Image, {\n                    src: this.state.poster_path,\n                    style: {\n                      maxWidth: \"100%\",\n                      height: \"auto\",\n                      boxShadow: '5px 5px 15px 5px rgba(0,0,0,0.22)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                style: {\n                  fontSize: \"7rem\",\n                  color: \"#dbdbdb\",\n                  textAlign: \"center\",\n                  marginTop: this.state.images.length !== 0 ? \"0\" : \"5rem\"\n                },\n                children: this.state.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(AddMediaToList, {\n                apiId: this.props.match.params.id,\n                title: this.state.title,\n                releaseYear: this.state.release_date,\n                type: this.state.type,\n                posterPath: this.state.poster_path\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 2,\n              xl: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 8,\n              xl: 8,\n              className: \"mediaCardBox\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mediaCardTitle\",\n                children: \"Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  textAlign: \"justify\",\n                  textAlignLast: \"left\",\n                  color: \"#7a7a7a\"\n                },\n                children: this.state.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 2,\n              xl: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"\",\n            style: {\n              marginTop: '20px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 2,\n              xl: 2,\n              style: {\n                paddingRight: '0 !important'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              xl: 4,\n              style: {\n                paddingLeft: '0 !important'\n              },\n              children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                title: \"Info\",\n                hasLogo: false,\n                list: this.state.info,\n                style: cardStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              xl: 4,\n              style: {\n                maxWidth: '450px',\n                paddingLeft: '0'\n              },\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"align-content-end\",\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  className: \"mediaCardBox\",\n                  xs: 6,\n                  xl: 4,\n                  style: {\n                    minHeight: \"1rem\",\n                    marginTop: \"1rem\",\n                    maxWidth: '300px !important'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mediaCardTitle\",\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 325,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      marginTop: \"0.5rem\"\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Circle, {\n                      size: \"85\",\n                      progress: Math.round(this.state.vote_average) * 10\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 326,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mediaCardTitle\",\n                    children: \"Vote Count\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      margin: \"0 0.5rem\",\n                      marginBottom: \"0.5rem\"\n                    },\n                    children: this.state.vote_count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 331,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"mediaCardTitle\",\n                    children: \"Popularity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      margin: \"0 0.5rem\"\n                    },\n                    children: this.state.popularity\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 2,\n              xl: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"fixRowOutOfScreen\",\n            style: {\n              margin: \"2rem 1rem 0 1rem\",\n              padding: \"1rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              xl: 12,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [(this.state.type === \"movie\" || this.state.type === \"tv\") && /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                    title: \"Genres\",\n                    id: \"genres1\",\n                    hasLogo: false,\n                    list: this.state.genres,\n                    style: cardStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 37\n                }, this), (this.state.type === \"movie\" || this.state.type === \"tv\") && /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                    title: \"Production Companies\",\n                    id: \"production_companies\",\n                    hasLogo: true,\n                    list: this.state.production_companies\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 363,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 37\n                }, this), (this.state.type === \"movie\" || this.state.type === \"tv\") && /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                    title: \"Production Countries\",\n                    id: \"production_countries\",\n                    hasLogo: true,\n                    list: this.state.production_countries,\n                    idValue: \"iso_3166_1\",\n                    style: cardStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 368,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 37\n                }, this), (this.state.type === \"movie\" || this.state.type === \"tv\") && /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                    title: \"Spoken Languages\",\n                    id: \"spoken_languages\",\n                    hasLogo: false,\n                    list: this.state.spoken_languages,\n                    idValue: \"iso_639_1\",\n                    nameValue: \"english_name\",\n                    style: cardStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 37\n                }, this), this.state.type === \"tv\" && /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                    title: \"Networks\",\n                    id: \"networks\",\n                    hasLogo: true,\n                    list: this.state.networks,\n                    style: cardStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 37\n                }, this), this.state.type === \"game\" && /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                    title: \"Genres\",\n                    id: \"genres2\",\n                    hasLogo: true,\n                    list: this.state.genres,\n                    style: cardStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 37\n                }, this), this.state.type === \"game\" && /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                    title: \"Developers\",\n                    id: \"developers\",\n                    hasLogo: true,\n                    list: this.state.developers,\n                    style: cardStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 37\n                }, this), this.state.type === \"game\" && /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                    title: \"Publishers\",\n                    id: \"publishers\",\n                    hasLogo: true,\n                    list: this.state.publishers,\n                    style: cardStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 395,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 37\n                }, this), this.state.type === \"game\" && /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(MediaListCard, {\n                    title: \"Tags\",\n                    id: \"tags\",\n                    hasLogo: true,\n                    list: this.state.tags,\n                    style: cardStyle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 399,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"fixRowOutOfScreen justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xl: 6,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(ImageGallery, {\n                items: this.state.images,\n                lazyLoad: true,\n                autoPlay: false,\n                disableSwipe: true,\n                showThumbnails: false,\n                showFullscreenButton: false,\n                showPlayButton: false,\n                showIndex: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              height: '100px',\n              backgroundColor: 'transparent'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)\n      }, void 0, false);\n    }\n    /* else if (this.state.type === 'game') {\r\n      return (\r\n          <>\r\n              <div style={{overflow: \"hidden\"}}>\r\n                  <NavBar showSearchBar showLogin/>\r\n                  <Row className=\"fixRowOutOfScreen\">\r\n                      <Col xl={12} xs={12}>\r\n                          <ImageGallery\r\n                              items={this.state.images}\r\n                              lazyLoad\r\n                              autoPlay\r\n                              disableSwipe\r\n                              showThumbnails={false}\r\n                              showFullscreenButton={false}\r\n                              showPlayButton={false}\r\n                          />\r\n                      </Col>\r\n                  </Row>\r\n                  <Row>\r\n                      <Col xs={12}>\r\n                          <h1 style={{\r\n                              fontSize: \"7rem\",\r\n                              color: \"#dbdbdb\",\r\n                              textAlign: \"center\",\r\n                              marginTop: this.state.images.length !== 0 ? \"0\" : \"5rem\"\r\n                          }}>{this.state.title}</h1>\r\n                      </Col>\r\n                  </Row>\r\n                  <Row>\r\n                      <Col>\r\n                          <AddMediaToList\r\n                              apiId={this.props.match.params.id}\r\n                              title={this.state.title}\r\n                              releaseYear={this.state.release_date}\r\n                              type={this.state.type}\r\n                              posterPath={this.state.poster_path}\r\n                          />\r\n                      </Col>\r\n                  </Row>\r\n                  <Row className=\"fixRowOutOfScreen mediaCardBox\"\r\n                       style={{margin: \"2rem 1rem 0 1rem\", padding: \"1rem\"}}>\r\n                      <Col xs={12} xl={4}>\r\n                          <Row>\r\n                              <Col xs={12}>\r\n                                  <Image src={this.state.poster_path}\r\n                                         style={{width: \"100%\", height: \"auto\"}}/>\r\n                              </Col>\r\n                          </Row>\r\n                          <Row>\r\n                              <Col xs={12} xl={12} className=\"mediaCardBox\" style={{\r\n                                  margin: \"0.5rem 0\"\r\n                              }}>\r\n                                  <p className=\"mediaCardTitle\">Summary</p>\r\n                                  <p style={{\r\n                                      textAlign: \"justify\",\r\n                                      textAlignLast: \"center\",\r\n                                      color: \"grey\"\r\n                                  }}>{this.state.description}</p>\r\n                              </Col>\r\n                          </Row>\r\n                      </Col>\r\n                      <Col xs={12} xl={4}>\r\n                          <Row>\r\n                              <Col xs={12} xl={8}>\r\n                                  <MediaListCard title=\"Info\" hasLogo={false} list={this.state.info}\r\n                                                 style={cardStyle}/>\r\n                              </Col>\r\n                              <Col className=\"mediaCardBox\" xs={6} xl={3}\r\n                                   style={{minHeight: \"1rem\", marginTop: \"1rem\"}}>\r\n                                  <p className=\"mediaCardTitle\">Rating</p>\r\n                                  <div style={{marginTop: \"0.5rem\"}}>\r\n                                      <Circle size=\"85\"\r\n                                              progress={Math.round(((this.state.vote_average / 5) * 100) * 10) / 10}/>\r\n                                  </div>\r\n                                  <hr/>\r\n                                  <p className=\"mediaCardTitle\">Vote Count</p>\r\n                                  <p style={{\r\n                                      margin: \"0 0.5rem\",\r\n                                      marginBottom: \"0.5rem\"\r\n                                  }}>{this.state.vote_count}</p>\r\n                              </Col>\r\n                              <Col xl={1}></Col>\r\n                          </Row>\r\n                          <Row>\r\n                              <Col xs={12}>\r\n                                  <MediaListCard title=\"Stores\" id=\"stores\" hasLogo list={this.state.stores}\r\n                                                 style={cardStyle}/>\r\n                                  <MediaListCard title=\"Platforms\" hasLogo list={this.state.platforms}\r\n                                                 style={{margin: \"0 auto\"}}/>\r\n                              </Col>\r\n                          </Row>\r\n                      </Col>\r\n                        <Col xs={12} xl={4}>\r\n                          <MediaListCard title=\"Genres\" id=\"genres2\" hasLogo list={this.state.genres}\r\n                                         style={cardStyle}/>\r\n                          <MediaListCard title=\"Developers\" id=\"developers\" hasLogo list={this.state.developers}\r\n                                         style={cardStyle}/>\r\n                          <MediaListCard title=\"Publishers\" id=\"publishers\" hasLogo list={this.state.publishers}\r\n                                         style={cardStyle}/>\r\n                          <MediaListCard title=\"Tags\" id=\"tags\" hasLogo list={this.state.tags} style={cardStyle}/>\r\n                      </Col>\r\n                  </Row>\r\n              </div>\r\n          </>\r\n      )\r\n    } */\n    else if (this.state.type === \"error\") {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Not Found!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 534,\n            columnNumber: 23\n          }, this)\n        }, void 0, false);\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    toggleLoading: loading => dispatch(setIsLoading()),\n    stopLoading: loading => dispatch(setNotLoading())\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(MediaPage);","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/pages/MediaPage.js"],"names":["React","Component","Row","Col","Image","Circle","config","search","MediaListCard","Link","ImageGallery","SearchBar","NavBar","AppNavBar","setIsLoading","setNotLoading","connect","AddMediaToList","cardStyle","MediaPage","constructor","props","handleScrollY","setState","offsetY","window","scrollY","bind","state","title","images","production_companies","production_countries","spoken_languages","networks","genres","info","setData","id","prevId","type","toggleLoading","msConfig","description","poster_path","vote_average","vote_count","popularity","platforms","stores","developers","publishers","tags","release_date","imgConfig","default","links","tmdb","image","isMovie","isTv","isGame","movie","tv","results","link","api_key","keys","imageResults","data","imageData","backdrops","map","img","original","size","file_path","originalClass","poster","medium","name","overview","forEach","company","logo_path","logo","w45","country","iso_3166_1","push","status","runtime","budget","revenue","network","first_air_date","last_air_date","episode_run_time","length","reduce","acc","curr","number_of_seasons","number_of_episodes","rawg","game","description_raw","background_image","platform","image_background","store","developer","genre","publisher","tag","rating","ratings_count","released","metacritic","playtime","achievements_count","split","console","log","stopLoading","componentDidUpdate","prevProps","prevState","match","params","componentDidMount","render","overflow","backgroundColor","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","backgroundAttachment","margin","padding","maxWidth","height","boxShadow","fontSize","color","textAlign","marginTop","textAlignLast","paddingRight","paddingLeft","minHeight","Math","round","marginBottom","mapDispatchToProps","dispatch","loading"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Row, Col, Image} from 'react-bootstrap';\r\nimport {Circle} from 'react-circle';\r\nimport * as config from '../config.json';\r\nimport {search} from '../components/search/util.js';\r\nimport MediaListCard from '../components/mediapage/companies/MediaListCard';\r\nimport {Link} from 'react-router-dom';\r\nimport ImageGallery from 'react-image-gallery';\r\nimport SearchBar from '../components/search/SearchBar'\r\nimport 'react-image-gallery/styles/css/image-gallery.css';\r\nimport '../components/mediapage/mediaPage.css';\r\nimport NavBar from \"../components/navbar/AppNavBar\";\r\nimport AppNavBar from \"../components/navbar/AppNavBar\";\r\nimport {setIsLoading, setNotLoading} from \"../redux/slices/LoadingSlice\";\r\nimport {connect} from \"react-redux\";\r\nimport {AddMediaToList} from \"../components/search/addmediatolist/AddMediaToList\";\r\n\r\nconst cardStyle = {};\r\n\r\nclass MediaPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleScrollY = this.handleScrollY.bind(this);\r\n        this.state = {\r\n            title: \"\",\r\n            images: [],\r\n            production_companies: [],\r\n            production_countries: [],\r\n            spoken_languages: [],\r\n            networks: [],\r\n            genres: [],\r\n            info: [],\r\n            offsetY: 0\r\n        }\r\n    }\r\n\r\n    handleScrollY = () => {\r\n        this.setState({offsetY: window.scrollY});\r\n    }\r\n\r\n\r\n    async setData(id, prevId, type) {\r\n        if (id !== prevId) {\r\n            this.props.toggleLoading();\r\n            let msConfig, title, images, production_companies, production_countries, spoken_languages, networks,\r\n                description, poster_path, genres, vote_average, vote_count, popularity, platforms, stores, developers,\r\n                publishers, tags, release_date;\r\n            let info = [];\r\n            let imgConfig = config.default.config.links.tmdb.image;\r\n            const [isMovie, isTv, isGame] = [type === \"movie\", type === \"tv\", type === \"game\"]\r\n            if (isMovie || isTv) {\r\n                if (isMovie) {\r\n                    msConfig = config.default.config.links.tmdb.movie;\r\n                } else if (isTv) {\r\n                    msConfig = config.default.config.links.tmdb.tv;\r\n                }\r\n\r\n                const results = await search(`${msConfig.link + id + \"?\" + msConfig.api_key + config.default.config.keys.tmdb}`);\r\n                const imageResults = await search(`${msConfig.link + id + \"/\" + msConfig.images + msConfig.api_key + config.default.config.keys.tmdb}`);\r\n\r\n                if (!results) {\r\n                    this.setState({type: \"error\"})\r\n                    return;\r\n                }\r\n\r\n                const data = results[0].data;\r\n                const imageData = imageResults[0].data;\r\n\r\n                images = imageData.backdrops.map(img =>\r\n                    (\r\n                        {\r\n                            original: `${imgConfig.link + imgConfig.size.original + img.file_path}`,\r\n                            originalClass: \"customOriginal\"\r\n                        }\r\n                    ));\r\n\r\n                poster_path = `${imgConfig.link + imgConfig.size.poster.medium + data.poster_path}`;\r\n\r\n                //console.log(data);\r\n                //console.log(imageResults);\r\n                //console.log(images);\r\n\r\n                title = isMovie ? data.title : data.name;\r\n                description = data.overview;\r\n\r\n                genres = data.genres;\r\n\r\n                production_companies = data.production_companies;\r\n                production_companies.forEach(company => {\r\n                    company.logo_path = `${imgConfig.link + imgConfig.size.logo.w45 + company.logo_path}`\r\n                });\r\n\r\n                production_countries = data.production_countries;\r\n                production_countries.forEach(country => {\r\n                    country.logo_path = `https://www.countryflags.io/${country.iso_3166_1}/flat/32.png`\r\n                });\r\n\r\n                spoken_languages = data.spoken_languages;\r\n\r\n                info.push({name: \"Status: \" + data.status});\r\n\r\n                vote_average = data.vote_average;\r\n                vote_count = data.vote_count;\r\n                popularity = data.popularity;\r\n                if (isMovie) {\r\n                    info.push({name: \"Release Date: \" + data.release_date});\r\n                    info.push({name: \"Runtime: \" + data.runtime + \" mins\"});\r\n                    info.push({name: \"Budget: \" + (data.budget != 0 ? \"$\" + data.budget : \"unknown\")});\r\n                    info.push({name: \"Revenue: \" + (data.revenue != 0 ? \"$\" + data.revenue : \"unknown\")});\r\n                    release_date = data.release_date;\r\n                } else if (isTv) {\r\n                    networks = data.networks;\r\n                    networks.forEach(network => {\r\n                        network.logo_path = `${imgConfig.link + imgConfig.size.logo.w45 + network.logo_path}`\r\n                    });\r\n                    info.push({name: \"First Air Date: \" + data.first_air_date});\r\n                    info.push({name: \"Last Air Date: \" + data.last_air_date});\r\n                    info.push({name: \"Avg. Ep. Runtime: \" + (data.episode_run_time.length !== 0 ? (data.episode_run_time.reduce((acc, curr) => acc + curr) / data.episode_run_time.length) + \"m\" : 0)});\r\n                    info.push({name: \"Total Seasons: \" + data.number_of_seasons});\r\n                    info.push({name: \"Total Episodes: \" + data.number_of_episodes});\r\n                    release_date = data.first_air_date;\r\n                }\r\n\r\n                //  console.table(info);\r\n\r\n\r\n            } else if (isGame) {\r\n                msConfig = config.default.config.links.rawg.game;\r\n                const results = await search(`${msConfig.link + id + \"?\" + msConfig.api_key + config.default.config.keys.rawg}`);\r\n                const imageResults = await search(`${msConfig.link + id + \"/screenshots\" + \"?\" + msConfig.api_key + config.default.config.keys.rawg}`);\r\n\r\n                if (!results) {\r\n                    this.setState({type: \"error\"})\r\n                    return;\r\n                }\r\n\r\n                //console.log(results);\r\n                //console.log(imageResults);\r\n\r\n                const data = results[0].data;\r\n                const imageData = imageResults[0].data;\r\n\r\n                title = data.name;\r\n                description = data.description_raw;\r\n\r\n                images = imageData.results.map(img =>\r\n                    (\r\n                        {\r\n                            original: `${img.image}`,\r\n                            originalClass: \"customOriginal\"\r\n                        }\r\n                    ));\r\n\r\n                poster_path = data.background_image;\r\n\r\n                platforms = data.platforms;\r\n                platforms.forEach(platform => {\r\n                    platform.name = platform.platform.name;\r\n                    platform.id = platform.platform.id;\r\n                    platform.logo_path = platform.platform.image_background;\r\n                });\r\n\r\n                stores = data.stores;\r\n                stores.forEach(store => {\r\n                    store.name = store.store.name;\r\n                    store.id = store.id;\r\n                    store.logo_path = store.store.image_background;\r\n                });\r\n\r\n                developers = data.developers;\r\n                developers.forEach(developer => {\r\n                    developer.logo_path = developer.image_background;\r\n                });\r\n\r\n                genres = data.genres;\r\n                genres.forEach(genre => {\r\n                    genre.logo_path = genre.image_background;\r\n                });\r\n\r\n                publishers = data.publishers;\r\n                publishers.forEach(publisher => {\r\n                    publisher.logo_path = publisher.image_background;\r\n                });\r\n\r\n                tags = data.tags;\r\n                tags.forEach(tag => {\r\n                    tag.logo_path = tag.image_background;\r\n                });\r\n\r\n                vote_average = data.rating;\r\n                vote_count = data.ratings_count;\r\n\r\n                info.push({name: \"Released: \" + data.released});\r\n                info.push({name: \"Metacritic: \" + data.metacritic});\r\n                info.push({name: \"Playtime: \" + data.playtime + \"h\"});\r\n                info.push({name: \"Achievements: \" + data.achievements_count});\r\n                info.push({name: \"Playtime: \" + data.playtime});\r\n\r\n                release_date = data.released;\r\n\r\n                // console.table(info);\r\n            }\r\n\r\n            if (release_date) {\r\n                release_date = release_date.split(\"-\")[0];\r\n            }\r\n\r\n            console.log(release_date);\r\n\r\n\r\n            this.setState({\r\n                title: title,\r\n                description: description,\r\n                genres: genres,\r\n                images: images,\r\n                poster_path: poster_path,\r\n                production_companies: production_companies,\r\n                type: type,\r\n                production_countries: production_countries,\r\n                spoken_languages,\r\n                networks: networks,\r\n                info: info,\r\n                vote_average: vote_average,\r\n                vote_count: vote_count,\r\n                popularity: popularity,\r\n                platforms: platforms,\r\n                stores: stores,\r\n                developers: developers,\r\n                publishers: publishers,\r\n                tags: tags,\r\n                release_date: release_date\r\n            })\r\n            this.props.stopLoading();\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        await this.setData(this.props.match.params.id, prevProps.match.params.id, this.props.match.params.type);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.setData(this.props.match.params.id, -1, this.props.match.params.type)\r\n    }\r\n\r\n    render() {\r\n        if (this.state.type === 'movie' || this.state.type === 'tv' || this.state.type === 'game') {\r\n            return (\r\n                <>\r\n                    <div style={{overflow: \"hidden\",\r\n                        backgroundColor: '#837960',\r\n                        backgroundImage: 'linear-gradient(to bottom, transparent, black 700px), url(' + this.state.images[0].original + ')',\r\n                        backgroundRepeat: 'no-repeat',\r\n                        backgroundSize: 'cover',\r\n                        backgroundPosition: 'center',\r\n                        backgroundAttachment: 'fixed'\r\n\r\n                    }}>\r\n                        <NavBar showSearchBar showLogin/>\r\n                        <Row className=\"fixRowOutOfScreen justify-content-center\"\r\n                             style={{margin: \"2rem 1rem 0 1rem\", padding: \"1rem\"}}>\r\n                            <Col xs={12} xl={4}>\r\n                                <Row>\r\n                                    <Col xs={12}>\r\n                                        <Image src={this.state.poster_path}\r\n                                               style={{\r\n                                                   maxWidth: \"100%\",\r\n                                                   height: \"auto\",\r\n                                                   boxShadow: '5px 5px 15px 5px rgba(0,0,0,0.22)'\r\n                                        }}/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <h1 style={{\r\n                                    fontSize: \"7rem\",\r\n                                    color: \"#dbdbdb\",\r\n                                    textAlign: \"center\",\r\n                                    marginTop: this.state.images.length !== 0 ? \"0\" : \"5rem\"\r\n                                }}>{this.state.title}</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <AddMediaToList\r\n                                    apiId={this.props.match.params.id}\r\n                                    title={this.state.title}\r\n                                    releaseYear={this.state.release_date}\r\n                                    type={this.state.type}\r\n                                    posterPath={this.state.poster_path}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row style={{\r\n                            marginTop: '20px'\r\n                        }}>\r\n                            <Col xs={2} xl={2} />\r\n                            <Col xs={8} xl={8} className=\"mediaCardBox\">\r\n                                <p className=\"mediaCardTitle\">Summary</p>\r\n                                <p style={{\r\n                                    textAlign: \"justify\",\r\n                                    textAlignLast: \"left\",\r\n                                    color: \"#7a7a7a\"\r\n                                }}>{this.state.description}</p>\r\n                            </Col>\r\n                            <Col xs={2} xl={2}></Col>\r\n                        </Row>\r\n                        <Row className=\"\" style={{\r\n                            marginTop: '20px'\r\n                        }}>\r\n                            <Col xs={2} xl={2} style={{\r\n                                paddingRight: '0 !important'\r\n                            }} />\r\n                            <Col xs={12} xl={4} style={{\r\n                                paddingLeft: '0 !important'\r\n                            }}>\r\n                                <MediaListCard title=\"Info\" hasLogo={false} list={this.state.info}\r\n                                               style={cardStyle}/>\r\n                            </Col>\r\n                            <Col xs={12} xl={4} style={{maxWidth: '450px', paddingLeft: '0'}}>\r\n                                <Row className=\"align-content-end\">\r\n                                    <Col className=\"mediaCardBox\" xs={6} xl={4}\r\n                                         style={{minHeight: \"1rem\", marginTop: \"1rem\", maxWidth: '300px !important'}}>\r\n                                        <p className=\"mediaCardTitle\">Rating</p>\r\n                                        <div style={{marginTop: \"0.5rem\"}}>\r\n                                            <Circle size=\"85\" progress={Math.round(this.state.vote_average) * 10}/>\r\n                                        </div>\r\n                                        <hr/>\r\n                                        <p className=\"mediaCardTitle\">Vote Count</p>\r\n                                        <p style={{\r\n                                            margin: \"0 0.5rem\",\r\n                                            marginBottom: \"0.5rem\"\r\n                                        }}>{this.state.vote_count}</p>\r\n                                        <hr/>\r\n                                        <p className=\"mediaCardTitle\">Popularity</p>\r\n                                        <p style={{margin: \"0 0.5rem\"}}>{this.state.popularity}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={2} xl={2}></Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"fixRowOutOfScreen\"\r\n                             style={{margin: \"2rem 1rem 0 1rem\", padding: \"1rem\"}}>\r\n                            {/* <Col xs={12} xl={4}>\r\n                                <Row>\r\n                                    <Col xs={12}>\r\n                                        <Image src={this.state.poster_path}\r\n                                               style={{maxWidth: \"100%\", height: \"auto\"}}/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col> */}\r\n                            <Col xs={12} xl={12}>\r\n                                <Row>\r\n                                {(this.state.type === \"movie\" || this.state.type === \"tv\") &&\r\n                                    <Col>\r\n                                        <MediaListCard title=\"Genres\" id=\"genres1\" hasLogo={false} list={this.state.genres}\r\n                                               style={cardStyle}/>\r\n                                    </Col>}\r\n                                {(this.state.type === \"movie\" || this.state.type === \"tv\") &&\r\n                                    <Col>\r\n                                        <MediaListCard title=\"Production Companies\" id=\"production_companies\" hasLogo\r\n                                               list={this.state.production_companies}/>\r\n                                    </Col>}\r\n                                {(this.state.type === \"movie\" || this.state.type === \"tv\") &&\r\n                                    <Col>\r\n                                        <MediaListCard title=\"Production Countries\" id=\"production_countries\" hasLogo\r\n                                               list={this.state.production_countries}\r\n                                               idValue=\"iso_3166_1\" style={cardStyle}/>\r\n                                    </Col>}\r\n                                {(this.state.type === \"movie\" || this.state.type === \"tv\") &&\r\n                                    <Col>\r\n                                        <MediaListCard title=\"Spoken Languages\" id=\"spoken_languages\" hasLogo={false}\r\n                                               list={this.state.spoken_languages}\r\n                                               idValue=\"iso_639_1\" nameValue=\"english_name\" style={cardStyle}/>\r\n                                    </Col>}\r\n                                {this.state.type === \"tv\" &&\r\n                                    <Col>\r\n                                        <MediaListCard title=\"Networks\" id=\"networks\" hasLogo list={this.state.networks}\r\n                                                   style={cardStyle}/>\r\n                                    </Col>}\r\n                                {this.state.type === \"game\" &&\r\n                                    <Col>\r\n                                        <MediaListCard title=\"Genres\" id=\"genres2\" hasLogo list={this.state.genres}\r\n                                               style={cardStyle}/>\r\n                                    </Col>}\r\n                                {this.state.type === \"game\" &&\r\n                                    <Col>\r\n                                        <MediaListCard title=\"Developers\" id=\"developers\" hasLogo list={this.state.developers}\r\n                                               style={cardStyle}/>\r\n                                    </Col>}\r\n                                {this.state.type === \"game\" &&\r\n                                    <Col>\r\n                                        <MediaListCard title=\"Publishers\" id=\"publishers\" hasLogo list={this.state.publishers}\r\n                                               style={cardStyle}/>\r\n                                    </Col>}\r\n                                {this.state.type === \"game\" &&\r\n                                    <Col>\r\n                                        <MediaListCard title=\"Tags\" id=\"tags\" hasLogo list={this.state.tags} style={cardStyle}/>\r\n                                    </Col>}\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"fixRowOutOfScreen justify-content-center\">\r\n                            <Col xl={6} xs={12}>\r\n                                <ImageGallery\r\n                                    items={this.state.images}\r\n                                    lazyLoad\r\n                                    autoPlay={false}\r\n                                    disableSwipe\r\n                                    showThumbnails={false}\r\n                                    showFullscreenButton={false}\r\n                                    showPlayButton={false}\r\n                                    showIndex\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <div style={{\r\n                            height: '100px',\r\n                            backgroundColor: 'transparent'\r\n                        }}>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        } /* else if (this.state.type === 'game') {\r\n            return (\r\n                <>\r\n                    <div style={{overflow: \"hidden\"}}>\r\n                        <NavBar showSearchBar showLogin/>\r\n                        <Row className=\"fixRowOutOfScreen\">\r\n                            <Col xl={12} xs={12}>\r\n                                <ImageGallery\r\n                                    items={this.state.images}\r\n                                    lazyLoad\r\n                                    autoPlay\r\n                                    disableSwipe\r\n                                    showThumbnails={false}\r\n                                    showFullscreenButton={false}\r\n                                    showPlayButton={false}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <h1 style={{\r\n                                    fontSize: \"7rem\",\r\n                                    color: \"#dbdbdb\",\r\n                                    textAlign: \"center\",\r\n                                    marginTop: this.state.images.length !== 0 ? \"0\" : \"5rem\"\r\n                                }}>{this.state.title}</h1>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <AddMediaToList\r\n                                    apiId={this.props.match.params.id}\r\n                                    title={this.state.title}\r\n                                    releaseYear={this.state.release_date}\r\n                                    type={this.state.type}\r\n                                    posterPath={this.state.poster_path}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"fixRowOutOfScreen mediaCardBox\"\r\n                             style={{margin: \"2rem 1rem 0 1rem\", padding: \"1rem\"}}>\r\n                            <Col xs={12} xl={4}>\r\n                                <Row>\r\n                                    <Col xs={12}>\r\n                                        <Image src={this.state.poster_path}\r\n                                               style={{width: \"100%\", height: \"auto\"}}/>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12} xl={12} className=\"mediaCardBox\" style={{\r\n                                        margin: \"0.5rem 0\"\r\n                                    }}>\r\n                                        <p className=\"mediaCardTitle\">Summary</p>\r\n                                        <p style={{\r\n                                            textAlign: \"justify\",\r\n                                            textAlignLast: \"center\",\r\n                                            color: \"grey\"\r\n                                        }}>{this.state.description}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col xs={12} xl={4}>\r\n                                <Row>\r\n                                    <Col xs={12} xl={8}>\r\n                                        <MediaListCard title=\"Info\" hasLogo={false} list={this.state.info}\r\n                                                       style={cardStyle}/>\r\n                                    </Col>\r\n                                    <Col className=\"mediaCardBox\" xs={6} xl={3}\r\n                                         style={{minHeight: \"1rem\", marginTop: \"1rem\"}}>\r\n                                        <p className=\"mediaCardTitle\">Rating</p>\r\n                                        <div style={{marginTop: \"0.5rem\"}}>\r\n                                            <Circle size=\"85\"\r\n                                                    progress={Math.round(((this.state.vote_average / 5) * 100) * 10) / 10}/>\r\n                                        </div>\r\n                                        <hr/>\r\n                                        <p className=\"mediaCardTitle\">Vote Count</p>\r\n                                        <p style={{\r\n                                            margin: \"0 0.5rem\",\r\n                                            marginBottom: \"0.5rem\"\r\n                                        }}>{this.state.vote_count}</p>\r\n                                    </Col>\r\n                                    <Col xl={1}></Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col xs={12}>\r\n                                        <MediaListCard title=\"Stores\" id=\"stores\" hasLogo list={this.state.stores}\r\n                                                       style={cardStyle}/>\r\n                                        <MediaListCard title=\"Platforms\" hasLogo list={this.state.platforms}\r\n                                                       style={{margin: \"0 auto\"}}/>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n\r\n                            <Col xs={12} xl={4}>\r\n                                <MediaListCard title=\"Genres\" id=\"genres2\" hasLogo list={this.state.genres}\r\n                                               style={cardStyle}/>\r\n                                <MediaListCard title=\"Developers\" id=\"developers\" hasLogo list={this.state.developers}\r\n                                               style={cardStyle}/>\r\n                                <MediaListCard title=\"Publishers\" id=\"publishers\" hasLogo list={this.state.publishers}\r\n                                               style={cardStyle}/>\r\n                                <MediaListCard title=\"Tags\" id=\"tags\" hasLogo list={this.state.tags} style={cardStyle}/>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </>\r\n            )\r\n        } */ else if (this.state.type === \"error\") {\r\n            return (<><h1>Not Found!</h1></>)\r\n        } else {\r\n            return (<></>)\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleLoading: loading => dispatch(setIsLoading()),\r\n        stopLoading: loading => dispatch(setNotLoading())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(MediaPage);"]},"metadata":{},"sourceType":"module"}