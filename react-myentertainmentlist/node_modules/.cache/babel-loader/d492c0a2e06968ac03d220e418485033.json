{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\profilepage\\\\mediaplaytimegraph\\\\MediaPlaytimeGraph.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { BarSeries, Chart } from \"@devexpress/dx-react-chart\";\nimport { ResponsiveEmbed, Row } from \"react-bootstrap\";\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MediaPlaytimeGraph(props) {\n  _s();\n\n  const isMobile = /Android|webOS|iPhone|kindle|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  const mediaLists = useSelector(state => state.user.mediaLists);\n  let moviePlaytimes = 0;\n  let tvPlaytimes = 0;\n  let gamePlaytimes = 0;\n  if (mediaLists) mediaLists.forEach(mediaList => {\n    mediaList.movies.forEach(movie => {\n      moviePlaytimes += movie.playTime;\n    });\n    mediaList.tvs.forEach(tv => {\n      tvPlaytimes += tv.playTime;\n    });\n    mediaList.games.forEach(game => {\n      gamePlaytimes += game.playTime;\n    });\n  });\n\n  const getHourTime = value => Math.floor(value / 60);\n\n  const getDayTime = value => Math.floor(getHourTime(value) / 24);\n\n  const getWeekTime = value => Math.floor(getDayTime(value) / 7);\n\n  const getMonthTime = value => Math.floor(getWeekTime(value) / 30);\n\n  const getYearTime = value => Math.floor(getMonthTime(value) / 12);\n\n  const getHourTimeInMinutes = value => Math.floor(value * 60);\n\n  const getDayTimeInMinutes = value => Math.floor(getHourTimeInMinutes(value) * 24);\n\n  const getWeekTimeInMinutes = value => Math.floor(getDayTimeInMinutes(value) * 7);\n\n  const getMonthTimeInMinutes = value => Math.floor(getWeekTimeInMinutes(value) * 30);\n\n  const getYearTimeInMinutes = value => Math.floor(getMonthTimeInMinutes(value) * 12);\n\n  console.log(moviePlaytimes);\n  const movieYearTime = getYearTime(moviePlaytimes);\n  moviePlaytimes -= getYearTimeInMinutes(movieYearTime);\n  const movieMonthTime = getMonthTime(moviePlaytimes);\n  moviePlaytimes -= getMonthTimeInMinutes(movieMonthTime);\n  const movieWeekTime = getWeekTime(moviePlaytimes);\n  moviePlaytimes -= getWeekTimeInMinutes(movieWeekTime);\n  const movieDayTime = getDayTime(moviePlaytimes);\n  moviePlaytimes -= getDayTimeInMinutes(movieDayTime);\n  const movieHourTime = getHourTime(moviePlaytimes);\n  moviePlaytimes -= getHourTimeInMinutes(movieHourTime);\n  console.log(movieYearTime);\n  console.log(movieMonthTime);\n  console.log(movieWeekTime);\n  console.log(movieDayTime);\n  console.log(movieHourTime);\n  console.log(moviePlaytimes);\n  const tvYearTime = getYearTime(tvPlaytimes);\n  tvPlaytimes -= getYearTimeInMinutes(tvYearTime);\n  const tvMonthTime = getMonthTime(tvPlaytimes);\n  tvPlaytimes -= getMonthTimeInMinutes(tvMonthTime);\n  const tvWeekTime = getWeekTime(tvPlaytimes);\n  tvPlaytimes -= getWeekTimeInMinutes(tvWeekTime);\n  const tvDayTime = getDayTime(tvPlaytimes);\n  tvPlaytimes -= getDayTimeInMinutes(tvDayTime);\n  const tvHourTime = getHourTime(tvPlaytimes);\n  tvPlaytimes -= getHourTimeInMinutes(tvHourTime);\n  const gameYearTime = getYearTime(gamePlaytimes);\n  gamePlaytimes -= getYearTimeInMinutes(gameYearTime);\n  const gameMonthTime = getMonthTime(gamePlaytimes);\n  gamePlaytimes -= getMonthTimeInMinutes(gameMonthTime);\n  const gameWeekTime = getWeekTime(gamePlaytimes);\n  gamePlaytimes -= getWeekTimeInMinutes(gameWeekTime);\n  const gameDayTime = getDayTime(gamePlaytimes);\n  gamePlaytimes -= getDayTimeInMinutes(gameDayTime);\n  const gameHourTime = getHourTime(gamePlaytimes);\n  gamePlaytimes -= getHourTimeInMinutes(gameHourTime);\n  const mediaPlaytimes = [{\n    name: 'Movies',\n    years: movieYearTime,\n    months: movieMonthTime,\n    weeks: movieWeekTime,\n    days: movieDayTime,\n    hours: movieHourTime,\n    minutes: moviePlaytimes\n  }, {\n    name: 'Tvs',\n    years: tvYearTime,\n    months: tvMonthTime,\n    weeks: tvWeekTime,\n    days: tvDayTime,\n    hours: tvHourTime,\n    minutes: tvPlaytimes\n  }, {\n    name: 'Games',\n    years: gameYearTime,\n    months: gameMonthTime,\n    weeks: gameWeekTime,\n    days: gameDayTime,\n    hours: gameHourTime,\n    minutes: gamePlaytimes\n  }];\n  console.log(mediaPlaytimes);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center align-items-center\",\n      style: {\n        height: '500px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: isMobile ? '90%' : '60%',\n        height: \"80%\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 500,\n          height: 300,\n          layout: \"vertical\",\n          barCategoryGap: 10,\n          data: mediaPlaytimes,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            domain: [0, 'dataMax + 10'],\n            xAxisId: \"wmy\",\n            orientation: \"top\",\n            label: {\n              value: \"Weeks - Months, Years\"\n            },\n            stroke: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            domain: [0, 'dataMax + 10'],\n            xAxisId: \"dhm\",\n            orientation: \"bottom\",\n            label: {\n              value: \"Days - Hours - Minutes\"\n            },\n            stroke: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            dataKey: \"name\",\n            type: \"category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"years\",\n            xAxisId: \"wmy\",\n            stackId: \"b\",\n            fill: \"white\",\n            minPointSize: 2,\n            barSize: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"months\",\n            xAxisId: \"wmy\",\n            stackId: \"b\",\n            fill: \"#C5C5C5FF\",\n            minPointSize: 2,\n            barSize: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"weeks\",\n            xAxisId: \"wmy\",\n            stackId: \"b\",\n            fill: \"#9A9A9AFF\",\n            minPointSize: 2,\n            barSize: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"days\",\n            xAxisId: \"dhm\",\n            stackId: \"a\",\n            fill: \"black\",\n            minPointSize: 2,\n            barSize: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"hours\",\n            xAxisId: \"dhm\",\n            stackId: \"a\",\n            fill: \"#2A2A2AFF\",\n            minPointSize: 2,\n            barSize: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"minutes\",\n            xAxisId: \"dhm\",\n            stackId: \"a\",\n            fill: \"#424242FF\",\n            minPointSize: 2,\n            barSize: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(MediaPlaytimeGraph, \"pbtITDI64mixpBAvHof4i88mthI=\", false, function () {\n  return [useSelector];\n});\n\n_c = MediaPlaytimeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaPlaytimeGraph\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/profilepage/mediaplaytimegraph/MediaPlaytimeGraph.js"],"names":["useSelector","BarSeries","Chart","ResponsiveEmbed","Row","ResponsiveContainer","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Bar","MediaPlaytimeGraph","props","isMobile","test","navigator","userAgent","mediaLists","state","user","moviePlaytimes","tvPlaytimes","gamePlaytimes","forEach","mediaList","movies","movie","playTime","tvs","tv","games","game","getHourTime","value","Math","floor","getDayTime","getWeekTime","getMonthTime","getYearTime","getHourTimeInMinutes","getDayTimeInMinutes","getWeekTimeInMinutes","getMonthTimeInMinutes","getYearTimeInMinutes","console","log","movieYearTime","movieMonthTime","movieWeekTime","movieDayTime","movieHourTime","tvYearTime","tvMonthTime","tvWeekTime","tvDayTime","tvHourTime","gameYearTime","gameMonthTime","gameWeekTime","gameDayTime","gameHourTime","mediaPlaytimes","name","years","months","weeks","days","hours","minutes","height","top","right","left","bottom"],"mappings":"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","sourcesContent":["import {useSelector} from \"react-redux\";\r\nimport {BarSeries, Chart} from \"@devexpress/dx-react-chart\";\r\nimport {ResponsiveEmbed, Row} from \"react-bootstrap\";\r\nimport {ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar} from \"recharts\";\r\n\r\nexport function MediaPlaytimeGraph(props) {\r\n\r\n    const isMobile = /Android|webOS|iPhone|kindle|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\r\n    const mediaLists = useSelector(state => state.user.mediaLists);\r\n\r\n    let moviePlaytimes = 0;\r\n    let tvPlaytimes = 0;\r\n    let gamePlaytimes = 0;\r\n\r\n    if (mediaLists)\r\n        mediaLists.forEach(mediaList => {\r\n            mediaList.movies.forEach(movie => {\r\n                moviePlaytimes += movie.playTime\r\n            });\r\n            mediaList.tvs.forEach(tv => {\r\n                tvPlaytimes += tv.playTime\r\n            });\r\n            mediaList.games.forEach(game => {\r\n                gamePlaytimes += game.playTime\r\n            });\r\n        });\r\n\r\n    const getHourTime = (value) => Math.floor(value / 60);\r\n    const getDayTime = (value) => Math.floor(getHourTime(value) / 24);\r\n    const getWeekTime = (value) => Math.floor(getDayTime(value) / 7);\r\n    const getMonthTime = (value) => Math.floor(getWeekTime(value) / 30);\r\n    const getYearTime = (value) => Math.floor(getMonthTime(value) / 12);\r\n    const getHourTimeInMinutes = (value) => Math.floor(value * 60);\r\n    const getDayTimeInMinutes = (value) => Math.floor(getHourTimeInMinutes(value) * 24);\r\n    const getWeekTimeInMinutes = (value) => Math.floor(getDayTimeInMinutes(value) * 7);\r\n    const getMonthTimeInMinutes = (value) => Math.floor(getWeekTimeInMinutes(value) * 30);\r\n    const getYearTimeInMinutes = (value) => Math.floor(getMonthTimeInMinutes(value) * 12);\r\n\r\n    console.log(moviePlaytimes);\r\n\r\n    const movieYearTime = getYearTime(moviePlaytimes);\r\n    moviePlaytimes -= getYearTimeInMinutes(movieYearTime);\r\n    const movieMonthTime = getMonthTime(moviePlaytimes);\r\n    moviePlaytimes -= getMonthTimeInMinutes(movieMonthTime);\r\n    const movieWeekTime = getWeekTime(moviePlaytimes);\r\n    moviePlaytimes -= getWeekTimeInMinutes(movieWeekTime);\r\n    const movieDayTime = getDayTime(moviePlaytimes);\r\n    moviePlaytimes -= getDayTimeInMinutes(movieDayTime);\r\n    const movieHourTime = getHourTime(moviePlaytimes);\r\n    moviePlaytimes -= getHourTimeInMinutes(movieHourTime);\r\n\r\n\r\n    console.log(movieYearTime);\r\n    console.log(movieMonthTime);\r\n    console.log(movieWeekTime);\r\n    console.log(movieDayTime);\r\n    console.log(movieHourTime);\r\n    console.log(moviePlaytimes)\r\n\r\n    const tvYearTime = getYearTime(tvPlaytimes);\r\n    tvPlaytimes -= getYearTimeInMinutes(tvYearTime);\r\n    const tvMonthTime = getMonthTime(tvPlaytimes);\r\n    tvPlaytimes -= getMonthTimeInMinutes(tvMonthTime);\r\n    const tvWeekTime = getWeekTime(tvPlaytimes);\r\n    tvPlaytimes -= getWeekTimeInMinutes(tvWeekTime);\r\n    const tvDayTime = getDayTime(tvPlaytimes);\r\n    tvPlaytimes -= getDayTimeInMinutes(tvDayTime);\r\n    const tvHourTime = getHourTime(tvPlaytimes);\r\n    tvPlaytimes -= getHourTimeInMinutes(tvHourTime);\r\n\r\n    const gameYearTime = getYearTime(gamePlaytimes);\r\n    gamePlaytimes -= getYearTimeInMinutes(gameYearTime);\r\n    const gameMonthTime = getMonthTime(gamePlaytimes);\r\n    gamePlaytimes -= getMonthTimeInMinutes(gameMonthTime);\r\n    const gameWeekTime = getWeekTime(gamePlaytimes);\r\n    gamePlaytimes -= getWeekTimeInMinutes(gameWeekTime);\r\n    const gameDayTime = getDayTime(gamePlaytimes);\r\n    gamePlaytimes -= getDayTimeInMinutes(gameDayTime);\r\n    const gameHourTime = getHourTime(gamePlaytimes);\r\n    gamePlaytimes -= getHourTimeInMinutes(gameHourTime);\r\n\r\n\r\n\r\n    const mediaPlaytimes = [\r\n        {name: 'Movies', years: movieYearTime, months: movieMonthTime, weeks: movieWeekTime, days: movieDayTime, hours: movieHourTime, minutes: moviePlaytimes},\r\n        {name: 'Tvs', years: tvYearTime, months: tvMonthTime, weeks: tvWeekTime, days: tvDayTime, hours: tvHourTime, minutes: tvPlaytimes},\r\n        {name: 'Games', years: gameYearTime, months: gameMonthTime, weeks: gameWeekTime, days: gameDayTime, hours: gameHourTime, minutes: gamePlaytimes}\r\n    ];\r\n\r\n    console.log(mediaPlaytimes);\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"justify-content-center align-items-center\" style={{\r\n                height: '500px'\r\n            }}>\r\n                <ResponsiveContainer width={isMobile ? '90%' : '60%'} height='80%'>\r\n                    <BarChart width={500} height={300} layout='vertical' barCategoryGap={10} data={mediaPlaytimes} margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 2,\r\n                    }}>\r\n                        <CartesianGrid />\r\n                        <XAxis\r\n                            type=\"number\"\r\n                            domain={[0, 'dataMax + 10']}\r\n                            xAxisId=\"wmy\"\r\n                            orientation=\"top\"\r\n                            label={{value: \"Weeks - Months, Years\"}}\r\n                            stroke=\"white\"\r\n                        />\r\n                        <XAxis\r\n                            type=\"number\"\r\n                            domain={[0, 'dataMax + 10']}\r\n                            xAxisId=\"dhm\"\r\n                            orientation=\"bottom\"\r\n                            label={{value: \"Days - Hours - Minutes\"}}\r\n                            stroke=\"black\"\r\n                        />\r\n                        <YAxis\r\n                            dataKey=\"name\"\r\n                            type=\"category\"\r\n                        />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"years\" xAxisId=\"wmy\" stackId=\"b\" fill=\"white\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"months\" xAxisId=\"wmy\"  stackId=\"b\" fill=\"#C5C5C5FF\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"weeks\" xAxisId=\"wmy\"  stackId=\"b\" fill=\"#9A9A9AFF\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"days\" xAxisId=\"dhm\" stackId=\"a\" fill=\"black\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"hours\" xAxisId=\"dhm\"  stackId=\"a\" fill=\"#2A2A2AFF\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"minutes\" xAxisId=\"dhm\"  stackId=\"a\" fill=\"#424242FF\" minPointSize={2} barSize={32} />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </Row>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}