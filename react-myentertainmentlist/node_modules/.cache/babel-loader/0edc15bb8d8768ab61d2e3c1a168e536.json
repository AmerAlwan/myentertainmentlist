{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\profilepage\\\\mediaplaytimegraph\\\\MediaPlaytimeGraph.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { BarSeries, Chart } from \"@devexpress/dx-react-chart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MediaPlaytimeGraph(props) {\n  _s();\n\n  const mediaLists = useSelector(state => state.user.mediaLists);\n  let moviePlaytimes = 0;\n  let tvPlaytimes = 0;\n  let gamePlaytimes = 0;\n  if (mediaLists) console.log(mediaLists);\n  mediaLists.forEach(mediaList => {\n    moviePlaytimes += mediaList.movies.reduce((curr, acc) => curr.playTime + acc);\n    tvPlaytimes += mediaList.movies.reduce((curr, acc) => curr.playTime + acc);\n    gamePlaytimes += mediaList.movies.reduce((curr, acc) => curr.playTime + acc);\n  });\n  const mediaPlaytimes = [{\n    media: 'Movies',\n    playtime: moviePlaytimes\n  }, {\n    media: 'Tvs',\n    playtime: tvPlaytimes\n  }, {\n    media: 'Game',\n    playtime: gamePlaytimes\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Chart, {\n      data: mediaPlaytimes,\n      children: /*#__PURE__*/_jsxDEV(BarSeries, {\n        argumentField: 'media',\n        valueField: 'playtime'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(MediaPlaytimeGraph, \"pbtITDI64mixpBAvHof4i88mthI=\", false, function () {\n  return [useSelector];\n});\n\n_c = MediaPlaytimeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaPlaytimeGraph\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/profilepage/mediaplaytimegraph/MediaPlaytimeGraph.js"],"names":["useSelector","BarSeries","Chart","MediaPlaytimeGraph","props","mediaLists","state","user","moviePlaytimes","tvPlaytimes","gamePlaytimes","console","log","forEach","mediaList","movies","reduce","curr","acc","playTime","mediaPlaytimes","media","playtime"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,EAAmBC,KAAnB,QAA+B,4BAA/B;;;AAEA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAAA;;AAEtC,QAAMC,UAAU,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,UAArB,CAA9B;AAEA,MAAIG,cAAc,GAAG,CAArB;AACA,MAAIC,WAAW,GAAG,CAAlB;AACA,MAAIC,aAAa,GAAG,CAApB;AAEA,MAAIL,UAAJ,EACIM,OAAO,CAACC,GAAR,CAAYP,UAAZ;AAEAA,EAAAA,UAAU,CAACQ,OAAX,CAAmBC,SAAS,IAAI;AAC5BN,IAAAA,cAAc,IAAIM,SAAS,CAACC,MAAV,CAAiBC,MAAjB,CAAwB,CAACC,IAAD,EAAOC,GAAP,KAAeD,IAAI,CAACE,QAAL,GAAgBD,GAAvD,CAAlB;AACAT,IAAAA,WAAW,IAAIK,SAAS,CAACC,MAAV,CAAiBC,MAAjB,CAAwB,CAACC,IAAD,EAAOC,GAAP,KAAeD,IAAI,CAACE,QAAL,GAAgBD,GAAvD,CAAf;AACAR,IAAAA,aAAa,IAAII,SAAS,CAACC,MAAV,CAAiBC,MAAjB,CAAwB,CAACC,IAAD,EAAOC,GAAP,KAAeD,IAAI,CAACE,QAAL,GAAgBD,GAAvD,CAAjB;AACH,GAJD;AAMJ,QAAME,cAAc,GAAG,CACnB;AAACC,IAAAA,KAAK,EAAE,QAAR;AAAkBC,IAAAA,QAAQ,EAAEd;AAA5B,GADmB,EAEnB;AAACa,IAAAA,KAAK,EAAE,KAAR;AAAeC,IAAAA,QAAQ,EAAEb;AAAzB,GAFmB,EAGnB;AAACY,IAAAA,KAAK,EAAE,MAAR;AAAgBC,IAAAA,QAAQ,EAAEZ;AAA1B,GAHmB,CAAvB;AAMA,sBACI;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEU,cAAb;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,aAAa,EAAE,OAA1B;AAAmC,QAAA,UAAU,EAAE;AAA/C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH;;GA9BejB,kB;UAEOH,W;;;KAFPG,kB","sourcesContent":["import {useSelector} from \"react-redux\";\r\nimport {BarSeries, Chart} from \"@devexpress/dx-react-chart\";\r\n\r\nexport function MediaPlaytimeGraph(props) {\r\n\r\n    const mediaLists = useSelector(state => state.user.mediaLists);\r\n\r\n    let moviePlaytimes = 0;\r\n    let tvPlaytimes = 0;\r\n    let gamePlaytimes = 0;\r\n\r\n    if (mediaLists)\r\n        console.log(mediaLists);\r\n\r\n        mediaLists.forEach(mediaList => {\r\n            moviePlaytimes += mediaList.movies.reduce((curr, acc) => curr.playTime + acc);\r\n            tvPlaytimes += mediaList.movies.reduce((curr, acc) => curr.playTime + acc);\r\n            gamePlaytimes += mediaList.movies.reduce((curr, acc) => curr.playTime + acc);\r\n        });\r\n\r\n    const mediaPlaytimes = [\r\n        {media: 'Movies', playtime: moviePlaytimes},\r\n        {media: 'Tvs', playtime: tvPlaytimes},\r\n        {media: 'Game', playtime: gamePlaytimes},\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <Chart data={mediaPlaytimes}>\r\n                <BarSeries argumentField={'media'} valueField={'playtime'} />\r\n            </Chart>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}