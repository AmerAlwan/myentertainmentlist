{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\profilepage\\\\mediaplaytimegraph\\\\MediaPlaytimeGraph.js\",\n    _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nimport { BarSeries, Chart } from \"@devexpress/dx-react-chart\";\nimport { ResponsiveEmbed, Row } from \"react-bootstrap\";\nimport { ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function MediaPlaytimeGraph(props) {\n  _s();\n\n  const isMobile = /Android|webOS|iPhone|kindle|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  const mediaLists = useSelector(state => state.user.mediaLists);\n  let moviePlaytimes = 0;\n  let tvPlaytimes = 0;\n  let gamePlaytimes = 0;\n  if (mediaLists) mediaLists.forEach(mediaList => {\n    mediaList.movies.forEach(movie => {\n      moviePlaytimes += movie.playTime;\n    });\n    mediaList.tvs.forEach(tv => {\n      tvPlaytimes += tv.playTime;\n    });\n    mediaList.games.forEach(game => {\n      gamePlaytimes += game.playTime;\n    });\n  });\n  let movieDaytimes = Math.floor(moviePlaytimes / 60 / 24);\n  moviePlaytimes -= movieDaytimes * 60 * 24;\n  let movieHourtimes = Math.floor(moviePlaytimes / 60);\n  moviePlaytimes -= movieHourtimes * 60;\n  let tvDaytimes = Math.floor(tvPlaytimes / 60 / 24);\n  tvPlaytimes -= tvDaytimes * 60 * 24;\n  let tvHourtimes = Math.floor(tvPlaytimes / 60);\n  tvPlaytimes -= tvHourtimes * 60;\n  let gameDaytimes = Math.floor(gamePlaytimes / 60 / 24);\n  gamePlaytimes -= gameDaytimes * 60 * 24;\n  let gameHourtimes = Math.floor(gamePlaytimes / 60);\n  gamePlaytimes -= gameHourtimes * 60;\n  const mediaPlaytimes = [{\n    name: 'Movies',\n    days: movieDaytimes,\n    hours: movieHourtimes,\n    minutes: moviePlaytimes\n  }, {\n    name: 'Tvs',\n    days: tvDaytimes,\n    hours: tvHourtimes,\n    minutes: tvPlaytimes\n  }, {\n    name: 'Games',\n    days: gameDaytimes,\n    hours: gameHourtimes,\n    minutes: gamePlaytimes\n  }];\n  console.log(mediaPlaytimes);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center align-items-center\",\n      style: {\n        height: '500px'\n      },\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: isMobile ? '90%' : '60%',\n        height: \"80%\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          width: 500,\n          height: 300,\n          layout: \"vertical\",\n          barCategoryGap: 20,\n          data: mediaPlaytimes,\n          margin: {\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            type: \"number\",\n            domain: [0, 'dataMax + 10']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            dataKey: \"name\",\n            type: \"category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"days\",\n            stackId: \"a\",\n            fill: \"red\",\n            minPointSize: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"hours\",\n            stackId: \"a\",\n            fill: \"blue\",\n            minPointSize: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: \"minutes\",\n            stackId: \"a\",\n            fill: \"green\",\n            minPointSize: 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(MediaPlaytimeGraph, \"pbtITDI64mixpBAvHof4i88mthI=\", false, function () {\n  return [useSelector];\n});\n\n_c = MediaPlaytimeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"MediaPlaytimeGraph\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/profilepage/mediaplaytimegraph/MediaPlaytimeGraph.js"],"names":["useSelector","BarSeries","Chart","ResponsiveEmbed","Row","ResponsiveContainer","BarChart","CartesianGrid","XAxis","YAxis","Tooltip","Legend","Bar","MediaPlaytimeGraph","props","isMobile","test","navigator","userAgent","mediaLists","state","user","moviePlaytimes","tvPlaytimes","gamePlaytimes","forEach","mediaList","movies","movie","playTime","tvs","tv","games","game","movieDaytimes","Math","floor","movieHourtimes","tvDaytimes","tvHourtimes","gameDaytimes","gameHourtimes","mediaPlaytimes","name","days","hours","minutes","console","log","height","top","right","left","bottom"],"mappings":"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","sourcesContent":["import {useSelector} from \"react-redux\";\r\nimport {BarSeries, Chart} from \"@devexpress/dx-react-chart\";\r\nimport {ResponsiveEmbed, Row} from \"react-bootstrap\";\r\nimport {ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar} from \"recharts\";\r\n\r\nexport function MediaPlaytimeGraph(props) {\r\n\r\n    const isMobile = /Android|webOS|iPhone|kindle|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\r\n    const mediaLists = useSelector(state => state.user.mediaLists);\r\n\r\n    let moviePlaytimes = 0;\r\n    let tvPlaytimes = 0;\r\n    let gamePlaytimes = 0;\r\n\r\n    if (mediaLists)\r\n        mediaLists.forEach(mediaList => {\r\n            mediaList.movies.forEach(movie => {\r\n                moviePlaytimes += movie.playTime\r\n            });\r\n            mediaList.tvs.forEach(tv => {\r\n                tvPlaytimes += tv.playTime\r\n            });\r\n            mediaList.games.forEach(game => {\r\n                gamePlaytimes += game.playTime\r\n            });\r\n        });\r\n\r\n    let movieDaytimes = Math.floor((moviePlaytimes / 60) / 24);\r\n    moviePlaytimes -= movieDaytimes * 60 * 24;\r\n    let movieHourtimes = Math.floor((moviePlaytimes / 60));\r\n    moviePlaytimes -= movieHourtimes * 60;\r\n\r\n    let tvDaytimes = Math.floor((tvPlaytimes / 60) / 24);\r\n    tvPlaytimes -= tvDaytimes * 60 * 24;\r\n    let tvHourtimes = Math.floor((tvPlaytimes / 60));\r\n    tvPlaytimes -= tvHourtimes * 60;\r\n\r\n    let gameDaytimes = Math.floor((gamePlaytimes / 60) / 24);\r\n    gamePlaytimes -= gameDaytimes * 60 * 24;\r\n    let gameHourtimes = Math.floor((gamePlaytimes / 60));\r\n    gamePlaytimes -= gameHourtimes * 60;\r\n\r\n    const mediaPlaytimes = [\r\n        {name: 'Movies', days: movieDaytimes, hours: movieHourtimes, minutes: moviePlaytimes},\r\n        {name: 'Tvs', days: tvDaytimes, hours: tvHourtimes, minutes: tvPlaytimes},\r\n        {name: 'Games', days: gameDaytimes, hours: gameHourtimes, minutes: gamePlaytimes},\r\n    ];\r\n\r\n    console.log(mediaPlaytimes);\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"justify-content-center align-items-center\" style={{\r\n                height: '500px'\r\n            }}>\r\n                <ResponsiveContainer width={isMobile ? '90%' : '60%'} height='80%'>\r\n                    <BarChart width={500} height={300} layout='vertical' barCategoryGap={20} data={mediaPlaytimes} margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 2,\r\n                    }}>\r\n                        <CartesianGrid />\r\n                        <XAxis\r\n                            type=\"number\"\r\n                            domain={[0, 'dataMax + 10']}\r\n                        />\r\n                        <YAxis\r\n                            dataKey=\"name\"\r\n                            type=\"category\"\r\n                        />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"days\"  stackId=\"a\" fill=\"red\" minPointSize={2} />\r\n                        <Bar dataKey=\"hours\" stackId=\"a\" fill=\"blue\" minPointSize={2} />\r\n                        <Bar dataKey=\"minutes\" stackId=\"a\" fill=\"green\" minPointSize={2} />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </Row>\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}