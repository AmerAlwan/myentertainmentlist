{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\pages\\\\user\\\\ProfilePage.js\";\nimport { Component } from \"react\";\nimport { loginSuccess, resetMediaLists, setMediaLists } from \"../../redux/slices/UserSlice\";\nimport { connect } from \"react-redux\";\nimport { UserInfo } from \"../../components/profilepage/userinfo/UserInfo\";\nimport AppNavBar from \"../../components/navbar/AppNavBar\";\nimport { AddMediaToList } from \"../../components/search/addmediatolist/AddMediaToList\";\nimport MedialistService from \"../../components/backend/medialist.service\";\nimport { MediaListContainer } from \"../../components/profilepage/medialistcontainer/MediaListContainer\";\nimport { MediaPlaytimeGraph } from \"../../components/profilepage/mediaplaytimegraph/MediaPlaytimeGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfilePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isUser: this.props.match.params.username === this.props.user.username\n    };\n  }\n\n  componentDidMount() {\n    MedialistService.getLists(this.props.user.accessToken).then(response => response && response.status === 200 && response.data && this.props.setMediaLists(response.data));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        height: '1000px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(AppNavBar, {\n        showSearchBar: true,\n        showLogin: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(UserInfo, {\n        user: this.props.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MediaPlaytimeGraph, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MediaListContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setMediaLists: accessToken => dispatch(setMediaLists(accessToken))\n  };\n};\n\nconst mapStateToProps = state => ({\n  isLoggedIn: state.user.isLoggedIn,\n  user: {\n    accessToken: state.user.accessToken,\n    tokenType: state.user.tokenType,\n    id: state.user.id,\n    username: state.user.username,\n    roles: state.user.roles,\n    mediaLists: state.user.mediaLists\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/pages/user/ProfilePage.js"],"names":["Component","loginSuccess","resetMediaLists","setMediaLists","connect","UserInfo","AppNavBar","AddMediaToList","MedialistService","MediaListContainer","MediaPlaytimeGraph","ProfilePage","constructor","props","state","isUser","match","params","username","user","componentDidMount","getLists","accessToken","then","response","status","data","render","width","height","mapDispatchToProps","dispatch","mapStateToProps","isLoggedIn","tokenType","id","roles","mediaLists"],"mappings":";AAAA,SAAQA,SAAR,QAAwB,OAAxB;AACA,SAAQC,YAAR,EAAsBC,eAAtB,EAAuCC,aAAvC,QAA2D,8BAA3D;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,gDAAvB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,SAAQC,cAAR,QAA6B,uDAA7B;AACA,OAAOC,gBAAP,MAA6B,4CAA7B;AACA,SAAQC,kBAAR,QAAiC,oEAAjC;AACA,SAAQC,kBAAR,QAAiC,oEAAjC;;;AAEA,MAAMC,WAAN,SAA0BX,SAA1B,CAAoC;AAChCY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,MAAjB,CAAwBC,QAAxB,KAAqC,KAAKL,KAAL,CAAWM,IAAX,CAAgBD;AADpD,KAAb;AAGH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBZ,IAAAA,gBAAgB,CAACa,QAAjB,CAA0B,KAAKR,KAAL,CAAWM,IAAX,CAAgBG,WAA1C,EAAuDC,IAAvD,CAA4DC,QAAQ,IAChEA,QAAQ,IAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAhC,IAAuCD,QAAQ,CAACE,IAAhD,IAAwD,KAAKb,KAAL,CAAWV,aAAX,CAAyBqB,QAAQ,CAACE,IAAlC,CAD5D;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAE,MAAR;AAAgBC,QAAAA,MAAM,EAAC;AAAvB,OAAZ;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,aAAa,MAAxB;AAAyB,QAAA,SAAS;AAAlC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWM;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAQH;;AAxB+B;;AA2BpC,MAAMW,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH5B,IAAAA,aAAa,EAAEmB,WAAW,IAAIS,QAAQ,CAAC5B,aAAa,CAACmB,WAAD,CAAd;AADnC,GAAP;AAGH,CAJD;;AAOA,MAAMU,eAAe,GAAIlB,KAAD,KAAY;AAChCmB,EAAAA,UAAU,EAAEnB,KAAK,CAACK,IAAN,CAAWc,UADS;AAEhCd,EAAAA,IAAI,EAAE;AACFG,IAAAA,WAAW,EAAER,KAAK,CAACK,IAAN,CAAWG,WADtB;AAEFY,IAAAA,SAAS,EAAEpB,KAAK,CAACK,IAAN,CAAWe,SAFpB;AAGFC,IAAAA,EAAE,EAAErB,KAAK,CAACK,IAAN,CAAWgB,EAHb;AAIFjB,IAAAA,QAAQ,EAAEJ,KAAK,CAACK,IAAN,CAAWD,QAJnB;AAKFkB,IAAAA,KAAK,EAAEtB,KAAK,CAACK,IAAN,CAAWiB,KALhB;AAMFC,IAAAA,UAAU,EAAEvB,KAAK,CAACK,IAAN,CAAWkB;AANrB;AAF0B,CAAZ,CAAxB;;AAYA,eAAejC,OAAO,CAAC4B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CnB,WAA7C,CAAf","sourcesContent":["import {Component} from \"react\";\r\nimport {loginSuccess, resetMediaLists, setMediaLists} from \"../../redux/slices/UserSlice\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserInfo} from \"../../components/profilepage/userinfo/UserInfo\";\r\nimport AppNavBar from \"../../components/navbar/AppNavBar\";\r\nimport {AddMediaToList} from \"../../components/search/addmediatolist/AddMediaToList\";\r\nimport MedialistService from \"../../components/backend/medialist.service\";\r\nimport {MediaListContainer} from \"../../components/profilepage/medialistcontainer/MediaListContainer\";\r\nimport {MediaPlaytimeGraph} from \"../../components/profilepage/mediaplaytimegraph/MediaPlaytimeGraph\";\r\n\r\nclass ProfilePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUser: this.props.match.params.username === this.props.user.username\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        MedialistService.getLists(this.props.user.accessToken).then(response =>\r\n            response && response.status === 200 && response.data && this.props.setMediaLists(response.data)\r\n        );\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div style={{width: '100%', height:'1000px'}}>\r\n                <AppNavBar showSearchBar showLogin />\r\n                <UserInfo user={this.props.user} />\r\n                <MediaPlaytimeGraph />\r\n                <MediaListContainer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setMediaLists: accessToken => dispatch(setMediaLists(accessToken))\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    user: {\r\n        accessToken: state.user.accessToken,\r\n        tokenType: state.user.tokenType,\r\n        id: state.user.id,\r\n        username: state.user.username,\r\n        roles: state.user.roles,\r\n        mediaLists: state.user.mediaLists\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);"]},"metadata":{},"sourceType":"module"}