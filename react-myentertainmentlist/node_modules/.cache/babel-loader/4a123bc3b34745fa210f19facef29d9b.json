{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.preventTouchMove = preventTouchMove;\nexports.allowTouchMove = allowTouchMove;\nexports.preventInertiaScroll = preventInertiaScroll;\nexports.isTouchDevice = isTouchDevice;\nexports.getPadding = getPadding;\nexports.camelToKebab = camelToKebab;\nexports.getWindowHeight = getWindowHeight;\nexports.getDocumentHeight = getDocumentHeight;\nexports.parse = parse;\n\nfunction preventTouchMove(e) {\n  e.preventDefault();\n}\n\nfunction allowTouchMove(e) {\n  e.stopPropagation();\n}\n\nfunction preventInertiaScroll() {\n  var top = this.scrollTop;\n  var totalScroll = this.scrollHeight;\n  var currentScroll = top + this.offsetHeight;\n\n  if (top === 0) {\n    this.scrollTop = 1;\n  } else if (currentScroll === totalScroll) {\n    this.scrollTop = top - 1;\n  }\n} // `ontouchstart` check works on most browsers\n// `maxTouchPoints` works on IE10/11 and Surface\n\n\nfunction isTouchDevice() {\n  if (!window) return false;\n  return 'ontouchstart' in window || navigator.maxTouchPoints;\n}\n\nfunction getPadding() {\n  if (!document || !window) return 0;\n  var currentPadding = parseInt(document.body.paddingRight, 10) || 0;\n  var clientWidth = document.body ? document.body.clientWidth : 0;\n  var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0;\n  return adjustedPadding;\n}\n\nfunction camelToKebab(str) {\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n}\n\nfunction getWindowHeight() {\n  var multiplier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n  if (window && window.innerHeight) {\n    return window.innerHeight * multiplier;\n  }\n}\n\nfunction getDocumentHeight() {\n  if (document && document.body) {\n    return document.body.clientHeight;\n  }\n}\n\nfunction parse(val) {\n  return isNaN(val) ? val : val + 'px';\n}","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/node_modules/react-scrolllock/dist/utils.js"],"names":["Object","defineProperty","exports","value","preventTouchMove","allowTouchMove","preventInertiaScroll","isTouchDevice","getPadding","camelToKebab","getWindowHeight","getDocumentHeight","parse","e","preventDefault","stopPropagation","top","scrollTop","totalScroll","scrollHeight","currentScroll","offsetHeight","window","navigator","maxTouchPoints","document","currentPadding","parseInt","body","paddingRight","clientWidth","adjustedPadding","innerWidth","str","replace","toLowerCase","multiplier","arguments","length","undefined","innerHeight","clientHeight","val","isNaN"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B;AACAF,OAAO,CAACG,cAAR,GAAyBA,cAAzB;AACAH,OAAO,CAACI,oBAAR,GAA+BA,oBAA/B;AACAJ,OAAO,CAACK,aAAR,GAAwBA,aAAxB;AACAL,OAAO,CAACM,UAAR,GAAqBA,UAArB;AACAN,OAAO,CAACO,YAAR,GAAuBA,YAAvB;AACAP,OAAO,CAACQ,eAAR,GAA0BA,eAA1B;AACAR,OAAO,CAACS,iBAAR,GAA4BA,iBAA5B;AACAT,OAAO,CAACU,KAAR,GAAgBA,KAAhB;;AACA,SAASR,gBAAT,CAA0BS,CAA1B,EAA6B;AAC3BA,EAAAA,CAAC,CAACC,cAAF;AACD;;AAED,SAAST,cAAT,CAAwBQ,CAAxB,EAA2B;AACzBA,EAAAA,CAAC,CAACE,eAAF;AACD;;AAED,SAAST,oBAAT,GAAgC;AAC9B,MAAIU,GAAG,GAAG,KAAKC,SAAf;AACA,MAAIC,WAAW,GAAG,KAAKC,YAAvB;AACA,MAAIC,aAAa,GAAGJ,GAAG,GAAG,KAAKK,YAA/B;;AAEA,MAAIL,GAAG,KAAK,CAAZ,EAAe;AACb,SAAKC,SAAL,GAAiB,CAAjB;AACD,GAFD,MAEO,IAAIG,aAAa,KAAKF,WAAtB,EAAmC;AACxC,SAAKD,SAAL,GAAiBD,GAAG,GAAG,CAAvB;AACD;AACF,C,CAED;AACA;;;AACA,SAAST,aAAT,GAAyB;AACvB,MAAI,CAACe,MAAL,EAAa,OAAO,KAAP;AACb,SAAO,kBAAkBA,MAAlB,IAA4BC,SAAS,CAACC,cAA7C;AACD;;AAED,SAAShB,UAAT,GAAsB;AACpB,MAAI,CAACiB,QAAD,IAAa,CAACH,MAAlB,EAA0B,OAAO,CAAP;AAE1B,MAAII,cAAc,GAAGC,QAAQ,CAACF,QAAQ,CAACG,IAAT,CAAcC,YAAf,EAA6B,EAA7B,CAAR,IAA4C,CAAjE;AACA,MAAIC,WAAW,GAAGL,QAAQ,CAACG,IAAT,GAAgBH,QAAQ,CAACG,IAAT,CAAcE,WAA9B,GAA4C,CAA9D;AACA,MAAIC,eAAe,GAAGT,MAAM,CAACU,UAAP,GAAoBF,WAApB,GAAkCJ,cAAlC,IAAoD,CAA1E;AAEA,SAAOK,eAAP;AACD;;AAED,SAAStB,YAAT,CAAsBwB,GAAtB,EAA2B;AACzB,SAAOA,GAAG,CAACC,OAAJ,CAAY,iBAAZ,EAA+B,OAA/B,EAAwCC,WAAxC,EAAP;AACD;;AAED,SAASzB,eAAT,GAA2B;AACzB,MAAI0B,UAAU,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAArF;;AAEA,MAAIf,MAAM,IAAIA,MAAM,CAACkB,WAArB,EAAkC;AAChC,WAAOlB,MAAM,CAACkB,WAAP,GAAqBJ,UAA5B;AACD;AACF;;AAED,SAASzB,iBAAT,GAA6B;AAC3B,MAAIc,QAAQ,IAAIA,QAAQ,CAACG,IAAzB,EAA+B;AAC7B,WAAOH,QAAQ,CAACG,IAAT,CAAca,YAArB;AACD;AACF;;AAED,SAAS7B,KAAT,CAAe8B,GAAf,EAAoB;AAClB,SAAOC,KAAK,CAACD,GAAD,CAAL,GAAaA,GAAb,GAAmBA,GAAG,GAAG,IAAhC;AACD","sourcesContent":["'use strict';\r\n\r\nObject.defineProperty(exports, \"__esModule\", {\r\n  value: true\r\n});\r\nexports.preventTouchMove = preventTouchMove;\r\nexports.allowTouchMove = allowTouchMove;\r\nexports.preventInertiaScroll = preventInertiaScroll;\r\nexports.isTouchDevice = isTouchDevice;\r\nexports.getPadding = getPadding;\r\nexports.camelToKebab = camelToKebab;\r\nexports.getWindowHeight = getWindowHeight;\r\nexports.getDocumentHeight = getDocumentHeight;\r\nexports.parse = parse;\r\nfunction preventTouchMove(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction allowTouchMove(e) {\r\n  e.stopPropagation();\r\n}\r\n\r\nfunction preventInertiaScroll() {\r\n  var top = this.scrollTop;\r\n  var totalScroll = this.scrollHeight;\r\n  var currentScroll = top + this.offsetHeight;\r\n\r\n  if (top === 0) {\r\n    this.scrollTop = 1;\r\n  } else if (currentScroll === totalScroll) {\r\n    this.scrollTop = top - 1;\r\n  }\r\n}\r\n\r\n// `ontouchstart` check works on most browsers\r\n// `maxTouchPoints` works on IE10/11 and Surface\r\nfunction isTouchDevice() {\r\n  if (!window) return false;\r\n  return 'ontouchstart' in window || navigator.maxTouchPoints;\r\n}\r\n\r\nfunction getPadding() {\r\n  if (!document || !window) return 0;\r\n\r\n  var currentPadding = parseInt(document.body.paddingRight, 10) || 0;\r\n  var clientWidth = document.body ? document.body.clientWidth : 0;\r\n  var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0;\r\n\r\n  return adjustedPadding;\r\n}\r\n\r\nfunction camelToKebab(str) {\r\n  return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n}\r\n\r\nfunction getWindowHeight() {\r\n  var multiplier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\r\n\r\n  if (window && window.innerHeight) {\r\n    return window.innerHeight * multiplier;\r\n  }\r\n}\r\n\r\nfunction getDocumentHeight() {\r\n  if (document && document.body) {\r\n    return document.body.clientHeight;\r\n  }\r\n}\r\n\r\nfunction parse(val) {\r\n  return isNaN(val) ? val : val + 'px';\r\n}"]},"metadata":{},"sourceType":"script"}