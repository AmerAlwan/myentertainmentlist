{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\me\\\\Desktop\\\\Projects\\\\myentertainmentlist\\\\react-myentertainmentlist\\\\src\\\\components\\\\home\\\\homegallery\\\\HomeGallery.js\",\n    _s = $RefreshSig$();\n\nimport Gallery from \"react-grid-gallery\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport * as config from \"../../../config.json\";\nimport { search } from \"../../search/util\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function HomeGallery(props) {\n  _s();\n\n  const [images, setImages] = useState([]);\n\n  const formatDate = date => date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 9 ? '0' : '') + date.getDate();\n\n  const getFirstDate = date => (date.getMonth() <= 2 ? date.getFullYear() - 1 : date.getFullYear()) + '-' + (date.getMonth() < 9 ? '0' : '') + ((date.getMonth() <= 2 ? 11 - date.getMonth() : date.getMonth() - 3) + 1) + '-01';\n\n  const getImages = useCallback(async () => {\n    const cConfig = config.default.config.links.tmdb;\n    const gConfig = config.default.config.links.rawg;\n    const currDate = new Date();\n    const fromDate = getFirstDate(currDate);\n    const toDate = formatDate(currDate);\n    const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query}`);\n    const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query}`);\n    const gameImagesResults = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate}`);\n    if (!movieImagesResults || !tvImagesResults) return;\n    const movieImagesData = movieImagesResults[0].data.results;\n    const tvImagesData = tvImagesResults[0].data.results;\n    const gameImagesData = gameImagesResults[0].data.results;\n    const movieImagesProps = movieImagesData.filter(movie => movie.backdrop_path).map(movie => ({\n      src: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map(tv => ({\n      src: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\n      thumbnail: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    const gameImagesProps = gameImagesData.filter(game => game.background_image).map(game => ({\n      src: game.background_image,\n      thumbnail: game.background_image,\n      thumbnailWidth: 300,\n      thumbnailHeight: 169\n    }));\n    let movieIndexes = Array.from(Array(movieImagesProps.length()).keys()).sort(() => .5 - Math.random());\n    let tvIndexes = Array.from(Array(tvImagesProps.length()).keys()).sort(() => .5 - Math.random());\n    let gameIndexes = Array.from(Array(gameImagesProps.length()).keys()).sort(() => .5 - Math.random());\n    const imageProps = movieIndexes.slice(0, 5).map(i => movieImagesProps[i]).concat(tvIndexes.slice(0, 5).map(i => tvImagesProps[i])).concat(gameIndexes.slice(0, 5).map(i => gameImagesProps[i]));\n    setImages(imageProps);\n  }, []);\n  useEffect(() => {\n    getImages();\n  }, [getImages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"block\",\n      minHeight: \"1px\",\n      width: \"100%\",\n      overflow: \"auto\",\n      position: 'absolute',\n      cursor: 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(Gallery, {\n      images: images,\n      enableLightbox: false,\n      enableImageSelection: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(HomeGallery, \"XUtKGidRnrdJ0LEaWWFB89HIJpE=\");\n\n_c = HomeGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeGallery\");","map":{"version":3,"sources":["C:/Users/me/Desktop/Projects/myentertainmentlist/react-myentertainmentlist/src/components/home/homegallery/HomeGallery.js"],"names":["Gallery","React","useCallback","useEffect","useState","config","search","HomeGallery","props","images","setImages","formatDate","date","getFullYear","getMonth","getDate","getFirstDate","getImages","cConfig","default","links","tmdb","gConfig","rawg","currDate","Date","fromDate","toDate","movieImagesResults","discovermovie","link","api_key","keys","query","tvImagesResults","discovertv","gameImagesResults","list","movieImagesData","data","results","tvImagesData","gameImagesData","movieImagesProps","filter","movie","backdrop_path","map","src","image","thumbnail","thumbnailWidth","thumbnailHeight","tvImagesProps","tv","gameImagesProps","game","background_image","movieIndexes","Array","from","length","sort","Math","random","tvIndexes","gameIndexes","imageProps","slice","i","concat","display","minHeight","width","overflow","position","cursor"],"mappings":"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","sourcesContent":["import Gallery from \"react-grid-gallery\";\r\nimport React, {useCallback, useEffect, useState} from \"react\";\r\nimport * as config from \"../../../config.json\";\r\nimport {search} from \"../../search/util\";\r\n\r\nexport function HomeGallery(props) {\r\n    const [images, setImages] = useState([]);\r\n\r\n    const formatDate = date => date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 9 ? '0' : '') + date.getDate();\r\n    const getFirstDate = date => (date.getMonth() <= 2 ? date.getFullYear() - 1 : date.getFullYear()) + '-' + (date.getMonth() < 9 ? '0' : '') + ((date.getMonth() <= 2 ? 11 - date.getMonth() : (date.getMonth() - 3)) + 1) + '-01';\r\n\r\n    const getImages = useCallback(async() => {\r\n        const cConfig = config.default.config.links.tmdb;\r\n        const gConfig = config.default.config.links.rawg;\r\n\r\n        const currDate = new Date();\r\n\r\n        const fromDate = getFirstDate(currDate);\r\n        const toDate = formatDate(currDate);\r\n\r\n        const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query}`);\r\n        const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query}`);\r\n        const gameImagesResults = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate}`);\r\n        if (!movieImagesResults || !tvImagesResults) return;\r\n        const movieImagesData = movieImagesResults[0].data.results;\r\n        const tvImagesData = tvImagesResults[0].data.results;\r\n        const gameImagesData = gameImagesResults[0].data.results;\r\n        const movieImagesProps = movieImagesData.filter(movie =>movie.backdrop_path).map(movie => ({\r\n            src: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w500/' + movie.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n        const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map(tv => ({\r\n            src: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w500/' + tv.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n        const gameImagesProps = gameImagesData.filter(game => game.background_image).map(game => ({\r\n            src: game.background_image,\r\n            thumbnail: game.background_image,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        let movieIndexes = Array.from(Array(movieImagesProps.length()).keys()).sort( () => .5 - Math.random() );\r\n        let tvIndexes = Array.from(Array(tvImagesProps.length()).keys()).sort( () => .5 - Math.random() );\r\n        let gameIndexes = Array.from(Array(gameImagesProps.length()).keys()).sort( () => .5 - Math.random() );\r\n\r\n\r\n\r\n        const imageProps = movieIndexes.slice(0,5)\r\n                                        .map(i => movieImagesProps[i])\r\n                           .concat(tvIndexes.slice(0,5)\r\n                               .map(i => tvImagesProps[i])).concat(gameIndexes.slice(0,5).map(i => gameImagesProps[i]));\r\n\r\n        setImages(imageProps);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getImages()\r\n    }, [getImages]);\r\n\r\n    return (\r\n        <div style={{\r\n            display: \"block\",\r\n            minHeight: \"1px\",\r\n            width: \"100%\",\r\n            overflow: \"auto\",\r\n            position: 'absolute',\r\n            cursor: 'none'\r\n        }}>\r\n            <Gallery\r\n                images={images}\r\n                enableLightbox={false}\r\n                enableImageSelection={false}/>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}