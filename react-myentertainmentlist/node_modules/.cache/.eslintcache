[{"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\index.js":"1","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\App.js":"2","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\reportWebVitals.js":"3","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\Routes.js":"4","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\Search.js":"5","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\Home.js":"6","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\MediaPage.js":"7","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\SearchBar.js":"8","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\util.js":"9","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\mediapage\\companies\\MediaListCard.js":"10","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\Game.js":"11","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\Media.js":"12","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\mediapage\\companies\\Logo.js":"13","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\RegisterPage.js":"14","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\LoginPage.js":"15","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\user.service.js":"16","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\http-common.js":"17","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\validator.js":"18","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\redux\\store.js":"19","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\redux\\slices\\UserSlice.js":"20","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\redux\\slices\\LoadingSlice.js":"21","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\user\\ProfilePage.js":"22","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\userinfo\\UserInfo.js":"23","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\navbar\\ProfileDropdown.js":"24","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\navbar\\AppNavBar.js":"25","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\addmedialist\\AddMediaList.js":"26","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\medialist.service.js":"27","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\MediaListContainer.js":"28","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\mediacontainer\\MediaContainer.js":"29","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\mediacontainer\\mediacard\\MediaCard.js":"30","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\index.js":"31","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\reportWebVitals.js":"32","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\App.js":"33","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\redux\\store.js":"34","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\Routes.js":"35","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\navbar\\AppNavBar.js":"36","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\redux\\slices\\UserSlice.js":"37","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\redux\\slices\\LoadingSlice.js":"38","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\MediaPage.js":"39","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\RegisterPage.js":"40","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\Home.js":"41","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\LoginPage.js":"42","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\user\\ProfilePage.js":"43","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\navbar\\ProfileDropdown.js":"44","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\SearchBar.js":"45","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\medialist.service.js":"46","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\util.js":"47","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\validator.js":"48","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\user.service.js":"49","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\userinfo\\UserInfo.js":"50","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\http-common.js":"51","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\Game.js":"52","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\Media.js":"53","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\MediaListContainer.js":"54","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\mediapage\\companies\\MediaListCard.js":"55","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\mediacontainer\\MediaContainer.js":"56","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\mediapage\\companies\\Logo.js":"57","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\mediacontainer\\mediacard\\MediaCard.js":"58","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\addmediatolist\\AddMediaToList.js":"59","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\searchaddmediatolist\\SearchAddMediaToList.js":"60","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\addmedialist\\AddMediaList.js":"61","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\Search.js":"62","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\mediaplaytimegraph\\MediaPlaytimeGraph.js":"63","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\media.service.js":"64","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\home\\homesearchbar\\HomeSearchBar.js":"65","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\home\\homegallery\\HomeGallery.js":"66"},{"size":871,"mtime":1646261994504,"results":"67","hashOfConfig":"68"},{"size":409,"mtime":1646956045971,"results":"69","hashOfConfig":"68"},{"size":362,"mtime":499162500000,"results":"70","hashOfConfig":"68"},{"size":2922,"mtime":1650256959707,"results":"71","hashOfConfig":"68"},{"size":217,"mtime":1640458230068,"results":"72","hashOfConfig":"68"},{"size":977,"mtime":1651436298034,"results":"73","hashOfConfig":"68"},{"size":22738,"mtime":1652215891469,"results":"74","hashOfConfig":"68"},{"size":6829,"mtime":1652201414371,"results":"75","hashOfConfig":"68"},{"size":1157,"mtime":1640458230005,"results":"76","hashOfConfig":"68"},{"size":1828,"mtime":1646956045973,"results":"77","hashOfConfig":"68"},{"size":1052,"mtime":1640458230002,"results":"78","hashOfConfig":"68"},{"size":2959,"mtime":1652153181461,"results":"79","hashOfConfig":"68"},{"size":1013,"mtime":1646781875703,"results":"80","hashOfConfig":"68"},{"size":6663,"mtime":1646956045985,"results":"81","hashOfConfig":"68"},{"size":5436,"mtime":1650226251477,"results":"82","hashOfConfig":"68"},{"size":823,"mtime":1645833987318,"results":"83","hashOfConfig":"68"},{"size":305,"mtime":1644639133855,"results":"84","hashOfConfig":"68"},{"size":2742,"mtime":1645833987319,"results":"85","hashOfConfig":"68"},{"size":305,"mtime":1646956045989,"results":"86","hashOfConfig":"68"},{"size":1198,"mtime":1652205009576,"results":"87","hashOfConfig":"68"},{"size":659,"mtime":1646956045987,"results":"88","hashOfConfig":"68"},{"size":1662,"mtime":1652205193372,"results":"89","hashOfConfig":"68"},{"size":496,"mtime":1652202291064,"results":"90","hashOfConfig":"68"},{"size":2667,"mtime":1650256876132,"results":"91","hashOfConfig":"68"},{"size":2196,"mtime":1651436585398,"results":"92","hashOfConfig":"68"},{"size":2706,"mtime":1652207614247,"results":"93","hashOfConfig":"68"},{"size":874,"mtime":1652207678797,"results":"94","hashOfConfig":"68"},{"size":2346,"mtime":1652213603274,"results":"95","hashOfConfig":"68"},{"size":1367,"mtime":1652209513883,"results":"96","hashOfConfig":"68"},{"size":1444,"mtime":1652217766496,"results":"97","hashOfConfig":"68"},{"size":871,"mtime":1646261994504,"results":"98","hashOfConfig":"99"},{"size":362,"mtime":499162500000,"results":"100","hashOfConfig":"99"},{"size":409,"mtime":1646956045971,"results":"101","hashOfConfig":"99"},{"size":305,"mtime":1646956045989,"results":"102","hashOfConfig":"99"},{"size":3016,"mtime":1653272120666,"results":"103","hashOfConfig":"99"},{"size":2692,"mtime":1653272120799,"results":"104","hashOfConfig":"99"},{"size":1761,"mtime":1653272121105,"results":"105","hashOfConfig":"99"},{"size":659,"mtime":1646956045987,"results":"106","hashOfConfig":"99"},{"size":27790,"mtime":1653272490495,"results":"107","hashOfConfig":"99"},{"size":6613,"mtime":1653275197043,"results":"108","hashOfConfig":"99"},{"size":1175,"mtime":1653272121094,"results":"109","hashOfConfig":"99"},{"size":5436,"mtime":1650226251477,"results":"110","hashOfConfig":"99"},{"size":1960,"mtime":1653272121102,"results":"111","hashOfConfig":"99"},{"size":2667,"mtime":1650256876132,"results":"112","hashOfConfig":"99"},{"size":6831,"mtime":1653272120972,"results":"113","hashOfConfig":"99"},{"size":1865,"mtime":1652834267453,"results":"114","hashOfConfig":"99"},{"size":1157,"mtime":1640458230005,"results":"115","hashOfConfig":"99"},{"size":2742,"mtime":1645833987319,"results":"116","hashOfConfig":"99"},{"size":983,"mtime":1652834267454,"results":"117","hashOfConfig":"99"},{"size":4841,"mtime":1653272120928,"results":"118","hashOfConfig":"99"},{"size":305,"mtime":1644639133855,"results":"119","hashOfConfig":"99"},{"size":1716,"mtime":1653272120947,"results":"120","hashOfConfig":"99"},{"size":3927,"mtime":1653272120961,"results":"121","hashOfConfig":"99"},{"size":7578,"mtime":1653272120824,"results":"122","hashOfConfig":"99"},{"size":1584,"mtime":1653272120769,"results":"123","hashOfConfig":"99"},{"size":4154,"mtime":1653272120880,"results":"124","hashOfConfig":"99"},{"size":1114,"mtime":1653272120756,"results":"125","hashOfConfig":"99"},{"size":2910,"mtime":1653272120890,"results":"126","hashOfConfig":"99"},{"size":3553,"mtime":1653272120981,"results":"127","hashOfConfig":"99"},{"size":4789,"mtime":1653272120991,"results":"128","hashOfConfig":"99"},{"size":3648,"mtime":1653272120840,"results":"129","hashOfConfig":"99"},{"size":217,"mtime":1640458230068,"results":"130","hashOfConfig":"99"},{"size":6645,"mtime":1653272120916,"results":"131","hashOfConfig":"99"},{"size":669,"mtime":1653272120673,"results":"132","hashOfConfig":"99"},{"size":1608,"mtime":1653272120716,"results":"133","hashOfConfig":"99"},{"size":7869,"mtime":1653272120692,"results":"134","hashOfConfig":"99"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},"rgs6iq",{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"137"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"137"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"137"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"137"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"137"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"137"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"137"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"137"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"137"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"137"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"137"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"137"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"193","messages":"194","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"137"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"137"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},"8ojlu0",{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"213"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"186","usedDeprecatedRules":"213"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"213"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"213"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"213"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"233","messages":"234","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"235","messages":"236","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"213"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"213"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"213"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"213"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"213"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"213"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"213"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"213"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"213"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"213"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"213"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"213"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"213"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"213"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"213"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"213"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"213"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"213"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"213"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"299","usedDeprecatedRules":"213"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"213"},"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\index.js",[],["305","306"],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\App.js",["307","308","309"],"import React from 'react';\r\nimport Routes from './Routes';\r\nimport NavBar from './components/navbar/AppNavBar'\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction App() {\r\n\r\n    document.body.style.backgroundColor = \"#212529\";\r\n    document.body.style.color = \"grey\";\r\n\r\n  return (\r\n\r\n      <div>\r\n        <Routes/>\r\n      </div>\r\n  );\r\n\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\reportWebVitals.js",[],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\Routes.js",["310"],"import React, {Component} from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Cookies from \"js-cookie\";\r\nimport MediaPage from './pages/MediaPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport {connect} from \"react-redux\";\r\nimport {loginSuccess} from \"./redux/slices/UserSlice\";\r\nimport ProfilePage from \"./pages/user/ProfilePage\";\r\nimport {Spinner} from \"react-bootstrap\";\r\n\r\nclass Routes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let isLoggedIn = this.props.isLoggedIn;\r\n        const userCookie = Cookies.get('user');\r\n        if (isLoggedIn && !userCookie) {\r\n            Cookies.set('user', JSON.stringify(this.props.user));\r\n        } else if (!isLoggedIn && userCookie) {\r\n            this.props.toggleLoginSuccess(JSON.parse(userCookie));\r\n            isLoggedIn = true;\r\n        }\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.isLoading ?\r\n                        <Spinner variant=\"primary\" animation=\"border\" style={{\r\n                            position: \"fixed\",\r\n                            top: \"50%\",\r\n                            left: \"50%\",\r\n                            zIndex: \"10\",\r\n                            width: \"50px\",\r\n                            height: \"50px\"\r\n                        }}/>\r\n                        :\r\n                        <></>\r\n                }\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route path='/media/:type/:id' component={MediaPage}/>\r\n                    <Route exact path='/login'>\r\n                        {isLoggedIn ? <Redirect to='/'/> : <LoginPage/>}\r\n                    </Route>\r\n                    <Route exact path='/register'>\r\n                        {isLoggedIn ? <Redirect to='/'/> : <RegisterPage/>}\r\n                    </Route>\r\n                    <Route path='/user/:username' component={ProfilePage}/>\r\n                    <Route exact path='/user'>\r\n                        {isLoggedIn ? <Redirect to={'/user/' + this.props.user.username}/> : <Redirect to='/login'/>}\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoading: state.loading.isLoading,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    user: {\r\n        accessToken: state.user.accessToken,\r\n        tokenType: state.user.tokenType,\r\n        id: state.user.id,\r\n        username: state.user.username,\r\n        roles: state.user.roles,\r\n        mediaLists: state.user.mediaLists,\r\n    }\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleLoginSuccess: user => dispatch(loginSuccess(user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\Search.js",[],["311","312"],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\Home.js",["313","314","315"],"import React, {Component} from 'react';\r\nimport SearchBar from '../components/search/SearchBar'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport NavBar from \"../components/navbar/AppNavBar\";\r\nimport {UserInfo} from \"../components/profilepage/userinfo/UserInfo\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n\r\n    <>\r\n        <NavBar showLogin/>\r\n        <h1 style={{fontSize: \"calc(4rem + 6vw)\", position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -150%)\", width: \"100%\", textAlign: \"center\"}}>MyEList</h1>\r\n        <h3 style={{fontSize: \"calc(1.1rem + 0.7vw)\", position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -200%)\", width: \"100%\", textAlign: \"center\"}}>Simply Search for any Movie/TV Show/Game!</h3>\r\n        <div style={{position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -60%)\"}}>\r\n            <SearchBar/>\r\n        </div>\r\n        </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\MediaPage.js",["316","317","318","319","320","321","322"],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\SearchBar.js",["323","324","325","326","327","328"],"import React, {Component} from 'react';\r\nimport {Row, Col, Form} from 'react-bootstrap';\r\nimport {AsyncPaginate, wrapMenuList, reduceGroupedOptions, withAsyncPaginate} from 'react-select-async-paginate';\r\nimport {components} from 'react-select';\r\nimport {search} from './util.js';\r\nimport Media from './Media';\r\nimport Game from './Game';\r\nimport './SearchBar.css'\r\nimport * as config from '../../config.json';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst searchBarStyle = {\r\n    display: 'table',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100%',\r\n    width: '100%'\r\n};\r\n\r\nconst searchBarStyleFocus = {\r\n    backgroundColor: \"red\"\r\n}\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: null,\r\n            loading: false,\r\n            value: '',\r\n            redirect: false,\r\n            redirectLink: ''\r\n        };\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.handleItemChosen = this.handleItemChosen.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n\r\n    search = async (val, {page}) => {\r\n        //  this.setState({loading: true});\r\n        var t0 = performance.now()\r\n        if (!val) {\r\n            return {\r\n                options: [],\r\n                hasMore: false,\r\n            };\r\n        }\r\n        ;\r\n        let msConfig = config.default.config.links.tmdb.multisearch;\r\n        let gConfig = config.default.config.links.rawg.list;\r\n        const resMedia = await search(`${msConfig.link + msConfig.api_key + config.default.config.keys.tmdb + msConfig.query + val + msConfig.page + page}`, `${gConfig.link + gConfig.api_key + config.default.config.keys.rawg + gConfig.search + val + gConfig.page + page + gConfig.page_size + 20}`);\r\n        const resMovies = resMedia[0];\r\n        const resGames = resMedia[1];\r\n        const movies = resMovies.data.results;\r\n        const games = resGames.data.results;\r\n        var resultsMovies = [];\r\n        var resultsGames = [];\r\n        if (movies) {\r\n            resultsMovies = movies.map(m => ({value: m.id, label: <Media key={m.id} data={m}/>}));\r\n        }\r\n\r\n        if (games) {\r\n            resultsGames = games.map(g => ({value: g.id, label: <Game key={g.id} data={g}/>}));\r\n        }\r\n        return {\r\n            options: [\r\n                {\r\n                    label: 'Media',\r\n                    options: resultsMovies\r\n                },\r\n                {\r\n                    label: 'Games',\r\n                    options: resultsGames\r\n                }\r\n            ],\r\n            hasMore: ((resMovies.data.page < resMovies.data.total_pages) || resGames.data.next),\r\n            additional: {\r\n                page: page + 1,\r\n            }\r\n        };\r\n    };\r\n\r\n    loadOptions = (inputValue, loadedOptions, {page}) => {\r\n        return this.search(inputValue, {page});\r\n    };\r\n\r\n\r\n    onChangeHandler = async e => {\r\n        //this.search(e.value);\r\n        this.setState({value: e});\r\n    };\r\n\r\n    handleItemChosen = (e, props) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        let id = props.data.label.props.data.id;\r\n        let type = props.data.label.props.data.media_type ? props.data.label.props.data.media_type : \"game\";\r\n        this.props.history.push(`/media/${type}/${id}`);\r\n    }\r\n\r\n    handleKeyDown = (e, props) => {\r\n        if (e.key === 'Enter') {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            let id = props.data.label.props.data.id;\r\n            let type = props.data.label.props.data.media_type ? props.data.label.props.data.media_type : \"game\";\r\n            this.props.toggleLoading()\r\n            this.props.history.push(`/media/${type}/${id}`);\r\n        }\r\n    }\r\n\r\n\r\n    myMenu = props => {\r\n        ////console.log(props)\r\n        return (\r\n            <>\r\n                {!this.state.value ? <></> : (\r\n                    <div style={{zIndex: 1000}}>\r\n                <components.MenuList className=\"row\" {...props}>\r\n                    {props.children}\r\n                </components.MenuList>\r\n                    </div>\r\n                    )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    myGroup = props => {\r\n//  //console.log(props)\r\n        return (\r\n            <>\r\n                <Col xs={12} md={6} lg={6}>\r\n                    <components.Group {...props}></components.Group>\r\n                </Col>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    myOption = props => {\r\n        // //console.log(props)\r\n        return (\r\n            <>\r\n                <div onClick={e => this.handleItemChosen(e, props)} onKeyDown={e => this.handleKeyDown(e, props)}>\r\n                    <components.Option {...props}></components.Option>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    mySelect = props => {\r\n        return (\r\n            <>\r\n                <div className=\"Hello\">\r\n                    <AsyncPaginate {...props}></AsyncPaginate>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const CustomAsyncPaginate = withAsyncPaginate(this.mySelect);\r\n        return (\r\n            <>\r\n                <div className={this.state.value ?\r\n                    \"mel-searchbar-container-show-overflow\" :\r\n                    this.props.animate ?\r\n                        \"mel-searchbar-container-animate\" :\r\n                        \"mel-searchbar-container-default\"}\r\n                     style={{zIndex: 1000}}\r\n                >\r\n                    <AsyncPaginate\r\n                        cacheOptions\r\n                        placeholder=\"Search Media...\"\r\n                        loadOptions={this.loadOptions}\r\n                        onInputChange={this.onChangeHandler}\r\n                        components={{\r\n                            Option: this.myOption,\r\n                            Group: this.myGroup,\r\n                            MenuList: wrapMenuList(this.myMenu),\r\n                            DropdownIndicator: () => null,\r\n                            IndicatorSeparator: () => null\r\n                        }}\r\n                        controlShouldRenderValue={false}\r\n                        additional={{page: 1}}\r\n                        reduceOptions={reduceGroupedOptions}\r\n                        closeMenuOnSelect={false}\r\n                        blurInputOnSelect={false}\r\n                        menuIsOpen={true}\r\n                        autoBlur={false}\r\n                        onSelectResetsInput={false}\r\n                        closeOnSelect={false}\r\n                        removeSelect={false}\r\n                        hideSelectedOptions={false}\r\n                    />\r\n                </div>\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchBar);\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\util.js",[],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\mediapage\\companies\\MediaListCard.js",[],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\Game.js",["329"],"import React, {Component} from 'react';\r\nimport {Row} from 'react-bootstrap';\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.validate(this.props.data.name),\r\n      date: this.validateAndInclude(this.validate(this.props.data.released).split(\"-\")[0], '', ' (', ')'),\r\n      image: this.validate(this.props.data.background_image)\r\n\r\n    }\r\n  }\r\n\r\n  validateDefault = (val, defaultVal) => (val ? val : defaultVal);\r\n\r\n  validate = (val) => this.validateDefault(val, '');\r\n\r\n  validateAndAdd = (val, defaultVal, add) => (val ? val + add : '');\r\n\r\n  validateAndInclude = (val, defaultVal, includeLeft, includeRight) => (val ? includeLeft + val + includeRight : defaultVal);\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Row style={{height:'170px'}}>\r\n        <span style={{fontSize:'0.8rem'}}>{this.state.name + this.state.date}</span>\r\n        <img style={{width: \"217px\", height: \"122px\"}} src={this.state.image}></img>\r\n      </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\Media.js",["330","331"],"import React, { Component } from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport * as config from '../../config.json';\r\nimport defaultposter from './../../images/defaultposter.jpg';\r\nimport {AddMediaList} from \"./addmedialist/AddMediaList\";\r\n\r\n\r\nclass Media extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    ////console.log(config.default.config.ids.genres);\r\n    ////console.log(this.props.data.poster_path);\r\n    let cConfig = config.default.config;\r\n    this.state = {\r\n       title: this.validateDefault(this.props.data.title, this.validate(this.props.data.name)),\r\n       date: this.validateAndInclude(this.validateDefault(this.validate(this.props.data.release_date).split('-')[0], this.validate(this.props.data.first_air_date).split('-')[0]), '', ' (', ')'),\r\n       overview: this.validateAndAdd(this.validate(this.props.data.overview).substring(0, Math.max(this.validate(this.props.data.overview).indexOf(' ', 150), 150)), '', this.validate(this.props.data.overview).length >= 150 ? '...' : ''),\r\n       genres: this.props.data.genre_ids ? this.props.data.genre_ids.map(g => cConfig.ids.tmdb.genres[g]).join(', ') : '',\r\n       posterPath: this.props.data.poster_path ? `${cConfig.links.tmdb.image.link + cConfig.links.tmdb.image.size.w92 + this.props.data.poster_path}` : defaultposter,\r\n       mediaType: this.validateAndInclude(this.validateDefault(this.validateReturn(this.validate(this.props.data.media_type) === \"movie\", \"M\", \"\"), this.validateReturn(this.validate(this.props.data.media_type) === \"tv\", \"TV\", \"\")), '', ' [', ']'),\r\n    };\r\n\r\n\r\n\r\n\r\n  //  this.data.overview = this.data.overview.substring(0, this.data.overview.indexOf(' ', 100)) + '...';\r\n  }\r\n\r\n  validateReturn = (val, returnVal, defaultVal) => (val ? returnVal : defaultVal);\r\n\r\n  validateDefault = (val, defaultVal) => (val ? val : defaultVal);\r\n\r\n  validate = (val) => this.validateDefault(val, '');\r\n\r\n  validateAndAdd = (val, defaultVal, add) => (val ? val + add : '');\r\n\r\n  validateAndInclude = (val, defaultVal, includeLeft, includeRight) => (val ? includeLeft + val + includeRight : defaultVal);\r\n\r\n//width='70px' height='100.8px'\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Row style={{height:'170px'}}>\r\n        <Col xs={4}>\r\n          <img src={this.state.posterPath}/>\r\n        </Col>\r\n        <Col xs={7} style={{display: 'inline-block', lineHeight: '1rem'}}>\r\n          <Row>\r\n            <Col>\r\n              <span style={{fontSize: '0.8rem'}}> {this.state.title + this.state.date + this.state.mediaType}</span>\r\n              <p style={{fontSize: '0.6rem', color: 'grey'}}>{this.state.genres}</p>\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col style={{overflow: 'hidden', height: '80px'}}>\r\n              <p style={{fontSize: '0.6rem'}}> {this.state.overview} </p>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n\r\n\r\n\r\n      </>\r\n   );\r\n  }\r\n\r\n}\r\n\r\nexport default Media;\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\mediapage\\companies\\Logo.js",["332"],"import React, { Component } from 'react';\r\nimport { Row, Col, Image } from 'react-bootstrap';\r\nimport * as config from '../../../config.json';\r\n\r\nclass Logo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.name + (this.props.country ? \" (\" + this.props.country + \")\" : \"\"),\r\n            hasImage: this.props.hasLogo,\r\n            image: this.props.path ? this.props.path : \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col xs={this.state.hasImage ? 2 : 0}>\r\n                        {this.state.hasImage ? <Image src={this.state.image} fluid roundedCircle style={{width: \"3rem\", height: \"auto\"}} /> : \"\"}\r\n                    </Col>\r\n                    <Col xs={this.state.hasImage ? 10 : 12}>\r\n                        <span>{this.state.name}</span>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Logo;","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\RegisterPage.js",["333","334","335","336","337"],"import React, {Component} from 'react';\r\nimport SearchBar from '../components/search/SearchBar'\r\nimport {Row, Col, Form, Button, Spinner, Alert} from 'react-bootstrap';\r\nimport NavBar from \"../components/navbar/AppNavBar\";\r\nimport {search} from \"../components/search/util.js\";\r\nimport UserDataService from \"../components/backend/user.service\";\r\nimport Validator from \"../components/backend/validator\";\r\n\r\nclass RegisterPage extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            form: {},\r\n            errors: {},\r\n            validated: false,\r\n            isLoading: false,\r\n            isSomethingWrong: false,\r\n            isSomethingWrongError: \"Something went wrong!\",\r\n            isAccountCreated: false\r\n        };\r\n    }\r\n\r\n    findFormErrors = () => {\r\n       return Validator.validate(false, this.state.form);\r\n    }\r\n\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newErrors = this.findFormErrors();\r\n\r\n        if(Object.keys(newErrors).length > 0) {\r\n            this.setState({errors: newErrors, validated: false});\r\n        } else {\r\n\r\n            this.setState({isLoading: true}, () => {\r\n                Validator.validateAndCreateUser(this.state.form).then(result => {\r\n                    console.log(result);\r\n                   if (result && result.status == 200) {\r\n                       this.setState({validated: true, isLoading: false, errors: {}, form: {}, isAccountCreated: true, isSomethingWrong: false});\r\n                   } else if(result && result.status == 400) {\r\n                       this.setState({isLoading: false, isSomethingWrong: true, isSomethingWrongError: result.data.message});\r\n                   } else {\r\n                       this.setState({isLoading: false, isSomethingWrong: true, isSomethingWrongMessage: \"Something went wrong!\"});\r\n                   }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    setField = (field, value) => {\r\n        this.setState(prevState => ({\r\n            form: {\r\n                ...prevState.form,\r\n                [field]: value\r\n            }\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavBar showSearchBar showLogin/>\r\n                <Form validated={this.state.validated} onSubmit={this.handleSubmit} style={{position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                    {this.state.isSomethingWrong ?\r\n                        ( <Row style={{margin: \"1rem 0\"}}>\r\n                            <Col>\r\n                                <Alert variant=\"danger\">{this.state.isSomethingWrongError}</Alert>\r\n                            </Col>\r\n                        </Row> ) :\r\n                        this.state.isAccountCreated ?\r\n                            ( <Row style={{margin: \"1rem 0\"}}>\r\n                                <Col>\r\n                                    <Alert variant=\"success\">Account successfully created! We have sent you an email to verfiy your account.</Alert>\r\n                                </Col>\r\n                            </Row> ) :\r\n                            \"\"\r\n                    }\r\n                    <Row style={{margin: \"1rem 0\"}}>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>First Name</Form.Label>\r\n                                <Form.Control isInvalid={!!this.state.errors.firstName} type=\"text\" placeholder=\"Enter First Name\" onChange={e => this.setField(\"firstName\", e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">{this.state.errors.firstName}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Last Name</Form.Label>\r\n                                <Form.Control isInvalid={!!this.state.errors.lastName} type=\"text\" placeholder=\"Enter Last Name\" onChange={e => this.setField(\"lastName\", e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">{this.state.errors.lastName}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{margin: \"1rem 0\"}}>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control isInvalid={!!this.state.errors.email} value={this.state.form.email} type=\"text\" placeholder=\"Enter Email\" onChange={e => this.setField(\"email\", e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">{this.state.errors.email}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{margin: \"1rem 0\"}}>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Username</Form.Label>\r\n                                <Form.Control isInvalid={!!this.state.errors.username} type=\"text\" placeholder=\"Enter Username\" onChange={e => this.setField(\"username\", e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">{this.state.errors.username}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control isInvalid={!!this.state.errors.password} type=\"password\" placeholder=\"Enter Password\" onChange={e => this.setField(\"password\", e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">{this.state.errors.password}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{textAlign: \"center\"}}>\r\n                        <Col>\r\n                            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                { this.state.isLoading ? <Spinner variant=\"primary\" animation=\"border\" style={{position: \"absolute\", top: \"50%\", left: \"50%\"}}></Spinner> : <></> }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterPage;\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\LoginPage.js",["338","339","340","341"],"import React, {Component, useEffect, useState} from 'react';\r\nimport SearchBar from '../components/search/SearchBar'\r\nimport { Row, Col, Button, Form, Alert, Spinner } from 'react-bootstrap';\r\nimport { connect } from \"react-redux\";\r\nimport NavBar from \"../components/navbar/AppNavBar\";\r\nimport Validator from \"../components/backend/validator\";\r\nimport { loginSuccess } from \"../redux/slices/UserSlice\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        console.log(this.props.username);\r\n        this.state = {\r\n            form: {},\r\n            errors: {},\r\n            validated: false,\r\n            isLoading: false,\r\n            isSomethingWrong: false,\r\n            isSomethingWrongError: \"Something went wrong!\"\r\n         }\r\n    }\r\n\r\n    findFormErrors = () => {\r\n        return Validator.validate(true, this.state.form);\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newErrors = this.findFormErrors();\r\n\r\n        if(Object.keys(newErrors).length > 0) {\r\n            this.setState({errors: newErrors, validated: false});\r\n        } else {\r\n            this.setState({isLoading: true}, () => {\r\n                Validator.validateLogin(this.state.form).then(result => {\r\n                    console.log(result);\r\n                    if (result && result.status === 200) {\r\n                        this.props.toggleLoginSuccess(result.data);\r\n                        this.setState({ isLoading: false, errors: {}, validated: true, isSomethingWrong: false });\r\n                    } else if (result && result.status === 401) {\r\n                        this.setState({ isLoading: false, errors: {}, validated: false, isSomethingWrong: true, isSomethingWrongError: \"Incorrect username/email or password!\" });\r\n                    } else {\r\n                        this.setState({ isLoading: false, isSomethingWrong: true, errors: {}, validated: false, isSomethingWrongError: \"Something went wrong!\" });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    setField = (field, value) => {\r\n        this.setState(prevState => ({\r\n            form: {\r\n                ...prevState.form,\r\n                [field]: value\r\n            }\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = this.props.isLoggedIn;\r\n        const username = this.props.username;\r\n        return (\r\n            <>\r\n                <NavBar showSearchBar showRegister/>\r\n                <Form validated={this.state.validated} onSubmit={this.handleSubmit} style={{position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\"}}>\r\n                    {this.state.isSomethingWrong ?\r\n                        (<Row style={{margin: \"1rem 0\"}}>\r\n                            <Col>\r\n                                <Alert variant=\"danger\">{this.state.isSomethingWrongError}</Alert>\r\n                            </Col>\r\n                        </Row>) : isLoggedIn ?\r\n                        (<Row style={{margin: \"1rem 0\"}}>\r\n                            <Col>\r\n                                <Alert variant=\"success\">Successfully logged in as {username}</Alert>\r\n                            </Col>\r\n                        </Row>) : \"\"\r\n                    }\r\n                    <Row style={{margin: \"1rem 0\"}}>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Username/Email</Form.Label>\r\n                                <Form.Control isInvalid={!!this.state.errors.username} type=\"text\" placeholder=\"Enter Username/Email\" onChange={e => this.setField(\"username\", e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">{this.state.errors.username}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{margin: \"1rem 0\"}}>\r\n                        <Col>\r\n                            <Form.Group>\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control isInvalid={!!this.state.errors.password} type=\"password\" placeholder=\"Enter Password\" onChange={e => this.setField(\"password\", e.target.value)}/>\r\n                                <Form.Control.Feedback type=\"invalid\">{this.state.errors.password}</Form.Control.Feedback>\r\n                            </Form.Group>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row style={{textAlign: \"center\"}}>\r\n                        <Col>\r\n                            <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n                { this.state.isLoading ? <Spinner variant=\"primary\" animation=\"border\" style={{position: \"absolute\", top: \"50%\", left: \"50%\"}}></Spinner> : <></> }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    username: state.user.username,\r\n    lists: state.user.lists\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleLoginSuccess: user => dispatch(loginSuccess(user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\user.service.js",["342"],"import http from \"./http-common\";\r\nimport AxiosError from \"axios\";\r\n\r\nclass UserDataService {\r\n    getAll(filter = null) {\r\n        return http.get(\"/users\", filter);\r\n    }\r\n\r\n    get(id) {\r\n        return http.get(`/users/${id}`);\r\n    }\r\n\r\n    create(data) {\r\n        return http.post(\"/users/register\", data).catch(error => error.response);\r\n    }\r\n\r\n    delete(id) {\r\n        return http.delete(`/users/${id}`);\r\n    }\r\n\r\n    findUserByUsername(username) {\r\n        return http.get(`/users/username/${username}`).catch(error => false);\r\n    }\r\n\r\n    findUserByEmail (email) {\r\n         return http.get(`/users/email/${email}`).catch(error => false);\r\n    }\r\n\r\n    validateLogin(data) {\r\n        return http.post('/users/login', data).catch(error => error.response);\r\n    }\r\n}\r\n\r\nexport default new UserDataService();\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\http-common.js",[],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\validator.js",["343","344"],"import UserDataService from \"./user.service\"\r\n\r\nclass Validator {\r\n\r\n    // Checks if there is at least one '@' in the text\r\n    isEmail (text) {\r\n        // Match exactly one of '@'\r\n        return text.match(/@{1}/g);\r\n    }\r\n\r\n    isValidEmail(email) {\r\n        if (this.isEmail(email))\r\n            if (email.match(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+/igm)) return true;\r\n        return false;\r\n    }\r\n\r\n    async validateAndCreateUser(form) {\r\n        let user = {firstName: form.firstName, lastName: form.lastName, username: form.username, email: form.email, password: form.password};\r\n        return await UserDataService.create(user);\r\n    }\r\n\r\n    async validateLogin(form) {\r\n        let user = {username: form.username, password: form.password};\r\n        return await UserDataService.validateLogin(user);\r\n    }\r\n\r\n    validate(isLogin = true, form = undefined) {\r\n        if (isLogin) {\r\n            const {username, password} = form;\r\n            const newErrors = {};\r\n\r\n            if (!username) newErrors.username = 'Please enter a Username/Email'\r\n            if (!password) newErrors.password = 'Please enter a password!'\r\n\r\n            return newErrors;\r\n\r\n        } else {\r\n            const {firstName, lastName, email, username, password} = form;\r\n            const newErrors = {};\r\n\r\n            if (!firstName) newErrors.firstName = 'Please enter a first name!'\r\n            else if (firstName.length > 30) newErrors.firstName = 'First Name should be under 30 characters!'\r\n            else if (firstName.length < 2) newErrors.firstName = 'First Name should be over 2 characters!'\r\n\r\n            if (!lastName) newErrors.lastName = 'Please enter a last name!'\r\n            else if (lastName.length > 30) newErrors.lastName = 'Last Name should be under 30 characters!'\r\n            else if (lastName.length < 2) newErrors.lastName = 'Last Name should be over 2 characters!'\r\n\r\n            if (!username) newErrors.username = 'Please choose a username!'\r\n            else if (username.length > 30) newErrors.username = 'Username should be under 30 characters!'\r\n            else if (username.length < 3) newErrors.username = 'Username should be over 3 characters!'\r\n\r\n            if (!email) newErrors.email = 'Please enter an email!'\r\n            else if (email.length > 60) newErrors.email = 'Email should be under 60 characters'\r\n            else if (!this.isValidEmail(email)) newErrors.email = 'Invalid email form!'\r\n\r\n            if (!password) newErrors.password = 'Please enter a password'\r\n            else if (password.length < 8 || password.length > 16) newErrors.password = 'Password must be 8-16 characters!'\r\n\r\n            return newErrors;\r\n        }\r\n    }\r\n}\r\n\r\nexport default new Validator();","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\redux\\store.js",["345"],"import {combineReducers, configureStore} from \"@reduxjs/toolkit\";\r\nimport userSlice from \"./slices/UserSlice\";\r\nimport loadingSlice from \"./slices/LoadingSlice\";\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        user: userSlice,\r\n        loading: loadingSlice\r\n    }\r\n});\r\n\r\nexport default store;","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\redux\\slices\\UserSlice.js",["346"],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\redux\\slices\\LoadingSlice.js",[],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\pages\\user\\ProfilePage.js",["347","348"],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\userinfo\\UserInfo.js",["349","350","351","352","353","354","355","356"],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\navbar\\ProfileDropdown.js",["357","358","359","360"],"import React, {useState} from \"react\";\r\nimport {NavDropdown, Dropdown} from \"react-bootstrap\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {logout} from \"../../redux/slices/UserSlice\";\r\nimport Cookies from \"js-cookie\";\r\nimport \"./ProfileDropdown.css\";\r\n\r\nconst CustomToggle = React.forwardRef(({children, onClick}, ref) => (\r\n    <a\r\n        href=\"\"\r\n        ref={ref}\r\n        onClick={(e) => {\r\n            e.preventDefault();\r\n            onClick(e);\r\n        }}\r\n        className=\"mel-DropdownToggle\"\r\n    >\r\n        <span id=\"mel-DropdownToggle-Children\">{children}</span>\r\n        <span id=\"mel-DropdownToggle-Arrow\">&#x25bc;</span>\r\n    </a>\r\n));\r\n\r\nconst CustomMenu = React.forwardRef(\r\n    ({children, style, className, 'aria-labelledby': labeledBy}, ref) => {\r\n        const [value, setValue] = useState('');\r\n\r\n        return (\r\n            <div className=\"mel-DropdownMenu\">\r\n                <div\r\n                    ref={ref}\r\n                    style={style}\r\n                    className={className}\r\n                    aria-labelledby={labeledBy}\r\n                >\r\n                    <ul className=\"list-unstyled\" style={{color: \"red\"}}>\r\n                        {React.Children.toArray(children).filter(\r\n                            (child) =>\r\n                                !value || child.props.children.toLowerCase().startsWith(value),\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    },\r\n);\r\n\r\nconst toggleLogout = () => {\r\n    Cookies.remove('user');\r\n}\r\n\r\nexport function ProfileDropdown(props) {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <div>\r\n            <Dropdown align=\"end\">\r\n                <Dropdown.Toggle as={CustomToggle}>\r\n                    {props.name}\r\n                </Dropdown.Toggle>\r\n\r\n                <Dropdown.Menu as={CustomMenu}>\r\n                    <Dropdown.Item href=\"/user\">My Profile</Dropdown.Item>\r\n                    <Dropdown.Divider/>\r\n                    <Dropdown.Item onClick={() => dispatch(logout())}>Logout</Dropdown.Item>\r\n                </Dropdown.Menu>\r\n            </Dropdown>\r\n        </div>\r\n    )\r\n}\r\n\r\n// <NavDropdown\r\n//     align=\"end\"\r\n//     menuVariant=\"dark\"\r\n//     title={props.name}\r\n//     style={{borderRadius: \"20px\", backgroundColor: \"#e8e8e8\", color: \"black\"}}\r\n//     autoClose={false}\r\n// >\r\n//     <NavDropdown.Item href=\"/user\"  style={{backgroundColor: \"red\"}}>\r\n//         My Profile\r\n//     </NavDropdown.Item>\r\n//     <NavDropdown.Divider />\r\n//     <NavDropdown.Item onClick={() => dispatch(logout())}>\r\n//         Logout\r\n//     </NavDropdown.Item>\r\n// </NavDropdown>","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\navbar\\AppNavBar.js",["361","362","363","364","365","366"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Col, Row, Container, Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport SearchBar from '../search/SearchBar'\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/slices/UserSlice\";\r\nimport {ProfileDropdown} from \"./ProfileDropdown\";\r\n\r\nclass AppNavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = this.props.isLoggedIn;\r\n        const username = this.props.username;\r\n        return (\r\n            <>\r\n                <Navbar expand=\"lg\" bg='dark' variant='dark' collapseOnSelect\r\n                        style={{marginBottom: \"20px\", padding: \"15px 10px\"}}>\r\n                    <Navbar.Brand as={Link} to='/'>myEList</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic_navbar_nav\"/>\r\n                    <Navbar.Collapse className=\"justify-content-start\">\r\n                        <Nav className=\"mr-auto\" style={{maxHeight: '100px'}}>\r\n                            <Nav.Link as={Link} to='/'>Home</Nav.Link>\r\n                        </Nav>\r\n                        {isLoggedIn ? <></> :\r\n                        this.props.showRegister ? (\r\n                            <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>) :\r\n                        this.props.showLogin ? (\r\n                            <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>) :\r\n                        <></>}\r\n                        <div style={{width: \"calc(200px + 32vw)\", margin: \"0 0.5rem\"}}>\r\n                            {this.props.showSearchBar ? (<SearchBar animate/>) : \"\"}\r\n                        </div>\r\n                        <div style={{marginLeft: \"auto\", marginRight: 0}}>\r\n                            {isLoggedIn ? (<ProfileDropdown name={username} />) : <></>}\r\n                        </div>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    username: state.user.username\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppNavBar);\r\n","C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\search\\addmedialist\\AddMediaList.js",["367","368","369","370"],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\medialist.service.js",["371"],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\MediaListContainer.js",["372","373","374","375","376","377"],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\mediacontainer\\MediaContainer.js",[],"C:\\Users\\me\\Desktop\\Projects\\entertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\mediacontainer\\mediacard\\MediaCard.js",["378"],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\index.js",[],["379","380"],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\reportWebVitals.js",[],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\App.js",["381","382","383"],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\redux\\store.js",["384"],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\Routes.js",["385","386","387"],"import React, {Component} from 'react';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Cookies from \"js-cookie\";\r\nimport MediaPage from './pages/MediaPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport LoginPage from './pages/LoginPage';\r\nimport {connect} from \"react-redux\";\r\nimport {loginSuccess} from \"./redux/slices/UserSlice\";\r\nimport ProfilePage from \"./pages/user/ProfilePage\";\r\nimport {Spinner} from \"react-bootstrap\";\r\nimport UserService from \"./components/backend/user.service\";\r\n\r\nclass Routes extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let isLoggedIn = this.props.isLoggedIn;\r\n        const userCookie = window.localStorage.getItem('user');\r\n        if (isLoggedIn && !userCookie) {\r\n            window.localStorage.setItem('user', JSON.stringify(this.props.user));\r\n        } else if (!isLoggedIn && userCookie) {\r\n            this.props.toggleLoginSuccess(JSON.parse(userCookie));\r\n            isLoggedIn = true;\r\n        }\r\n        return (\r\n            <>\r\n                {\r\n                    this.props.isLoading ?\r\n                        <Spinner variant=\"primary\" animation=\"border\" style={{\r\n                            position: \"fixed\",\r\n                            top: \"50%\",\r\n                            left: \"50%\",\r\n                            zIndex: \"10\",\r\n                            width: \"50px\",\r\n                            height: \"50px\"\r\n                        }}/>\r\n                        :\r\n                        <></>\r\n                }\r\n                <Switch>\r\n                    <Route exact path='/' component={Home}/>\r\n                    <Route path='/media/:type/:id' component={MediaPage}/>\r\n                    <Route exact path='/login'>\r\n                        {isLoggedIn ? <Redirect to='/'/> : <LoginPage/>}\r\n                    </Route>\r\n                    <Route exact path='/register'>\r\n                        {isLoggedIn ? <Redirect to='/'/> : <RegisterPage/>}\r\n                    </Route>\r\n                    <Route path='/user/:username' component={ProfilePage}/>\r\n                    <Route exact path='/user'>\r\n                        {isLoggedIn ? <Redirect to={'/user/' + this.props.user.username}/> : <Redirect to='/login'/>}\r\n                    </Route>\r\n                </Switch>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoading: state.loading.isLoading,\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    user: {\r\n        accessToken: state.user.accessToken,\r\n        tokenType: state.user.tokenType,\r\n        id: state.user.id,\r\n        username: state.user.username,\r\n        roles: state.user.roles,\r\n        mediaLists: state.user.mediaLists,\r\n    }\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        toggleLoginSuccess: user => dispatch(loginSuccess(user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Routes);\r\n","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\navbar\\AppNavBar.js",["388","389","390","391","392","393"],"import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {Col, Row, Container, Navbar, Nav, NavDropdown} from 'react-bootstrap';\r\nimport SearchBar from '../search/SearchBar'\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/slices/UserSlice\";\r\nimport {ProfileDropdown} from \"./ProfileDropdown\";\r\n\r\nclass AppNavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const isLoggedIn = this.props.isLoggedIn;\r\n        const username = this.props.username;\r\n        const isMobile = window.innerWidth <= 868;\r\n        return (\r\n            <div style={{position: this.props.position, zIndex: 1000, width: '100%'}}>\r\n                <Navbar expand=\"lg\" collapseOnSelect\r\n                        style={{padding: \"15px 10px\"}}>\r\n                    <Navbar.Brand as={Link} to='/' style={{\r\n                        textShadow: 'rgb(255, 255, 255) -1px -1px 0px, rgb(255, 255, 255) 1px -1px 0px, rgb(255, 255, 255) -1px 1px 0px, rgb(255, 255, 255) 1px 1px 0px',\r\n                        color: '#e6e6e6'\r\n                    }}>myEList</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic_navbar_nav\"/>\r\n                    <Navbar.Collapse className=\"justify-content-start\">\r\n                        <Nav className=\"mr-auto\" style={{maxHeight: '100px'}}>\r\n                            <Nav.Link as={Link} to='/' style={{\r\n                                color: '#e6e6e6'\r\n                            }}>\r\n                                Home\r\n                            </Nav.Link>\r\n                        </Nav>\r\n                        {isLoggedIn ? <></> :\r\n                        this.props.showRegister ? (\r\n                            <Nav.Link as={Link} to=\"/register\">Register</Nav.Link>) :\r\n                        this.props.showLogin ? (\r\n                            <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>) :\r\n                        <></>}\r\n                        <div style={{width: \"calc(200px + 32vw)\"}}>\r\n                            {this.props.showSearchBar ? (<SearchBar animate/>) : \"\"}\r\n                        </div>\r\n                        <div style={{marginLeft: \"auto\", marginRight: 0, marginTop: isMobile ? '20px' : ''}}>\r\n                            {isLoggedIn ? (<ProfileDropdown name={username} />) : <></>}\r\n                        </div>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    username: state.user.username\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppNavBar);\r\n","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\redux\\slices\\UserSlice.js",["394","395","396"],"import {createAsyncThunk, createSlice} from \"@reduxjs/toolkit\";\r\nimport Cookies from \"js-cookie\";\r\nimport MedialistService from \"../../components/backend/medialist.service\";\r\n\r\nconst initialState = {\r\n   isLoggedIn: false,\r\n   accessToken: \"\",\r\n   tokenType: \"\",\r\n   id: null,\r\n   username: \"\",\r\n   roles: [],\r\n   mediaLists: [],\r\n   loginTime: \"\"\r\n}\r\n\r\nexport const userSlice = createSlice({\r\n   name: 'user',\r\n   initialState: initialState,\r\n   reducers: {\r\n      loginSuccess: (state, action) => {\r\n         const user = action.payload;\r\n         return {...state,\r\n         isLoggedIn : true,\r\n         loginTime : new Date().toLocaleTimeString(),\r\n         accessToken : user.accessToken,\r\n         tokenType : user.tokenType,\r\n         id : user.id,\r\n         username : user.username,\r\n         roles : user.roles,\r\n         mediaLists : user.mediaLists\r\n         }\r\n      },\r\n      logout: () => {\r\n         window.localStorage.removeItem('user');\r\n         return initialState;\r\n      },\r\n      setMediaLists: (state, action) => {\r\n         return {...state, mediaLists: [...action.payload.slice().sort((cML, pML) => cML.name.localeCompare(pML.name))]};\r\n      }\r\n   }\r\n});\r\n\r\n\r\nexport default userSlice.reducer;\r\n\r\nexport const { loginSuccess, logout, setMediaLists } = userSlice.actions;\r\n\r\n// export const resetMediaLists = createAsyncThunk('posts/addPost', async(accessToken) => {\r\n//    const response = await fetch('http://localhost:8090/api/medialist/lists', {\r\n//             method: 'GET',\r\n//             headers: new Headers({Authorization: `Bearer ${accessToken}`, Accept: 'application/json'})\r\n//          }\r\n//     );\r\n//    let data = await response.json();\r\n//    console.log(data);\r\n//    return data;\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\redux\\slices\\LoadingSlice.js",[],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\MediaPage.js",["397","398","399","400","401","402","403"],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\RegisterPage.js",["404","405","406","407","408"],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\Home.js",["409","410","411","412","413","414","415","416"],"import React, {Component} from 'react';\r\nimport SearchBar from '../components/search/SearchBar'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport NavBar from \"../components/navbar/AppNavBar\";\r\nimport {UserInfo} from \"../components/profilepage/userinfo/UserInfo\";\r\nimport * as config from \"../config.json\";\r\nimport {search} from '../components/search/util';\r\nimport Gallery from 'react-grid-gallery';\r\nimport './Home.css';\r\nimport {HomeSearchBar} from \"../components/home/homesearchbar/HomeSearchBar\";\r\nimport {HomeGallery} from \"../components/home/homegallery/HomeGallery\";\r\n\r\nclass Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.body.style.overflowY = 'hidden';\r\n        document.body.style.backgroundColor = 'black !important';\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.body.style.overflowY = 'auto';\r\n        document.body.style.backgroundColor = 'rgb(21, 30, 44) !important';\r\n    }\r\n\r\n    render() {\r\n    return (\r\n    <>\r\n        <NavBar showLogin position='fixed'/>\r\n        <HomeGallery />\r\n        <HomeSearchBar />\r\n    </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\LoginPage.js",["417","418","419","420"],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\user\\ProfilePage.js",["421","422","423"],"import {Component} from \"react\";\r\nimport {loginSuccess, resetMediaLists, setMediaLists} from \"../../redux/slices/UserSlice\";\r\nimport {connect} from \"react-redux\";\r\nimport {UserInfo} from \"../../components/profilepage/userinfo/UserInfo\";\r\nimport AppNavBar from \"../../components/navbar/AppNavBar\";\r\nimport {AddMediaToList} from \"../../components/search/addmediatolist/AddMediaToList\";\r\nimport MedialistService from \"../../components/backend/medialist.service\";\r\nimport {MediaListContainer} from \"../../components/profilepage/medialistcontainer/MediaListContainer\";\r\nimport {MediaPlaytimeGraph} from \"../../components/profilepage/mediaplaytimegraph/MediaPlaytimeGraph\";\r\n\r\nclass ProfilePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUser: this.props.match.params.username === this.props.user.username\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        MedialistService.getLists(this.props.user.accessToken).then(response =>\r\n            response && response.status === 200 && response.data && this.props.setMediaLists(response.data)\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <AppNavBar showSearchBar showLogin />\r\n                <UserInfo user={this.props.user} />\r\n                <MediaPlaytimeGraph />\r\n                <MediaListContainer />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setMediaLists: accessToken => dispatch(setMediaLists(accessToken))\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isLoggedIn: state.user.isLoggedIn,\r\n    user: {\r\n        accessToken: state.user.accessToken,\r\n        tokenType: state.user.tokenType,\r\n        id: state.user.id,\r\n        username: state.user.username,\r\n        roles: state.user.roles,\r\n        mediaLists: state.user.mediaLists\r\n    }\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfilePage);","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\navbar\\ProfileDropdown.js",["424","425","426","427"],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\SearchBar.js",["428","429","430","431","432","433"],"import React, {Component} from 'react';\r\nimport {Row, Col, Form} from 'react-bootstrap';\r\nimport {AsyncPaginate, wrapMenuList, reduceGroupedOptions, withAsyncPaginate} from 'react-select-async-paginate';\r\nimport {components} from 'react-select';\r\nimport {search} from './util.js';\r\nimport Media from './Media';\r\nimport Game from './Game';\r\nimport './SearchBar.css'\r\nimport * as config from '../../config.json';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nconst searchBarStyle = {\r\n    display: 'table',\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    height: '100%',\r\n    width: '100%'\r\n};\r\n\r\nconst searchBarStyleFocus = {\r\n    backgroundColor: \"red\"\r\n}\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            movies: null,\r\n            loading: false,\r\n            value: '',\r\n            redirect: false,\r\n            redirectLink: ''\r\n        };\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.handleItemChosen = this.handleItemChosen.bind(this);\r\n        this.handleKeyDown = this.handleKeyDown.bind(this);\r\n    }\r\n\r\n\r\n    search = async (val, {page}) => {\r\n        //  this.setState({loading: true});\r\n        var t0 = performance.now()\r\n        if (!val) {\r\n            return {\r\n                options: [],\r\n                hasMore: false,\r\n            };\r\n        }\r\n        ;\r\n        let msConfig = config.default.config.links.tmdb.multisearch;\r\n        let gConfig = config.default.config.links.rawg.list;\r\n        const resMedia = await search(`${msConfig.link + msConfig.api_key + config.default.config.keys.tmdb + msConfig.query + val + msConfig.page + page}`, `${gConfig.link + gConfig.api_key + config.default.config.keys.rawg + gConfig.search + val + gConfig.page + page + gConfig.page_size + 20}`);\r\n        const resMovies = resMedia[0];\r\n        const resGames = resMedia[1];\r\n        const movies = resMovies.data.results;\r\n        const games = resGames.data.results;\r\n        var resultsMovies = [];\r\n        var resultsGames = [];\r\n        if (movies) {\r\n            resultsMovies = movies.map(m => ({value: m.id, label: <Media key={m.id} data={m}/>}));\r\n        }\r\n\r\n        if (games) {\r\n            resultsGames = games.map(g => ({value: g.id, label: <Game key={g.id} data={g}/>}));\r\n        }\r\n        return {\r\n            options: [\r\n                {\r\n                    label: 'Media',\r\n                    options: resultsMovies\r\n                },\r\n                {\r\n                    label: 'Games',\r\n                    options: resultsGames\r\n                }\r\n            ],\r\n            hasMore: ((resMovies.data.page < resMovies.data.total_pages) || resGames.data.next),\r\n            additional: {\r\n                page: page + 1,\r\n            }\r\n        };\r\n    };\r\n\r\n    loadOptions = (inputValue, loadedOptions, {page}) => {\r\n        return this.search(inputValue, {page});\r\n    };\r\n\r\n\r\n    onChangeHandler = async e => {\r\n        //this.search(e.value);\r\n        this.setState({value: e});\r\n    };\r\n\r\n    handleItemChosen = (e, props) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n        let id = props.data.label.props.data.id;\r\n        let type = props.data.label.props.data.media_type ? props.data.label.props.data.media_type : \"game\";\r\n        this.props.history.push(`/media/${type}/${id}`);\r\n    }\r\n\r\n    handleKeyDown = (e, props) => {\r\n        if (e.key === 'Enter') {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n            let id = props.data.label.props.data.id;\r\n            let type = props.data.label.props.data.media_type ? props.data.label.props.data.media_type : \"game\";\r\n            this.props.toggleLoading()\r\n            this.props.history.push(`/media/${type}/${id}`);\r\n        }\r\n    }\r\n\r\n\r\n    myMenu = props => {\r\n        ////console.log(props)\r\n        return (\r\n            <>\r\n                {!this.state.value ? <></> : (\r\n                    <div>\r\n                        <components.MenuList className=\"row\" {...props}>\r\n                            {props.children}\r\n                        </components.MenuList>\r\n                    </div>\r\n                    )}\r\n            </>\r\n        )\r\n    }\r\n\r\n    myGroup = props => {\r\n//  //console.log(props)\r\n        return (\r\n            <>\r\n                <Col xs={12} md={12} lg={6}>\r\n                    <components.Group {...props}></components.Group>\r\n                </Col>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n    myOption = props => {\r\n        // //console.log(props)\r\n        return (\r\n            <>\r\n                <div onClick={e => this.handleItemChosen(e, props)} onKeyDown={e => this.handleKeyDown(e, props)}>\r\n                    <components.Option {...props}></components.Option>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    mySelect = props => {\r\n        return (\r\n            <>\r\n                <div className=\"Hello\">\r\n                    <AsyncPaginate {...props}></AsyncPaginate>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const CustomAsyncPaginate = withAsyncPaginate(this.mySelect);\r\n        return (\r\n            <>\r\n                <div className={this.state.value ?\r\n                    \"mel-searchbar-container-show-overflow\" :\r\n                    this.props.animate ?\r\n                        \"mel-searchbar-container-animate\" :\r\n                        \"mel-searchbar-container-default\"}\r\n                     style={{zIndex: 1000}}\r\n                >\r\n                    <AsyncPaginate\r\n                        cacheOptions\r\n                        placeholder=\"Search Media...\"\r\n                        loadOptions={this.loadOptions}\r\n                        onInputChange={this.onChangeHandler}\r\n                        components={{\r\n                            Option: this.myOption,\r\n                            Group: this.myGroup,\r\n                            MenuList: wrapMenuList(this.myMenu),\r\n                            DropdownIndicator: () => null,\r\n                            IndicatorSeparator: () => null\r\n                        }}\r\n                        controlShouldRenderValue={false}\r\n                        additional={{page: 1}}\r\n                        reduceOptions={reduceGroupedOptions}\r\n                        closeMenuOnSelect={false}\r\n                        blurInputOnSelect={false}\r\n                        menuIsOpen={true}\r\n                        autoBlur={false}\r\n                        onSelectResetsInput={false}\r\n                        closeOnSelect={false}\r\n                        removeSelect={false}\r\n                        hideSelectedOptions={false}\r\n                    />\r\n                </div>\r\n\r\n\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(SearchBar);\r\n","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\medialist.service.js",["434"],"import http from './http-common';\r\nimport config from '../../config.json';\r\n\r\nclass MedialistService {\r\n\r\n    addMovie(listId, movie, token) {\r\n        return http.post(`/medialist/lists/${listId}/movie`, movie, {headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    addTv(listId, tv, token) {\r\n        return http.post(`/medialist/lists/${listId}/tv`, tv, {headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    addGame(listId, game, token) {\r\n        return http.post(`/medialist/lists/${listId}/game`, game, {headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    deleteMovieFromList(listId, movieId, token) {\r\n        return http.delete(`/medialist/lists/${listId}/movie/${movieId}`,{headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    deleteTvFromList(listId, tvId, token) {\r\n        return http.delete(`/medialist/lists/${listId}/tv/${tvId}`,{headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    deleteGameFromList(listId, gameId, token) {\r\n        return http.delete(`/medialist/lists/${listId}/game/${gameId}`,{headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    addMediaList(mediaList, token) {\r\n        return http.post(`/medialist/lists/`, mediaList, {headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    deleteMediaList(listId, token) {\r\n        return http.delete(`/medialist/lists/${listId}`, {headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    getLists(token) {\r\n        return http.get('/medialist/lists', {headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n}\r\n\r\nexport default new MedialistService();","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\util.js",[],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\validator.js",["435","436"],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\user.service.js",["437"],"import http from \"./http-common\";\r\nimport AxiosError from \"axios\";\r\n\r\nclass UserDataService {\r\n\r\n    authenticate(token) {\r\n        return http.get(\"/authenticate\",  {headers: {Authorization: `Bearer ${token}`}}).catch(error => error.response);\r\n    }\r\n\r\n    getAll(filter = null) {\r\n        return http.get(\"/users\", filter);\r\n    }\r\n\r\n    get(id) {\r\n        return http.get(`/users/${id}`);\r\n    }\r\n\r\n    create(data) {\r\n        return http.post(\"/users/register\", data).catch(error => error.response);\r\n    }\r\n\r\n    delete(id) {\r\n        return http.delete(`/users/${id}`);\r\n    }\r\n\r\n    findUserByUsername(username) {\r\n        return http.get(`/users/username/${username}`).catch(error => false);\r\n    }\r\n\r\n    findUserByEmail (email) {\r\n         return http.get(`/users/email/${email}`).catch(error => false);\r\n    }\r\n\r\n    validateLogin(data) {\r\n        return http.post('/users/login', data).catch(error => error.response);\r\n    }\r\n}\r\n\r\nexport default new UserDataService();\r\n","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\userinfo\\UserInfo.js",["438","439","440","441","442","443"],"import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Button, Form, Row, Col, Card, Image} from \"react-bootstrap\";\r\nimport './UserInfo.css';\r\nimport {search} from \"../../search/util\";\r\nimport * as config from \"../../../config.json\";\r\n\r\nexport function UserInfo(props) {\r\n\r\n    const [bgImage, setBgImage] = useState('');\r\n    const user = useSelector(state => state.user);\r\n    const mediaLists = useSelector(state => state.user.mediaLists);\r\n\r\n    let numMovies = 0, numTvs = 0, numGames = 0, numMedia = 0, uniqueMovies = [], uniqueTvs = [], uniqueGames = [];\r\n\r\n    if (mediaLists) {\r\n        console.log(mediaLists);\r\n        mediaLists.forEach(mediaList => {\r\n            mediaList.movies.forEach(movie => {\r\n                if (!uniqueMovies.includes(movie.id)) uniqueMovies.push(movie.id);\r\n            });\r\n            mediaList.tvs.forEach(tv => {\r\n                if (!uniqueTvs.includes(tv.id)) uniqueTvs.push(tv.id);\r\n            });\r\n            mediaList.games.forEach(game => {\r\n                if (!uniqueGames.includes(game.id)) uniqueGames.push(game.id);\r\n            });\r\n        });\r\n    }\r\n\r\n    const getBgImage = useCallback(async () => {\r\n        const cConfig = config.default.config.links.tmdb;\r\n        const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor((Math.random() * 5) + 1)}`);\r\n        const movieImagesData = movieImagesResults[0].data.results;\r\n        const randMovie = movieImagesData[Math.floor(Math.random() * movieImagesResults.length)]\r\n        console.log(randMovie);\r\n        setBgImage(`${cConfig.image.link + '/original/' + randMovie.backdrop_path}`);\r\n    }, []);\r\n\r\n    useEffect(getBgImage, []);\r\n\r\n    numMovies = uniqueMovies.length;\r\n    numTvs = uniqueTvs.length;\r\n    numGames = uniqueGames.length;\r\n\r\n    numMedia = numMovies + numTvs + numGames;\r\n\r\n    return (\r\n        <>\r\n            <Row className='align-items-center' style={{height: '80vh'}}>\r\n                <div className='user-profile-image-gradient'></div>\r\n                <div className='user-profile-image-container' style={{backgroundImage: 'url(' + bgImage + ')'}}>\r\n                </div>\r\n                <Col xs={2}>\r\n                    <Image className='user-profile-picture' src={require('../../../images/default_profile.png').default} />\r\n                </Col>\r\n                <Col xs={10}>\r\n                    <Row className='user-profile-name'>\r\n                        {user.username}\r\n                    </Row>\r\n                    <Row>\r\n                        <Col xs={12} ml={6} xl={4}>\r\n                            <Row>\r\n                                <Col xs={3}>\r\n                                    <Row>\r\n                                        <p className='user-media-num-title'>\r\n                                            {'Media'}\r\n                                        </p>\r\n                                        <p className='user-media-num-value'>\r\n                                            {numMedia}\r\n                                        </p>\r\n                                    </Row>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <p className='user-media-num-title'>\r\n                                        {'Movies'}\r\n                                    </p>\r\n                                    <p className='user-media-num-value'>\r\n                                        {numMovies}\r\n                                    </p>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <p className='user-media-num-title'>\r\n                                        {'Tvs'}\r\n                                    </p>\r\n                                    <p className='user-media-num-value'>\r\n                                        {numTvs}\r\n                                    </p>\r\n                                </Col>\r\n                                <Col xs={3}>\r\n                                    <p className='user-media-num-title'>\r\n                                        {'Games'}\r\n                                    </p>\r\n                                    <p className='user-media-num-value'>\r\n                                        {numGames}\r\n                                    </p>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\http-common.js",[],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\Game.js",["444","445","446"],"import React, {Component} from 'react';\r\nimport {Col, Row} from 'react-bootstrap';\r\nimport {SearchAddMediaToList} from \"./searchaddmediatolist/SearchAddMediaToList\";\r\nimport * as config from \"../../config.json\";\r\nimport defaultposter from \"../../images/defaultposter.jpg\";\r\n\r\nclass Game extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: this.validate(this.props.data.name),\r\n      date: this.validateAndInclude(this.validate(this.props.data.released).split(\"-\")[0], '', ' (', ')'),\r\n      image: this.validate(this.props.data.background_image),\r\n      playTime: this.props.data.play_time\r\n    }\r\n  }\r\n\r\n  validateDefault = (val, defaultVal) => (val ? val : defaultVal);\r\n\r\n  validate = (val) => this.validateDefault(val, '');\r\n\r\n  validateAndAdd = (val, defaultVal, add) => (val ? val + add : '');\r\n\r\n  validateAndInclude = (val, defaultVal, includeLeft, includeRight) => (val ? includeLeft + val + includeRight : defaultVal);\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Row style={{height:'170px'}}>\r\n        <Col xs={10}>\r\n          <Row><span style={{fontSize:'0.8rem'}}>{this.state.name + this.state.date}</span></Row>\r\n          <Row><img style={{width: \"217px\", height: \"122px\"}} src={this.state.image}></img></Row>\r\n        </Col>\r\n        <Col xs={2}>\r\n          <SearchAddMediaToList\r\n              apiId={this.props.data.id}\r\n              title={this.state.name}\r\n              releaseYear={this.state.date.replace(\"(\", \"\").replace(\")\",\"\")}\r\n              type='game'\r\n              playTime={this.state.playTime}\r\n              posterPath={this.state.image}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\Media.js",["447","448","449"],"import React, { Component } from 'react';\r\nimport {Row, Col, Button} from 'react-bootstrap';\r\nimport * as config from '../../config.json';\r\nimport defaultposter from './../../images/defaultposter.jpg';\r\nimport {AddMediaToList} from \"./addmediatolist/AddMediaToList\";\r\nimport {SearchAddMediaToList} from \"./searchaddmediatolist/SearchAddMediaToList\";\r\n\r\n\r\nclass Media extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    ////console.log(config.default.config.ids.genres);\r\n    ////console.log(this.props.data.poster_path);\r\n    //console.log(this.props.data);\r\n    let cConfig = config.default.config;\r\n    this.state = {\r\n       title: this.validateDefault(this.props.data.title, this.validate(this.props.data.name)),\r\n       date: this.validateAndInclude(this.validateDefault(this.validate(this.props.data.release_date).split('-')[0], this.validate(this.props.data.first_air_date).split('-')[0]), '', ' (', ')'),\r\n       overview: this.validateAndAdd(this.validate(this.props.data.overview).substring(0, Math.max(this.validate(this.props.data.overview).indexOf(' ', 150), 150)), '', this.validate(this.props.data.overview).length >= 150 ? '...' : ''),\r\n       genres: this.props.data.genre_ids ? this.props.data.genre_ids.map(g => cConfig.ids.tmdb.genres[g]).join(', ') : '',\r\n       posterPath: this.props.data.poster_path ? `${cConfig.links.tmdb.image.link + cConfig.links.tmdb.image.size.w92 + this.props.data.poster_path}` : defaultposter,\r\n       mediaType: this.validateAndInclude(this.validateDefault(this.validateReturn(this.validate(this.props.data.media_type) === \"movie\", \"M\", \"\"), this.validateReturn(this.validate(this.props.data.media_type) === \"tv\", \"TV\", \"\")), '', ' [', ']'),\r\n       playTime: this.props.data.media_type === 'movie' ? this.props.data.release_date : (this.props.data.episode_run_time && this.props.data.episode_run_time.length === 0 ? 0 : this.props.data.episode_run_time && this.props.data.episode_run_time.reduce((acc, curr) => acc + curr))\r\n    };\r\n\r\n\r\n\r\n\r\n  //  this.data.overview = this.data.overview.substring(0, this.data.overview.indexOf(' ', 100)) + '...';\r\n  }\r\n\r\n  validateReturn = (val, returnVal, defaultVal) => (val ? returnVal : defaultVal);\r\n\r\n  validateDefault = (val, defaultVal) => (val ? val : defaultVal);\r\n\r\n  validate = (val) => this.validateDefault(val, '');\r\n\r\n  validateAndAdd = (val, defaultVal, add) => (val ? val + add : '');\r\n\r\n  validateAndInclude = (val, defaultVal, includeLeft, includeRight) => (val ? includeLeft + val + includeRight : defaultVal);\r\n\r\n//width='70px' height='100.8px'\r\n\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <Row style={{height:'170px'}}>\r\n        <Col xs={4}>\r\n          <img src={this.state.posterPath}/>\r\n        </Col>\r\n        <Col xs={6} style={{display: 'inline-block', lineHeight: '1rem'}}>\r\n          <Row>\r\n            <Col>\r\n              <span style={{fontSize: '0.8rem'}}> {this.state.title + this.state.date + this.state.mediaType}</span>\r\n              <p style={{fontSize: '0.6rem', color: 'grey'}}>{this.state.genres}</p>\r\n          </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col style={{overflow: 'hidden', height: '80px'}}>\r\n              <p style={{fontSize: '0.6rem'}}> {this.state.overview} </p>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n        <Col xs={1}>\r\n          <SearchAddMediaToList\r\n              apiId={this.props.data.id}\r\n              title={this.state.title}\r\n              releaseYear={this.state.date.replace(\"(\", \"\").replace(\")\",\"\")}\r\n              playTime={this.state.playTime}\r\n              type={this.props.data.media_type}\r\n              posterPath={this.props.data.poster_path ? `${config.default.config.links.tmdb.image.link + config.default.config.links.tmdb.image.size.poster.medium + this.props.data.poster_path}` : defaultposter}\r\n          />\r\n        </Col>\r\n      </Row>\r\n\r\n\r\n\r\n\r\n\r\n      </>\r\n   );\r\n  }\r\n\r\n}\r\n\r\nexport default Media;\r\n","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\MediaListContainer.js",["450","451","452","453","454","455","456","457","458","459"],"import React, {useEffect, useRef, useState} from \"react\";\r\nimport {Button, Card, Col, Collapse, Fade, Image, Row} from \"react-bootstrap\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FlippingCard, FlippingCardBack, FlippingCardFront, TaggedContentCard} from \"react-ui-cards\";\r\nimport {MediaContainer} from \"./mediacontainer/MediaContainer\";\r\nimport {AddMediaList} from \"./addmedialist/AddMediaList\";\r\nimport MedialistService from \"../../backend/medialist.service\";\r\nimport {setMediaLists} from \"../../../redux/slices/UserSlice\";\r\nimport './MediaListContainer.css';\r\n\r\nconst getMedialistType = type => (type === 'MEDIA_MOVIE' && 'movie') || (type === 'MEDIA_TV' && 'tv') || (type === 'MEDIA_GAME' && 'game') || 'all';\r\n\r\nexport function MediaListContainer(props) {\r\n\r\n    const [selectedMediaList, setSelectedMediaList] = useState(null);\r\n    const [prevSelectedMediaList, setPrevSelectedMediaList] = useState(null);\r\n\r\n    const [addMediaList, setAddMediaList] = useState(false);\r\n\r\n    const [resetMediaList, setResetMediaList] = useState(true);\r\n\r\n    const mediaContainerEndRef = useRef(null);\r\n\r\n    console.log(\"UPDATED\");\r\n\r\n    const _mediaLists = useSelector(state => state.user.mediaLists);\r\n\r\n    const mediaLists = [..._mediaLists];\r\n\r\n    const accessToken = useSelector(state => state.user.accessToken);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const numRows = Math.ceil((mediaLists.length + 1) / 3);\r\n    const numListCols = 3;\r\n\r\n    const mediaListTitle = `MediaLists (${mediaLists.length})`;\r\n\r\n    const isMobile = window.innerWidth <= 768;\r\n\r\n\r\n    useEffect(() => setSelectedMediaList(mediaLists.find(mediaList => selectedMediaList && mediaList.id === selectedMediaList.id) || null), [mediaLists])\r\n\r\n    // useEffect(() => {\r\n    //     if (resetMediaList) {\r\n    //         MedialistService.getLists(accessToken).then(response => {\r\n    //                 if (response && response.status === 200 && response.data) {\r\n    //                     dispatch((setMediaLists(response.data)));\r\n    //                     setResetMediaList(false);\r\n    //                 }\r\n    //             }\r\n    //         );\r\n    //     }\r\n    //         // MedialistService.getLists(accessToken).then(response => {\r\n    //         //     if (response.status === 200) {\r\n    //         //         setMediaLists(response.data.slice().sort((cML, pML) => cML.name.localeCompare(pML.name)));\r\n    //         //         setSelectedMediaList(response.data.find(mediaList => selectedMediaList && mediaList.id === selectedMediaList.id) || null);\r\n    //         //         setResetMediaList(false);\r\n    //         //     }\r\n    //         // })\r\n    // }, [resetMediaList]);\r\n\r\n    const deleteMediaList = listId => {\r\n        MedialistService.deleteMediaList(listId, accessToken).then(response => {\r\n            MedialistService.getLists(accessToken).then(response =>\r\n                response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n            );\r\n        });\r\n    }\r\n\r\n    if (!mediaLists) return;\r\n\r\n    let mediaListComponents = mediaLists.slice().sort((cML, pML) => cML.name.localeCompare(pML.name)).map((mediaList, i) => (\r\n        <div key={mediaList.id}>\r\n            <Row className=\"card-container justify-content-sm-center justify-content-md-center\">\r\n                <TaggedContentCard\r\n                    href={void (0)}\r\n                    onClick={() => {\r\n                        if (selectedMediaList !== null && mediaList.id === selectedMediaList.id) {\r\n                            setPrevSelectedMediaList(selectedMediaList);\r\n                            setSelectedMediaList(null);\r\n                        } else {\r\n                            setPrevSelectedMediaList(selectedMediaList);\r\n                            setSelectedMediaList(null);\r\n                            setTimeout(() => setSelectedMediaList(mediaList), 200);\r\n                            setAddMediaList(false);\r\n                        }\r\n                    }}\r\n                    thumbnail={require(\"../../../images/medialistimages/\" + mediaList.posterName).default}\r\n                    title={mediaList.name}\r\n                    description={(\r\n                        <div>\r\n                            {mediaList.description ?\r\n                                <p>{mediaList.description}</p> :\r\n                                <p style={{fontStyle: \"italic\"}}>No Description...</p>\r\n                            }\r\n                            <Button variant=\"danger\" onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                deleteMediaList(mediaList.id)\r\n                                setSelectedMediaList(null);\r\n                            }} style={{float: 'right'}}>Delete</Button>\r\n                        </div>\r\n                    )}\r\n                    tags={[]}\r\n                />\r\n            </Row>\r\n            <Row style={{\r\n                width: 'calc(' + window.innerWidth + 'px  - 10vw',\r\n                transform: (!isMobile ? 'translateX('+ (-34 * (i % numListCols)) + '%)' : '')\r\n            }}>\r\n                    <Collapse in={selectedMediaList && mediaList.id === selectedMediaList.id}>\r\n                        <div>\r\n                                {(selectedMediaList || prevSelectedMediaList) && <MediaContainer mediaList={selectedMediaList || prevSelectedMediaList}\r\n                                                                      setResetMediaList={setResetMediaList}/>}\r\n                        </div>\r\n                    </Collapse>\r\n            </Row>\r\n        </div>\r\n    ))\r\n    mediaListComponents.push((\r\n        <Row className=\"card-container justify-content-sm-center\" key='CREATE_NEW_MEDIALIST'>\r\n            <TaggedContentCard\r\n                href={void (0)}\r\n                onClick={() => {\r\n                    setAddMediaList(!addMediaList);\r\n                    setSelectedMediaList(null);\r\n                }}\r\n                thumbnail={require(\"../../../images/medialistimages/add_new_medialist.png\").default}\r\n                title=\"Create\"\r\n                description={(<p style={{fontStyle: \"italic\"}}>Create New MediaList...</p>)}\r\n                tags={[]}\r\n            />\r\n        </Row>\r\n    ));\r\n\r\n\r\n    let mediaListRows = [];\r\n    for (let i = 0; i < numRows; i++) {\r\n        mediaListRows.push((\r\n            <div key={i}>\r\n                <Row className=\"justify-content-sm-center justify-content-md-center\">\r\n                    {[0, 1, 2].map(col => (\r\n                        <Col xl={4} xs={12} key={col}>\r\n                            {mediaListComponents[(i * 3) + col]}\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </div>\r\n        ));\r\n    }\r\n\r\n    mediaListRows.push((\r\n        <Collapse in={addMediaList} key={\"CRATE_NEW_MEDIALIST\"}>\r\n            <div>\r\n                <Row>\r\n                    {addMediaList && <AddMediaList addMediaList={addMediaList} setResetMediaList={setResetMediaList}/>}\r\n                </Row>\r\n            </div>\r\n        </Collapse>\r\n    ))\r\n\r\n    return (\r\n        <Row className=\"media-lists-container\">\r\n            {console.log('RERENDED')}\r\n                <div className=\"media-lists-inner\">\r\n                    <h1 style={{\r\n                        marginLeft: '1vw',\r\n                        marginTop: '-3vh',\r\n                        color: 'white'\r\n                    }}>{mediaListTitle}</h1>\r\n                    {mediaListRows}\r\n                </div>\r\n        </Row>\r\n    )\r\n\r\n}","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\mediapage\\companies\\MediaListCard.js",["460","461"],"import React, {Component, useEffect, useState} from 'react';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport Logo from './Logo';\r\nimport '../mediaCard.css';\r\n\r\nexport function MediaListCard(props) {\r\n\r\n    const getLogos = () => {\r\n        if (!props.list) return [];\r\n        // console.table(this.props.list);\r\n        // console.log(this.props.idValue);\r\n        return props.list.map((item, index) =>\r\n            <ul key={props.idValue ? item[props.idValue ? props.idValue : \"id\"] : index}>\r\n                <li\r\n                    key={props.idValue ? item[props.idValue ? props.idValue : \"id\"] : index}\r\n                    style={{listStyle: \"none\"}}>\r\n                    <Logo path={item.logo_path} hasLogo={props.hasLogo}\r\n                          name={item[props.nameValue ? props.nameValue : \"name\"]}\r\n                          country={item.origin_country}/>\r\n                </li>\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    const [logos, setLogos] = useState(getLogos());\r\n    const [title, setTitle] = useState(props.title);\r\n\r\n    useEffect(() => {\r\n        setLogos(getLogos());\r\n        setTitle(props.title);\r\n    }, [props.list, props.idValue, props.nameValue, props.hasLogo, props.title, props.id])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mediaCardBox\" style={{maxWidth: \"350px\"}}>\r\n                <Row>\r\n                    <Col xs={12}>\r\n                        <h3 className=\"mediaCardTitle\">{title}</h3>\r\n                        {logos}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\mediacontainer\\MediaContainer.js",["462"],"import {Col, Row} from \"react-bootstrap\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport './MediaContainer.css';\r\nimport {MediaCard} from \"./mediacard/MediaCard\";\r\nimport MedialistService from \"../../../backend/medialist.service\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setMediaLists} from \"../../../../redux/slices/UserSlice\";\r\n\r\nexport function MediaContainer(props) {\r\n    const [mediaList, setMediaList] = useState(props.mediaList);\r\n\r\n    const mediaContainerRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => mediaContainerRef.current.scrollIntoView({behavior: 'smooth', block: 'start'}), 100)\r\n    });\r\n\r\n    useEffect(() => {\r\n        setMediaList(props.mediaList);\r\n    }, [props.mediaList]);\r\n\r\n    const accessToken = useSelector(state => state.user.accessToken);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isSmall = window.innerWidth <= 428;\r\n    const isMedium = window.innerWidth > 428 && window.innerWidth <= 768;\r\n\r\n    const deleteMedia = (media, type) => {\r\n        console.log(\"DELETE\")\r\n        if (type === 'movie') {\r\n            MedialistService.deleteMovieFromList(mediaList.id, media.id, accessToken).then(response => {\r\n                MedialistService.getLists(accessToken).then(response =>\r\n                    response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n                );\r\n            })\r\n        }\r\n\r\n        if (type === 'tv') {\r\n            MedialistService.deleteTvFromList(mediaList.id, media.id, accessToken).then(response => {\r\n                MedialistService.getLists(accessToken).then(response =>\r\n                    response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n                );\r\n            })\r\n        }\r\n\r\n        if (type === 'game') {\r\n            MedialistService.deleteGameFromList(mediaList.id, media.id, accessToken).then(response => {\r\n                MedialistService.getLists(accessToken).then(response =>\r\n                    response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n                );\r\n            })\r\n        }\r\n    }\r\n\r\n    const numRows = Math.ceil((mediaList.movies.length + mediaList.tvs.length + mediaList.games.length) / (isMedium ? 2 : 4));\r\n    let mediaComponents = [];\r\n\r\n    let _mediaList = {...mediaList};\r\n\r\n    const allMedias = _mediaList.movies\r\n        .map(movie => {\r\n            movie = {...movie, type: 'movie'};\r\n            return movie;\r\n        })\r\n        .concat(_mediaList.tvs\r\n            .map(tv => {\r\n                tv = {...tv, type: 'tv'};\r\n                return tv;\r\n            })\r\n            .concat(_mediaList.games\r\n                .map(game => {\r\n                    game = {...game, type: 'game'}\r\n                    return game;\r\n                })))\r\n        .sort((cM, pM) => cM.title && cM.title.localeCompare(pM.title));\r\n\r\n\r\n    allMedias.map(media => (\r\n        mediaComponents.push(<MediaCard deleteMedia={deleteMedia} media={media} type={media.type} />)\r\n    ))\r\n\r\n    const mediaRows = [];\r\n    for (let i = 0; i < numRows; i++) {\r\n        mediaRows.push((\r\n           <div key={i}>\r\n               <Row className='justify-content-center'>\r\n                   {(isMedium ? [0,1] : [0, 1, 2, 3]).map(col => (\r\n                       <Col xs={12} md={6} xl={3} key={col}>\r\n                           {mediaComponents[(i * (isMedium ? 2 : 4)) + col]}\r\n                       </Col>\r\n                   ))}\r\n               </Row>\r\n           </div>\r\n        ));\r\n    }\r\n\r\n    const mediaContainerTitle = `${mediaList.name}  ${allMedias.length !== 0 ? `(${allMedias.length})` : ''}`;\r\n\r\n    return (\r\n        <Row className=\"media-container\">\r\n            <Col>\r\n                <div className=\"media-inner\" ref={mediaContainerRef}>\r\n                    <h2 style={{\r\n                        color: 'white'\r\n                    }}>\r\n                        {mediaContainerTitle}\r\n                    </h2>\r\n                    {mediaRows}\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\mediapage\\companies\\Logo.js",["463","464"],"import React, {Component, useEffect, useState} from 'react';\r\nimport { Row, Col, Image } from 'react-bootstrap';\r\nimport * as config from '../../../config.json';\r\n\r\nexport function Logo(props) {\r\n    const [name, setName] = useState(props.name + (props.country ? '(' + props.country + ')' : ''));\r\n    const [hasImage, setHasImage] = useState(props.hasLogo);\r\n    const [image, setImage] = useState(props.path || '');\r\n\r\n    useEffect(() => {\r\n        setName(props.name + (props.country ? '(' + props.country + ')' : ''));\r\n        setHasImage(props.hasLogo);\r\n        setImage(props.path || '');\r\n    }, [props.name, props.country, props.hasLogo, props.path])\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col xs={hasImage ? 2 : 0}>\r\n                    {hasImage ? <Image src={image} fluid roundedCircle style={{width: \"3rem\", height: \"auto\"}} /> : \"\"}\r\n                </Col>\r\n                <Col xs={hasImage ? 10 : 12}>\r\n                    <span style={{\r\n                    }}>{name}</span>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Logo;","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\mediacontainer\\mediacard\\MediaCard.js",["465"],"import './MediaCard.css';\r\nimport {useEffect, useState} from \"react\";\r\nimport {FlippingCard, FlippingCardBack, FlippingCardFront} from \"react-ui-cards\";\r\nimport {Image, Row} from \"react-bootstrap\";\r\nimport {faXmarkCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport function MediaCard(props) {\r\n   const media = props.media;\r\n   const isMobile = /Android|webOS|iPhone|kindle|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n   const [redirect, setRedirect] = useState('');\r\n   if (redirect) return (<Redirect to={redirect} />);\r\n    return (\r\n        <>\r\n            <FlippingCard>\r\n                <FlippingCardFront>\r\n                    {isMobile ? (<div className=\"card-back-container\">\r\n                        <Image className=\"card-media-back-image\" src={media.posterPath} style={{filter: 'none'}} />\r\n                        <Row className=\"card-media-container\">\r\n                            <p className=\"card-media-title\">{media.title + (media.releaseYear && (' (' + media.releaseYear + ')'))}</p>\r\n                            <p className=\"card-media-type\">{'<' + props.type + '>'}</p>\r\n                            <FontAwesomeIcon className=\"card-media-delete-icon\" icon={faXmarkCircle} onClick={() => props.deleteMedia(media, props.type)} />\r\n                        </Row>\r\n                    </div>) :\r\n                        (<div\r\n                        style={{\r\n                            width: '100%',\r\n                            height: '100%',\r\n                            backgroundSize: 'cover',\r\n                            backgroundPosition: 'center',\r\n                            backgroundRepeat: \"no-repeat\",\r\n                            backgroundImage: 'url(' + media.posterPath + ')'\r\n                        }} />)}\r\n                </FlippingCardFront>\r\n                <FlippingCardBack>\r\n                    <div className=\"card-back-container\" onClick={() => setRedirect('/media/' + media.type + '/' + media.apiId)}>\r\n                        <Image className=\"card-media-back-image\" src={media.posterPath} />\r\n                        <Row className=\"card-media-container\">\r\n                            <p className=\"card-media-title\">{media.title + (media.releaseYear && (' (' + media.releaseYear + ')'))}</p>\r\n                            <p className=\"card-media-type\">{'<' + props.type + '>'}</p>\r\n                            <FontAwesomeIcon className=\"card-media-delete-icon\" icon={faXmarkCircle} onClick={(e) => {\r\n                                e.stopPropagation();\r\n                                props.deleteMedia(media, props.type)\r\n                            }} />\r\n                        </Row>\r\n                    </div>\r\n                </FlippingCardBack>\r\n            </FlippingCard>\r\n        </>\r\n    )\r\n}","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\addmediatolist\\AddMediaToList.js",["466","467","468","469"],"import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCirclePlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {Dropdown, Row} from \"react-bootstrap\";\r\nimport './AddMediaToList.css';\r\nimport MedialistService from \"../../backend/medialist.service\";\r\nimport {setMediaLists} from \"../../../redux/slices/UserSlice\";\r\n//import {setMediaLists} from \"../../../redux/slices/UserSlice\";\r\n\r\nconst getMedialistType = type => (type === 'MEDIA_MOVIE' && 'movie') || (type === 'MEDIA_TV' && 'tv') || (type === 'MEDIA_GAME' && 'game') || 'all';\r\n\r\nexport function AddMediaToList(props) {\r\n    const accessToken = useSelector(state => state.user.accessToken);\r\n    const mediaLists = useSelector(state => state.user.mediaLists);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDropdownItemSelect = (eventKey, e) => {\r\n        console.log(eventKey);\r\n        const mediaListId = eventKey.target.id;\r\n        const mediaType = props.type;\r\n        console.log(props.playTime);\r\n        const media = {apiId: props.apiId, title: props.title, posterPath: props.posterPath, playTime: props.playTime, releaseYear: props.releaseYear};\r\n        if (mediaType === 'movie') {\r\n            MedialistService.addMovie(mediaListId, media, accessToken).then(response => {\r\n                MedialistService.getLists(accessToken).then(response =>\r\n                    response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n                );\r\n            });\r\n        } else if (mediaType === 'tv') {\r\n            MedialistService.addTv(mediaListId, media, accessToken).then(response => {\r\n                MedialistService.getLists(accessToken).then(response =>\r\n                    response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n                );\r\n            });\r\n        } else if (mediaType === 'game') {\r\n            MedialistService.addGame(mediaListId, media, accessToken).then(response => {\r\n                MedialistService.getLists(accessToken).then(response =>\r\n                    response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n                );\r\n            });\r\n        }\r\n    }\r\n\r\n    const mediaListNames = mediaLists.map(mediaList => (\r\n        <div key={mediaList.id}>\r\n            <Dropdown.Header>\r\n                <Row>\r\n                    <h6 style={{textAlign: \"center\"}}>\r\n                        {mediaList.name}\r\n                    </h6>\r\n                </Row>\r\n                <Row>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                        {\"<\" + getMedialistType(mediaList.mediaListType) + \">\"}\r\n                    </p>\r\n                </Row>\r\n            </Dropdown.Header>\r\n            <Dropdown.Item id={mediaList.id} onSelect={(eventKey, e) => onDropdownItemSelect(e)}>\r\n                + Add to list...\r\n            </Dropdown.Item>\r\n            <hr />\r\n        </div>\r\n    ));\r\n    return (\r\n        <>\r\n            <div className=\"add-media-list-dropdown\" style={{textAlign: \"center\"}}>\r\n                <Dropdown>\r\n                    <Dropdown.Toggle variant=\"info\">\r\n                        Add to Media List\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        {mediaListNames}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\search\\searchaddmediatolist\\SearchAddMediaToList.js",["470","471","472","473"],"import React, {useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Dropdown, Row} from \"react-bootstrap\";\r\nimport './SearchAddMediaToList.css';\r\nimport MedialistService from \"../../backend/medialist.service\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCirclePlus} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {setMediaLists} from \"../../../redux/slices/UserSlice\";\r\nimport * as config from \"../../../config.json\";\r\nimport {search} from \"../util\";\r\nimport MediaService from \"../../backend/media.service\";\r\n\r\nconst getMedialistType = type => (type === 'MEDIA_MOVIE' && 'movie') || (type === 'MEDIA_TV' && 'tv') || (type === 'MEDIA_GAME' && 'game') || 'all';\r\n\r\nexport function SearchAddMediaToList(props) {\r\n    const accessToken = useSelector(state => state.user.accessToken);\r\n    const mediaLists = useSelector(state => state.user.mediaLists);\r\n    const dispatch = useDispatch();\r\n\r\n    const onDropdownItemSelect = (eventKey, e) => {\r\n        console.log(eventKey);\r\n        const mediaListId = eventKey.target.id;\r\n        const mediaType = props.type;\r\n        let media = {apiId: props.apiId, title: props.title, posterPath: props.posterPath, playTime: 0, releaseYear: props.releaseYear};\r\n        if (mediaType === 'movie') {\r\n           MediaService.getMovie(props.apiId).then(response => {\r\n               media = {...media, playTime: response.data.runtime};\r\n               MedialistService.addMovie(mediaListId, media, accessToken).then(response => {\r\n                   MedialistService.getLists(accessToken).then(response =>\r\n                       response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n                   );\r\n                })\r\n               }\r\n           )\r\n\r\n        } else if (mediaType === 'tv') {\r\n            MediaService.getTv(props.apiId).then(response => {\r\n                console.log(response);\r\n                let episode_run_time = response.data.episode_run_time;\r\n                let episode_run_time_avg = (!episode_run_time || episode_run_time.length === 0 ? 0 : (episode_run_time.reduce((acc, curr) => acc + curr) / episode_run_time.length));\r\n                let total_playtime = response.data.number_of_episodes && (episode_run_time_avg * response.data.number_of_episodes)\r\n                media = {...media, playTime: total_playtime};\r\n                MedialistService.addTv(mediaListId, media, accessToken).then(response => {\r\n                    MedialistService.getLists(accessToken).then(response =>\r\n                        response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n                    );\r\n                });\r\n            });\r\n          } else if (mediaType === 'game') {\r\n            MediaService.getGame(props.apiId).then(response => {\r\n                media = {...media, playTime: response.data.playtime * 60};\r\n                MedialistService.addGame(mediaListId, media, accessToken).then(response => {\r\n                    MedialistService.getLists(accessToken).then(response =>\r\n                        response && response.status === 200 && response.data && dispatch((setMediaLists(response.data)))\r\n                    );\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    const mediaListNames = mediaLists.map(mediaList => (\r\n        <div key={mediaList.id}>\r\n            <Dropdown.Header>\r\n                <Row>\r\n                    <h6 style={{textAlign: \"center\"}}>\r\n                        {mediaList.name}\r\n                    </h6>\r\n                </Row>\r\n                <Row>\r\n                    <p style={{textAlign: \"center\"}}>\r\n                        {\"<\" + getMedialistType(mediaList.mediaListType) + \">\"}\r\n                    </p>\r\n                </Row>\r\n            </Dropdown.Header>\r\n            <Dropdown.Item id={mediaList.id} onSelect={(eventKey, e) => onDropdownItemSelect(e)}>\r\n                + Add\r\n            </Dropdown.Item>\r\n            <hr />\r\n        </div>\r\n    ));\r\n    return (\r\n        <>\r\n            <div className=\"search-add-media-list-dropdown\" style={{textAlign: \"center\"}}>\r\n                <Dropdown onClick={e => e.stopPropagation()}>\r\n                    <Dropdown.Toggle style={{\r\n                        backgroundColor: 'transparent',\r\n                        border: 'none'\r\n                    }}>\r\n                        <FontAwesomeIcon icon={faCirclePlus} style={{\r\n                            height: '20px'\r\n                        }}/>\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                        {mediaListNames}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\medialistcontainer\\addmedialist\\AddMediaList.js",[],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\pages\\Search.js",[],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\profilepage\\mediaplaytimegraph\\MediaPlaytimeGraph.js",["474","475","476"],"import {useSelector} from \"react-redux\";\r\nimport {BarSeries, Chart} from \"@devexpress/dx-react-chart\";\r\nimport {ResponsiveEmbed, Row} from \"react-bootstrap\";\r\nimport {ResponsiveContainer, BarChart, CartesianGrid, XAxis, YAxis, Tooltip, Legend, Bar} from \"recharts\";\r\nimport './MediaPlaytimeGraph.css';\r\n\r\nexport function MediaPlaytimeGraph(props) {\r\n\r\n    const isMobile = /Android|webOS|iPhone|kindle|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\r\n\r\n    const mediaLists = useSelector(state => state.user.mediaLists);\r\n\r\n    let moviePlaytimes = 0;\r\n    let tvPlaytimes = 0;\r\n    let gamePlaytimes = 0;\r\n\r\n    if (mediaLists)\r\n        mediaLists.forEach(mediaList => {\r\n            mediaList.movies.forEach(movie => {\r\n                moviePlaytimes += movie.playTime\r\n            });\r\n            mediaList.tvs.forEach(tv => {\r\n                tvPlaytimes += tv.playTime\r\n            });\r\n            mediaList.games.forEach(game => {\r\n                gamePlaytimes += game.playTime\r\n            });\r\n        });\r\n\r\n    const getHourTime = (value) => Math.floor(value / 60);\r\n    const getDayTime = (value) => Math.floor(getHourTime(value) / 24);\r\n    const getWeekTime = (value) => Math.floor(getDayTime(value) / 7);\r\n    const getMonthTime = (value) => Math.floor(getDayTime(value) / 30);\r\n    const getYearTime = (value) => Math.floor(getMonthTime(value) / 12);\r\n    const getHourTimeInMinutes = (value) => Math.floor(value * 60);\r\n    const getDayTimeInMinutes = (value) => Math.floor(getHourTimeInMinutes(value) * 24);\r\n    const getWeekTimeInMinutes = (value) => Math.floor(getDayTimeInMinutes(value) * 7);\r\n    const getMonthTimeInMinutes = (value) => Math.floor(getDayTimeInMinutes(value) * 30);\r\n    const getYearTimeInMinutes = (value) => Math.floor(getMonthTimeInMinutes(value) * 12);\r\n\r\n    console.log(moviePlaytimes);\r\n\r\n    const movieYearTime = getYearTime(moviePlaytimes);\r\n    moviePlaytimes -= getYearTimeInMinutes(movieYearTime);\r\n    const movieMonthTime = getMonthTime(moviePlaytimes);\r\n    moviePlaytimes -= getMonthTimeInMinutes(movieMonthTime);\r\n    const movieWeekTime = getWeekTime(moviePlaytimes);\r\n    moviePlaytimes -= getWeekTimeInMinutes(movieWeekTime);\r\n    const movieDayTime = getDayTime(moviePlaytimes);\r\n    moviePlaytimes -= getDayTimeInMinutes(movieDayTime);\r\n    const movieHourTime = getHourTime(moviePlaytimes);\r\n    moviePlaytimes -= getHourTimeInMinutes(movieHourTime);\r\n\r\n\r\n    console.log(movieYearTime);\r\n    console.log(movieMonthTime);\r\n    console.log(movieWeekTime);\r\n    console.log(movieDayTime);\r\n    console.log(movieHourTime);\r\n    console.log(moviePlaytimes)\r\n\r\n    const tvYearTime = getYearTime(tvPlaytimes);\r\n    tvPlaytimes -= getYearTimeInMinutes(tvYearTime);\r\n    const tvMonthTime = getMonthTime(tvPlaytimes);\r\n    tvPlaytimes -= getMonthTimeInMinutes(tvMonthTime);\r\n    const tvWeekTime = getWeekTime(tvPlaytimes);\r\n    tvPlaytimes -= getWeekTimeInMinutes(tvWeekTime);\r\n    const tvDayTime = getDayTime(tvPlaytimes);\r\n    tvPlaytimes -= getDayTimeInMinutes(tvDayTime);\r\n    const tvHourTime = getHourTime(tvPlaytimes);\r\n    tvPlaytimes -= getHourTimeInMinutes(tvHourTime);\r\n\r\n    const gameYearTime = getYearTime(gamePlaytimes);\r\n    gamePlaytimes -= getYearTimeInMinutes(gameYearTime);\r\n    const gameMonthTime = getMonthTime(gamePlaytimes);\r\n    gamePlaytimes -= getMonthTimeInMinutes(gameMonthTime);\r\n    const gameWeekTime = getWeekTime(gamePlaytimes);\r\n    gamePlaytimes -= getWeekTimeInMinutes(gameWeekTime);\r\n    const gameDayTime = getDayTime(gamePlaytimes);\r\n    gamePlaytimes -= getDayTimeInMinutes(gameDayTime);\r\n    const gameHourTime = getHourTime(gamePlaytimes);\r\n    gamePlaytimes -= getHourTimeInMinutes(gameHourTime);\r\n\r\n\r\n\r\n    const mediaPlaytimes = [\r\n        {name: 'Movies', years: movieYearTime, months: movieMonthTime, weeks: movieWeekTime, days: movieDayTime, hours: movieHourTime, minutes: moviePlaytimes},\r\n        {name: 'Tvs', years: tvYearTime, months: tvMonthTime, weeks: tvWeekTime, days: tvDayTime, hours: tvHourTime, minutes: tvPlaytimes},\r\n        {name: 'Games', years: gameYearTime, months: gameMonthTime, weeks: gameWeekTime, days: gameDayTime, hours: gameHourTime, minutes: gamePlaytimes}\r\n    ];\r\n\r\n    console.log(mediaPlaytimes);\r\n\r\n    return (\r\n        <>\r\n            <Row className=\"justify-content-center align-items-center\" style={{\r\n                height: '500px'\r\n            }}>\r\n                <ResponsiveContainer width={isMobile ? '90%' : '60%'} height='80%'>\r\n                    <BarChart width={500} height={300} layout='vertical' barCategoryGap={10} data={mediaPlaytimes} margin={{\r\n                        top: 5,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 2,\r\n                    }}>\r\n                        <CartesianGrid />\r\n                        <XAxis\r\n                            type=\"number\"\r\n                            domain={[0, 'dataMax + 10']}\r\n                            xAxisId=\"wmy\"\r\n                            orientation=\"top\"\r\n                            label={{value: \"Weeks Months Years\"}}\r\n                            stroke=\"white\"\r\n                        />\r\n                        <XAxis\r\n                            type=\"number\"\r\n                            domain={[0, 'dataMax + 10']}\r\n                            xAxisId=\"dhm\"\r\n                            orientation=\"bottom\"\r\n                            label={{value: \"Days - Hours - Minutes\"}}\r\n                            stroke=\"black\"\r\n                        />\r\n                        <YAxis\r\n                            dataKey=\"name\"\r\n                            type=\"category\"\r\n                        />\r\n                        <Tooltip />\r\n                        <Legend />\r\n                        <Bar dataKey=\"years\" xAxisId=\"wmy\" stackId=\"b\" fill=\"#590000FF\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"months\" xAxisId=\"wmy\"  stackId=\"b\" fill=\"#010169FF\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"weeks\" xAxisId=\"wmy\"  stackId=\"b\" fill=\"#004F00FF\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"days\" xAxisId=\"dhm\" stackId=\"a\" fill=\"#FF6767FF\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"hours\" xAxisId=\"dhm\"  stackId=\"a\" fill=\"#6464FFFF\" minPointSize={2} barSize={32} />\r\n                        <Bar dataKey=\"minutes\" xAxisId=\"dhm\"  stackId=\"a\" fill=\"#4fff4f\" minPointSize={2} barSize={32} />\r\n                    </BarChart>\r\n                </ResponsiveContainer>\r\n            </Row>\r\n        </>\r\n    )\r\n}","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\backend\\media.service.js",["477"],"import http from './http-common';\r\nimport config from '../../config.json';\r\nimport axios from \"axios\";\r\n\r\nclass MediaService {\r\n\r\n    getMovie(apiId) {\r\n        return axios.get(`https://api.themoviedb.org/3/movie/${apiId}?api_key=${config.config.keys.tmdb}`).catch(error => error.response);\r\n    }\r\n\r\n    getTv(apiId) {\r\n        return axios.get(`https://api.themoviedb.org/3/tv/${apiId}?api_key=${config.config.keys.tmdb}`).catch(error => error.response);\r\n    }\r\n\r\n    getGame(apiId) {\r\n        return axios.get(`https://api.rawg.io/api/games/${apiId}?key=${config.config.keys.rawg}`).catch(error => error.response);\r\n    }\r\n\r\n}\r\n\r\nexport default new MediaService();","C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\home\\homesearchbar\\HomeSearchBar.js",[],"C:\\Users\\me\\Desktop\\Projects\\myentertainmentlist\\react-myentertainmentlist\\src\\components\\home\\homegallery\\HomeGallery.js",["478","479","480","481"],"import Gallery from \"react-grid-gallery\";\r\nimport React, {useCallback, useEffect, useLayoutEffect, useState} from \"react\";\r\nimport * as config from \"../../../config.json\";\r\nimport {search} from \"../../search/util\";\r\nimport './HomeGallery.css';\r\n\r\nfunction waitForElm(selector) {\r\n    return new Promise(resolve => {\r\n        if (document.querySelector(selector)) {\r\n            return resolve(document.querySelector(selector));\r\n        }\r\n\r\n        const observer = new MutationObserver(mutations => {\r\n            if (document.querySelector(selector)) {\r\n                resolve(document.querySelector(selector));\r\n                observer.disconnect();\r\n            }\r\n        });\r\n\r\n        observer.observe(document.body, {\r\n            childList: true,\r\n            subtree: true\r\n        });\r\n    });\r\n}\r\n\r\nexport function HomeGallery(props) {\r\n    const [images, setImages] = useState([]);\r\n    const [windowResize, setWindowResize] = useState(false);\r\n    const updateTiles = () => {\r\n        let ogX = -100, ogY = -400, posX = ogX, posY = ogY, ogTranslateY = 61, numOfRows = 1;\r\n        let translateX = 265, translateY = ogTranslateY, tileHeight = 175;\r\n        document.querySelectorAll(\".ReactGridGallery_tile\").forEach((tile, i) => {\r\n            tile.style.display = 'initial';\r\n            tile.style.transform = 'scaleX(1) scaleY(1) scaleZ(1) rotateX(-3deg) rotateY(-34deg) rotateZ(16deg) translateX(0px) translateY(0px) translateZ(0px) skewX(-14deg) skewY(-7deg)';\r\n            tile.style.left = posX + 'px';\r\n            tile.style.top = posY + 'px';\r\n            posX += translateX;\r\n            posY += translateY;\r\n            if (posX > window.innerWidth) {\r\n                posX = ogX;\r\n                posY = tileHeight * numOfRows + ogY;\r\n                translateY = ogTranslateY;\r\n                numOfRows++;\r\n            }\r\n            if (posY > window.innerHeight + 200) {\r\n                tile.style.display = 'none';\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    useLayoutEffect(() => {\r\n        waitForElm(\".ReactGridGallery_tile\").then((elm) => {\r\n            updateTiles();\r\n        });\r\n        window.addEventListener('resize', updateTiles);\r\n        return () => window.removeEventListener('resize', updateTiles);\r\n    }, []);\r\n\r\n    const formatDate = date => date.getFullYear() + '-' + (date.getMonth() < 9 ? '0' : '') + (date.getMonth() + 1) + '-' + (date.getDate() < 9 ? '0' : '') + date.getDate();\r\n    const getFirstDate = date => (date.getMonth() <= 2 ? date.getFullYear() - 1 : date.getFullYear()) + '-' + (date.getMonth() < 9 ? '0' : '') + ((date.getMonth() <= 2 ? 11 - date.getMonth() : (date.getMonth() - 3)) + 1) + '-01';\r\n    const shuffleArray = (array) => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n        return array;\r\n    }\r\n\r\n    const getImages = useCallback(async() => {\r\n        const cConfig = config.default.config.links.tmdb;\r\n        const gConfig = config.default.config.links.rawg;\r\n\r\n        const currDate = new Date();\r\n\r\n        const fromDate = getFirstDate(currDate);\r\n        const toDate = formatDate(currDate);\r\n\r\n        const movieImagesResults = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor((Math.random() * 5) + 1)}`);\r\n        const movieImagesResults2 = await search(`${cConfig.discovermovie.link + cConfig.discovermovie.api_key + config.default.config.keys.tmdb + cConfig.discovermovie.query + '&page=' + Math.floor(5 + (Math.random() * 5) + 1)}`);\r\n\r\n        const tvImagesResults = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor((Math.random() * 5) + 1)}`);\r\n        const tvImagesResults2 = await search(`${cConfig.discovertv.link + cConfig.discovertv.api_key + config.default.config.keys.tmdb + cConfig.discovertv.query + '&page=' + Math.floor(5 + (Math.random() * 5) + 1)}`);\r\n\r\n        const gameImagesResults = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor((Math.random() * 5) + 1)}`);\r\n        const gameImagesResults2 = await search(`${gConfig.list.link + 'key=' + config.default.config.keys.rawg + '&dates=' + fromDate + ',' + toDate + '&page=' + Math.floor(5 + (Math.random() * 5) + 1)}`);\r\n\r\n        if (!movieImagesResults  || ! movieImagesResults2 || !tvImagesResults || !tvImagesResults2 || !gameImagesResults || !gameImagesResults2) return;\r\n        const movieImagesData = movieImagesResults[0].data.results.concat(movieImagesResults2[0].data.results);\r\n\r\n        const tvImagesData = tvImagesResults[0].data.results.concat(tvImagesResults2[0].data.results);\r\n\r\n        const gameImagesData = gameImagesResults[0].data.results.concat(gameImagesResults2[0].data.results);\r\n\r\n        const movieImagesProps = movieImagesData.filter(movie =>movie.backdrop_path).map((movie, i) => ({\r\n            src: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w300/' + movie.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        const tvImagesProps = tvImagesData.filter(tv => tv.backdrop_path).map((tv, i) => ({\r\n            src: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\r\n            thumbnail: `${cConfig.image.link + '/w300/' + tv.backdrop_path}`,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        const gameImagesProps = gameImagesData.filter(game => game.background_image).map((game, i) => ({\r\n            src: game.background_image,\r\n            thumbnail: game.background_image,\r\n            thumbnailWidth: 300,\r\n            thumbnailHeight: 169\r\n        }));\r\n\r\n        let movieIndexes = shuffleArray(Array.from(Array(movieImagesProps.length).keys()));\r\n        let tvIndexes = shuffleArray(Array.from(Array(tvImagesProps.length).keys()));\r\n        let gameIndexes = shuffleArray(Array.from(Array(gameImagesProps.length).keys()));\r\n\r\n        const imageProps = shuffleArray(\r\n            movieIndexes\r\n                .slice(0,25)\r\n                .map(i => movieImagesProps[i])\r\n            .concat(tvIndexes\r\n                .slice(0,25)\r\n                .map(i => tvImagesProps[i])\r\n            )\r\n            .concat(gameIndexes\r\n                .slice(0,10)\r\n                .map(i => gameImagesProps[i])\r\n            )\r\n        );\r\n\r\n        console.log(imageProps);\r\n\r\n        setImages(imageProps);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getImages()\r\n    }, [getImages]);\r\n\r\n    return (\r\n        <>\r\n            <div className='gallery-gradient' />\r\n            <div className='gallery-container' style={{\r\n                display: \"block\",\r\n                minHeight: \"1px\",\r\n                width: \"100%\",\r\n                overflow: \"hidden\",\r\n                position: 'absolute',\r\n                cursor: 'none',\r\n                zIndex: '-2',\r\n                top: '-30%',\r\n                left: '-30%'\r\n            }}>\r\n                {images.map((image, i) => {\r\n                    return (\r\n                    <img key={i}\r\n                        className='ReactGridGallery_tile'\r\n                        src={image.thumbnail}\r\n                        style={{\r\n                            width: image.thumbnailWidth,\r\n                            height: image.thumbnailHeight,\r\n                            position: 'fixed',\r\n                            zIndex: 2000\r\n                        }}\r\n                    />\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n",{"ruleId":"482","replacedBy":"483"},{"ruleId":"484","replacedBy":"485"},{"ruleId":"486","severity":1,"message":"487","line":3,"column":8,"nodeType":"488","messageId":"489","endLine":3,"endColumn":14},{"ruleId":"486","severity":1,"message":"490","line":4,"column":9,"nodeType":"488","messageId":"489","endLine":4,"endColumn":16},{"ruleId":"486","severity":1,"message":"491","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":20},{"ruleId":"492","severity":1,"message":"493","line":14,"column":5,"nodeType":"494","messageId":"495","endLine":16,"endColumn":6},{"ruleId":"482","replacedBy":"496"},{"ruleId":"484","replacedBy":"497"},{"ruleId":"486","severity":1,"message":"498","line":3,"column":10,"nodeType":"488","messageId":"489","endLine":3,"endColumn":13},{"ruleId":"486","severity":1,"message":"499","line":3,"column":15,"nodeType":"488","messageId":"489","endLine":3,"endColumn":18},{"ruleId":"486","severity":1,"message":"500","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":17},{"ruleId":"486","severity":1,"message":"501","line":7,"column":9,"nodeType":"488","messageId":"489","endLine":7,"endColumn":13},{"ruleId":"486","severity":1,"message":"502","line":9,"column":8,"nodeType":"488","messageId":"489","endLine":9,"endColumn":17},{"ruleId":"486","severity":1,"message":"503","line":13,"column":8,"nodeType":"488","messageId":"489","endLine":13,"endColumn":17},{"ruleId":"504","severity":1,"message":"505","line":101,"column":64,"nodeType":"506","messageId":"507","endLine":101,"endColumn":66},{"ruleId":"504","severity":1,"message":"505","line":102,"column":66,"nodeType":"506","messageId":"507","endLine":102,"endColumn":68},{"ruleId":"508","severity":1,"message":"509","line":123,"column":90,"nodeType":"506","messageId":"510","endLine":123,"endColumn":91},{"ruleId":"511","severity":1,"message":"512","line":159,"column":32,"nodeType":"513","messageId":"514","endLine":159,"endColumn":40},{"ruleId":"486","severity":1,"message":"498","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":12},{"ruleId":"486","severity":1,"message":"515","line":2,"column":19,"nodeType":"488","messageId":"489","endLine":2,"endColumn":23},{"ruleId":"486","severity":1,"message":"516","line":12,"column":7,"nodeType":"488","messageId":"489","endLine":12,"endColumn":21},{"ruleId":"486","severity":1,"message":"517","line":21,"column":7,"nodeType":"488","messageId":"489","endLine":21,"endColumn":26},{"ruleId":"486","severity":1,"message":"518","line":43,"column":13,"nodeType":"488","messageId":"489","endLine":43,"endColumn":15},{"ruleId":"486","severity":1,"message":"519","line":164,"column":15,"nodeType":"488","messageId":"489","endLine":164,"endColumn":34},{"ruleId":"520","severity":1,"message":"521","line":28,"column":9,"nodeType":"522","endLine":28,"endColumn":79},{"ruleId":"486","severity":1,"message":"523","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":21},{"ruleId":"520","severity":1,"message":"521","line":48,"column":11,"nodeType":"522","endLine":48,"endColumn":45},{"ruleId":"486","severity":1,"message":"524","line":3,"column":13,"nodeType":"488","messageId":"489","endLine":3,"endColumn":19},{"ruleId":"486","severity":1,"message":"502","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":17},{"ruleId":"486","severity":1,"message":"525","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":15},{"ruleId":"486","severity":1,"message":"526","line":6,"column":8,"nodeType":"488","messageId":"489","endLine":6,"endColumn":23},{"ruleId":"504","severity":1,"message":"527","line":42,"column":48,"nodeType":"506","messageId":"507","endLine":42,"endColumn":50},{"ruleId":"504","severity":1,"message":"527","line":44,"column":54,"nodeType":"506","messageId":"507","endLine":44,"endColumn":56},{"ruleId":"486","severity":1,"message":"528","line":1,"column":27,"nodeType":"488","messageId":"489","endLine":1,"endColumn":36},{"ruleId":"486","severity":1,"message":"529","line":1,"column":38,"nodeType":"488","messageId":"489","endLine":1,"endColumn":46},{"ruleId":"486","severity":1,"message":"502","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":17},{"ruleId":"486","severity":1,"message":"530","line":8,"column":9,"nodeType":"488","messageId":"489","endLine":8,"endColumn":17},{"ruleId":"486","severity":1,"message":"531","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":18},{"ruleId":"532","severity":1,"message":"533","line":13,"column":36,"nodeType":"534","messageId":"535","endLine":13,"endColumn":37,"suggestions":"536"},{"ruleId":"532","severity":1,"message":"533","line":13,"column":52,"nodeType":"534","messageId":"535","endLine":13,"endColumn":53,"suggestions":"537"},{"ruleId":"486","severity":1,"message":"538","line":1,"column":9,"nodeType":"488","messageId":"489","endLine":1,"endColumn":24},{"ruleId":"486","severity":1,"message":"539","line":3,"column":8,"nodeType":"488","messageId":"489","endLine":3,"endColumn":24},{"ruleId":"486","severity":1,"message":"540","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":21},{"ruleId":"486","severity":1,"message":"523","line":6,"column":9,"nodeType":"488","messageId":"489","endLine":6,"endColumn":21},{"ruleId":"486","severity":1,"message":"491","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":20},{"ruleId":"486","severity":1,"message":"523","line":3,"column":9,"nodeType":"488","messageId":"489","endLine":3,"endColumn":21},{"ruleId":"486","severity":1,"message":"541","line":4,"column":9,"nodeType":"488","messageId":"489","endLine":4,"endColumn":15},{"ruleId":"486","severity":1,"message":"515","line":4,"column":17,"nodeType":"488","messageId":"489","endLine":4,"endColumn":21},{"ruleId":"486","severity":1,"message":"498","line":4,"column":23,"nodeType":"488","messageId":"489","endLine":4,"endColumn":26},{"ruleId":"486","severity":1,"message":"499","line":4,"column":28,"nodeType":"488","messageId":"489","endLine":4,"endColumn":31},{"ruleId":"486","severity":1,"message":"542","line":4,"column":33,"nodeType":"488","messageId":"489","endLine":4,"endColumn":37},{"ruleId":"486","severity":1,"message":"539","line":6,"column":8,"nodeType":"488","messageId":"489","endLine":6,"endColumn":24},{"ruleId":"486","severity":1,"message":"543","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":20},{"ruleId":"544","severity":1,"message":"545","line":9,"column":5,"nodeType":"522","endLine":17,"endColumn":6},{"ruleId":"486","severity":1,"message":"546","line":25,"column":23,"nodeType":"488","messageId":"489","endLine":25,"endColumn":31},{"ruleId":"486","severity":1,"message":"547","line":47,"column":7,"nodeType":"488","messageId":"489","endLine":47,"endColumn":19},{"ruleId":"486","severity":1,"message":"499","line":3,"column":9,"nodeType":"488","messageId":"489","endLine":3,"endColumn":12},{"ruleId":"486","severity":1,"message":"498","line":3,"column":14,"nodeType":"488","messageId":"489","endLine":3,"endColumn":17},{"ruleId":"486","severity":1,"message":"548","line":3,"column":19,"nodeType":"488","messageId":"489","endLine":3,"endColumn":28},{"ruleId":"486","severity":1,"message":"543","line":3,"column":43,"nodeType":"488","messageId":"489","endLine":3,"endColumn":54},{"ruleId":"486","severity":1,"message":"549","line":6,"column":10,"nodeType":"488","messageId":"489","endLine":6,"endColumn":16},{"ruleId":"492","severity":1,"message":"493","line":10,"column":5,"nodeType":"494","messageId":"495","endLine":12,"endColumn":6},{"ruleId":"486","severity":1,"message":"550","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":20},{"ruleId":"486","severity":1,"message":"551","line":3,"column":9,"nodeType":"488","messageId":"489","endLine":3,"endColumn":24},{"ruleId":"486","severity":1,"message":"552","line":4,"column":9,"nodeType":"488","messageId":"489","endLine":4,"endColumn":21},{"ruleId":"486","severity":1,"message":"553","line":8,"column":9,"nodeType":"488","messageId":"489","endLine":8,"endColumn":22},{"ruleId":"486","severity":1,"message":"524","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":14},{"ruleId":"486","severity":1,"message":"542","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":13},{"ruleId":"486","severity":1,"message":"554","line":2,"column":30,"nodeType":"488","messageId":"489","endLine":2,"endColumn":35},{"ruleId":"486","severity":1,"message":"555","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":21},{"ruleId":"486","severity":1,"message":"556","line":5,"column":23,"nodeType":"488","messageId":"489","endLine":5,"endColumn":39},{"ruleId":"486","severity":1,"message":"557","line":5,"column":41,"nodeType":"488","messageId":"489","endLine":5,"endColumn":58},{"ruleId":"486","severity":1,"message":"558","line":8,"column":7,"nodeType":"488","messageId":"489","endLine":8,"endColumn":23},{"ruleId":"486","severity":1,"message":"528","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":18},{"ruleId":"482","replacedBy":"559"},{"ruleId":"484","replacedBy":"560"},{"ruleId":"486","severity":1,"message":"487","line":3,"column":8,"nodeType":"488","messageId":"489","endLine":3,"endColumn":14},{"ruleId":"486","severity":1,"message":"490","line":4,"column":9,"nodeType":"488","messageId":"489","endLine":4,"endColumn":16},{"ruleId":"486","severity":1,"message":"491","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":20},{"ruleId":"486","severity":1,"message":"538","line":1,"column":9,"nodeType":"488","messageId":"489","endLine":1,"endColumn":24},{"ruleId":"486","severity":1,"message":"561","line":4,"column":8,"nodeType":"488","messageId":"489","endLine":4,"endColumn":15},{"ruleId":"486","severity":1,"message":"562","line":12,"column":8,"nodeType":"488","messageId":"489","endLine":12,"endColumn":19},{"ruleId":"492","severity":1,"message":"493","line":15,"column":5,"nodeType":"494","messageId":"495","endLine":17,"endColumn":6},{"ruleId":"486","severity":1,"message":"499","line":3,"column":9,"nodeType":"488","messageId":"489","endLine":3,"endColumn":12},{"ruleId":"486","severity":1,"message":"498","line":3,"column":14,"nodeType":"488","messageId":"489","endLine":3,"endColumn":17},{"ruleId":"486","severity":1,"message":"548","line":3,"column":19,"nodeType":"488","messageId":"489","endLine":3,"endColumn":28},{"ruleId":"486","severity":1,"message":"543","line":3,"column":43,"nodeType":"488","messageId":"489","endLine":3,"endColumn":54},{"ruleId":"486","severity":1,"message":"549","line":6,"column":10,"nodeType":"488","messageId":"489","endLine":6,"endColumn":16},{"ruleId":"492","severity":1,"message":"493","line":10,"column":5,"nodeType":"494","messageId":"495","endLine":12,"endColumn":6},{"ruleId":"486","severity":1,"message":"563","line":1,"column":9,"nodeType":"488","messageId":"489","endLine":1,"endColumn":25},{"ruleId":"486","severity":1,"message":"561","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":15},{"ruleId":"486","severity":1,"message":"539","line":3,"column":8,"nodeType":"488","messageId":"489","endLine":3,"endColumn":24},{"ruleId":"486","severity":1,"message":"501","line":7,"column":9,"nodeType":"488","messageId":"489","endLine":7,"endColumn":13},{"ruleId":"486","severity":1,"message":"502","line":9,"column":8,"nodeType":"488","messageId":"489","endLine":9,"endColumn":17},{"ruleId":"486","severity":1,"message":"503","line":13,"column":8,"nodeType":"488","messageId":"489","endLine":13,"endColumn":17},{"ruleId":"504","severity":1,"message":"505","line":108,"column":64,"nodeType":"506","messageId":"507","endLine":108,"endColumn":66},{"ruleId":"504","severity":1,"message":"505","line":109,"column":66,"nodeType":"506","messageId":"507","endLine":109,"endColumn":68},{"ruleId":"508","severity":1,"message":"509","line":138,"column":90,"nodeType":"506","messageId":"510","endLine":138,"endColumn":91},{"ruleId":"511","severity":1,"message":"512","line":174,"column":32,"nodeType":"513","messageId":"514","endLine":174,"endColumn":40},{"ruleId":"486","severity":1,"message":"502","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":17},{"ruleId":"486","severity":1,"message":"525","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":15},{"ruleId":"486","severity":1,"message":"526","line":6,"column":8,"nodeType":"488","messageId":"489","endLine":6,"endColumn":23},{"ruleId":"504","severity":1,"message":"527","line":42,"column":48,"nodeType":"506","messageId":"507","endLine":42,"endColumn":50},{"ruleId":"504","severity":1,"message":"527","line":44,"column":54,"nodeType":"506","messageId":"507","endLine":44,"endColumn":56},{"ruleId":"486","severity":1,"message":"502","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":17},{"ruleId":"486","severity":1,"message":"498","line":3,"column":10,"nodeType":"488","messageId":"489","endLine":3,"endColumn":13},{"ruleId":"486","severity":1,"message":"499","line":3,"column":15,"nodeType":"488","messageId":"489","endLine":3,"endColumn":18},{"ruleId":"486","severity":1,"message":"500","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":17},{"ruleId":"486","severity":1,"message":"524","line":6,"column":13,"nodeType":"488","messageId":"489","endLine":6,"endColumn":19},{"ruleId":"486","severity":1,"message":"525","line":7,"column":9,"nodeType":"488","messageId":"489","endLine":7,"endColumn":15},{"ruleId":"486","severity":1,"message":"564","line":8,"column":8,"nodeType":"488","messageId":"489","endLine":8,"endColumn":15},{"ruleId":"492","severity":1,"message":"493","line":15,"column":5,"nodeType":"494","messageId":"495","endLine":17,"endColumn":6},{"ruleId":"486","severity":1,"message":"528","line":1,"column":27,"nodeType":"488","messageId":"489","endLine":1,"endColumn":36},{"ruleId":"486","severity":1,"message":"529","line":1,"column":38,"nodeType":"488","messageId":"489","endLine":1,"endColumn":46},{"ruleId":"486","severity":1,"message":"502","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":17},{"ruleId":"486","severity":1,"message":"530","line":8,"column":9,"nodeType":"488","messageId":"489","endLine":8,"endColumn":17},{"ruleId":"486","severity":1,"message":"540","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":21},{"ruleId":"486","severity":1,"message":"565","line":2,"column":23,"nodeType":"488","messageId":"489","endLine":2,"endColumn":38},{"ruleId":"486","severity":1,"message":"566","line":6,"column":9,"nodeType":"488","messageId":"489","endLine":6,"endColumn":23},{"ruleId":"486","severity":1,"message":"543","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":20},{"ruleId":"544","severity":1,"message":"545","line":9,"column":5,"nodeType":"522","endLine":17,"endColumn":6},{"ruleId":"486","severity":1,"message":"546","line":25,"column":23,"nodeType":"488","messageId":"489","endLine":25,"endColumn":31},{"ruleId":"486","severity":1,"message":"547","line":47,"column":7,"nodeType":"488","messageId":"489","endLine":47,"endColumn":19},{"ruleId":"486","severity":1,"message":"498","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":12},{"ruleId":"486","severity":1,"message":"515","line":2,"column":19,"nodeType":"488","messageId":"489","endLine":2,"endColumn":23},{"ruleId":"486","severity":1,"message":"516","line":12,"column":7,"nodeType":"488","messageId":"489","endLine":12,"endColumn":21},{"ruleId":"486","severity":1,"message":"517","line":21,"column":7,"nodeType":"488","messageId":"489","endLine":21,"endColumn":26},{"ruleId":"486","severity":1,"message":"518","line":43,"column":13,"nodeType":"488","messageId":"489","endLine":43,"endColumn":15},{"ruleId":"486","severity":1,"message":"519","line":164,"column":15,"nodeType":"488","messageId":"489","endLine":164,"endColumn":34},{"ruleId":"486","severity":1,"message":"524","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":14},{"ruleId":"532","severity":1,"message":"533","line":13,"column":36,"nodeType":"534","messageId":"535","endLine":13,"endColumn":37,"suggestions":"567"},{"ruleId":"532","severity":1,"message":"533","line":13,"column":52,"nodeType":"534","messageId":"535","endLine":13,"endColumn":53,"suggestions":"568"},{"ruleId":"486","severity":1,"message":"531","line":2,"column":8,"nodeType":"488","messageId":"489","endLine":2,"endColumn":18},{"ruleId":"486","severity":1,"message":"551","line":3,"column":9,"nodeType":"488","messageId":"489","endLine":3,"endColumn":24},{"ruleId":"486","severity":1,"message":"569","line":4,"column":9,"nodeType":"488","messageId":"489","endLine":4,"endColumn":17},{"ruleId":"486","severity":1,"message":"541","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":15},{"ruleId":"486","severity":1,"message":"515","line":5,"column":17,"nodeType":"488","messageId":"489","endLine":5,"endColumn":21},{"ruleId":"486","severity":1,"message":"542","line":5,"column":33,"nodeType":"488","messageId":"489","endLine":5,"endColumn":37},{"ruleId":"570","severity":1,"message":"571","line":42,"column":5,"nodeType":"488","endLine":42,"endColumn":14,"suggestions":"572"},{"ruleId":"486","severity":1,"message":"524","line":4,"column":13,"nodeType":"488","messageId":"489","endLine":4,"endColumn":19},{"ruleId":"486","severity":1,"message":"573","line":5,"column":8,"nodeType":"488","messageId":"489","endLine":5,"endColumn":21},{"ruleId":"520","severity":1,"message":"521","line":32,"column":16,"nodeType":"522","endLine":32,"endColumn":86},{"ruleId":"486","severity":1,"message":"541","line":2,"column":19,"nodeType":"488","messageId":"489","endLine":2,"endColumn":25},{"ruleId":"486","severity":1,"message":"566","line":5,"column":9,"nodeType":"488","messageId":"489","endLine":5,"endColumn":23},{"ruleId":"520","severity":1,"message":"521","line":51,"column":11,"nodeType":"522","endLine":51,"endColumn":45},{"ruleId":"486","severity":1,"message":"542","line":2,"column":17,"nodeType":"488","messageId":"489","endLine":2,"endColumn":21},{"ruleId":"486","severity":1,"message":"574","line":2,"column":38,"nodeType":"488","messageId":"489","endLine":2,"endColumn":42},{"ruleId":"486","severity":1,"message":"554","line":2,"column":44,"nodeType":"488","messageId":"489","endLine":2,"endColumn":49},{"ruleId":"486","severity":1,"message":"555","line":4,"column":9,"nodeType":"488","messageId":"489","endLine":4,"endColumn":21},{"ruleId":"486","severity":1,"message":"556","line":4,"column":23,"nodeType":"488","messageId":"489","endLine":4,"endColumn":39},{"ruleId":"486","severity":1,"message":"557","line":4,"column":41,"nodeType":"488","messageId":"489","endLine":4,"endColumn":58},{"ruleId":"486","severity":1,"message":"558","line":11,"column":7,"nodeType":"488","messageId":"489","endLine":11,"endColumn":23},{"ruleId":"486","severity":1,"message":"575","line":20,"column":12,"nodeType":"488","messageId":"489","endLine":20,"endColumn":26},{"ruleId":"486","severity":1,"message":"576","line":22,"column":11,"nodeType":"488","messageId":"489","endLine":22,"endColumn":31},{"ruleId":"570","severity":1,"message":"577","line":42,"column":141,"nodeType":"578","endLine":42,"endColumn":153,"suggestions":"579"},{"ruleId":"486","severity":1,"message":"580","line":1,"column":16,"nodeType":"488","messageId":"489","endLine":1,"endColumn":25},{"ruleId":"570","severity":1,"message":"581","line":31,"column":8,"nodeType":"578","endLine":31,"endColumn":90,"suggestions":"582"},{"ruleId":"486","severity":1,"message":"583","line":26,"column":11,"nodeType":"488","messageId":"489","endLine":26,"endColumn":18},{"ruleId":"486","severity":1,"message":"580","line":1,"column":16,"nodeType":"488","messageId":"489","endLine":1,"endColumn":25},{"ruleId":"486","severity":1,"message":"524","line":3,"column":13,"nodeType":"488","messageId":"489","endLine":3,"endColumn":19},{"ruleId":"486","severity":1,"message":"528","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":18},{"ruleId":"486","severity":1,"message":"528","line":1,"column":16,"nodeType":"488","messageId":"489","endLine":1,"endColumn":25},{"ruleId":"486","severity":1,"message":"529","line":1,"column":27,"nodeType":"488","messageId":"489","endLine":1,"endColumn":35},{"ruleId":"486","severity":1,"message":"551","line":3,"column":9,"nodeType":"488","messageId":"489","endLine":3,"endColumn":24},{"ruleId":"486","severity":1,"message":"552","line":4,"column":9,"nodeType":"488","messageId":"489","endLine":4,"endColumn":21},{"ruleId":"486","severity":1,"message":"528","line":1,"column":16,"nodeType":"488","messageId":"489","endLine":1,"endColumn":25},{"ruleId":"486","severity":1,"message":"529","line":1,"column":27,"nodeType":"488","messageId":"489","endLine":1,"endColumn":35},{"ruleId":"486","severity":1,"message":"524","line":9,"column":13,"nodeType":"488","messageId":"489","endLine":9,"endColumn":19},{"ruleId":"486","severity":1,"message":"525","line":10,"column":9,"nodeType":"488","messageId":"489","endLine":10,"endColumn":15},{"ruleId":"486","severity":1,"message":"584","line":2,"column":9,"nodeType":"488","messageId":"489","endLine":2,"endColumn":18},{"ruleId":"486","severity":1,"message":"585","line":2,"column":20,"nodeType":"488","messageId":"489","endLine":2,"endColumn":25},{"ruleId":"486","severity":1,"message":"586","line":3,"column":9,"nodeType":"488","messageId":"489","endLine":3,"endColumn":24},{"ruleId":"486","severity":1,"message":"587","line":1,"column":8,"nodeType":"488","messageId":"489","endLine":1,"endColumn":12},{"ruleId":"486","severity":1,"message":"564","line":1,"column":8,"nodeType":"488","messageId":"489","endLine":1,"endColumn":15},{"ruleId":"486","severity":1,"message":"588","line":29,"column":12,"nodeType":"488","messageId":"489","endLine":29,"endColumn":24},{"ruleId":"486","severity":1,"message":"589","line":29,"column":26,"nodeType":"488","messageId":"489","endLine":29,"endColumn":41},{"ruleId":"520","severity":1,"message":"521","line":160,"column":21,"nodeType":"522","endLine":169,"endColumn":23},"no-native-reassign",["590"],"no-negated-in-lhs",["591"],"no-unused-vars","'NavBar' is defined but never used.","Identifier","unusedVar","'Spinner' is defined but never used.","'useSelector' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["590"],["591"],"'Row' is defined but never used.","'Col' is defined but never used.","'UserInfo' is defined but never used.","'Link' is defined but never used.","'SearchBar' is defined but never used.","'AppNavBar' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-self-assign","'store.id' is assigned to itself.","MemberExpression","selfAssignment","'Form' is defined but never used.","'searchBarStyle' is assigned a value but never used.","'searchBarStyleFocus' is assigned a value but never used.","'t0' is assigned a value but never used.","'CustomAsyncPaginate' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AddMediaList' is defined but never used.","'config' is defined but never used.","'search' is defined but never used.","'UserDataService' is defined but never used.","Expected '===' and instead saw '=='.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Redirect' is defined but never used.","'AxiosError' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["592","593"],["594","595"],"'combineReducers' is defined but never used.","'MedialistService' is defined but never used.","'loginSuccess' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'NavDropdown' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setValue' is assigned a value but never used.","'toggleLogout' is assigned a value but never used.","'Container' is defined but never used.","'logout' is defined but never used.","'useDispatch' is defined but never used.","'FontAwesomeIcon' is defined but never used.","'faCirclePlus' is defined but never used.","'setMediaLists' is defined but never used.","'Image' is defined but never used.","'FlippingCard' is defined but never used.","'FlippingCardBack' is defined but never used.","'FlippingCardFront' is defined but never used.","'getMedialistType' is assigned a value but never used.",["590"],["591"],"'Cookies' is defined but never used.","'UserService' is defined but never used.","'createAsyncThunk' is defined but never used.","'Gallery' is defined but never used.","'resetMediaLists' is defined but never used.","'AddMediaToList' is defined but never used.",["596","597"],["598","599"],"'faCircle' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getBgImage'. Either include it or remove the dependency array.",["600"],"'defaultposter' is defined but never used.","'Fade' is defined but never used.","'resetMediaList' is assigned a value but never used.","'mediaContainerEndRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'selectedMediaList'. Either include it or remove the dependency array. You can also do a functional update 'setSelectedMediaList(s => ...)' if you only need 'selectedMediaList' in the 'setSelectedMediaList' call.","ArrayExpression",["601"],"'Component' is defined but never used.","React Hook useEffect has a missing dependency: 'getLogos'. Either include it or remove the dependency array.",["602"],"'isSmall' is assigned a value but never used.","'BarSeries' is defined but never used.","'Chart' is defined but never used.","'ResponsiveEmbed' is defined but never used.","'http' is defined but never used.","'windowResize' is assigned a value but never used.","'setWindowResize' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"messageId":"603","fix":"604","desc":"605"},{"messageId":"606","fix":"607","desc":"608"},{"messageId":"603","fix":"609","desc":"605"},{"messageId":"606","fix":"610","desc":"608"},{"messageId":"603","fix":"611","desc":"605"},{"messageId":"606","fix":"612","desc":"608"},{"messageId":"603","fix":"613","desc":"605"},{"messageId":"606","fix":"614","desc":"608"},{"desc":"615","fix":"616"},{"desc":"617","fix":"618"},{"desc":"619","fix":"620"},"removeEscape",{"range":"621","text":"622"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"623","text":"624"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"625","text":"622"},{"range":"626","text":"624"},{"range":"627","text":"622"},{"range":"628","text":"624"},{"range":"629","text":"622"},{"range":"630","text":"624"},"Update the dependencies array to be: [getBgImage]",{"range":"631","text":"632"},"Update the dependencies array to be: [mediaLists, selectedMediaList]",{"range":"633","text":"634"},"Update the dependencies array to be: [props.list, props.idValue, props.nameValue, props.hasLogo, props.title, props.id, getLogos]",{"range":"635","text":"636"},[326,327],"",[326,326],"\\",[342,343],[342,342],[326,327],[326,326],[342,343],[342,342],[1963,1965],"[getBgImage]",[1728,1740],"[mediaLists, selectedMediaList]",[1144,1226],"[props.list, props.idValue, props.nameValue, props.hasLogo, props.title, props.id, getLogos]"]